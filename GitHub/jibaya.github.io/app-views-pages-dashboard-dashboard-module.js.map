{"version":3,"sources":["webpack:///./node_modules/@covalent/core/fesm5/covalent-core-data-table.js","webpack:///./node_modules/@covalent/core/fesm5/covalent-core-layout.js","webpack:///./src/app/views/pages/dashboard/dashboard.component.html","webpack:///./src/app/views/pages/dashboard/dashboard.component.scss","webpack:///./src/app/views/pages/dashboard/dashboard.component.ts","webpack:///./src/app/views/pages/dashboard/dashboard.module.ts","webpack:///./src/app/views/pages/dashboard/data.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACF;AACN;AACU;AACR;AACA;AACN;AACW;AACa;AAC5C;AACe;AACF;AACkB;AACI;AACqP;;AAEvT;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAS;AACzB;AACA;AACA;AACA,oCAAoC,0BAA0B,wBAAwB,wBAAwB,YAAY,+BAA+B,YAAY;AACrK,iBAAiB;AACjB;AACA;AACA,gEAAgE;AAChE,SAAS,OAAO,yDAAU,EAAE;AAC5B,SAAS,OAAO,wDAAS;AACzB,MAAM;AACN;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,sCAAsC,EAAE;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAS;AACzB;AACA;AACA;AACA,oCAAoC,0BAA0B,wBAAwB,wBAAwB,YAAY,+BAA+B,YAAY;AACrK,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS,OAAO,yDAAU,EAAE;AAC5B,SAAS,OAAO,wDAAS;AACzB,MAAM;AACN;AACA,oBAAoB,OAAO,oDAAK,uBAAuB;AACvD,yBAAyB,OAAO,2DAAY,oBAAoB;AAChE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA,IAAI,wDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAS,UAAU,+CAA+C;AAClF;AACA;AACA,+DAA+D;AAC/D,SAAS,OAAO,0DAAW,EAAE;AAC7B,SAAS,OAAO,+DAAgB;AAChC,MAAM;AACN;AACA,+BAA+B,OAAO,oDAAK,EAAE;AAC7C;AACA;AACA,CAAC,CAAC,4EAAuB;;AAEzB;AACA;AACA,cAAc,kDAAkD;AAChE;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb,4BAA4B,wFAAyB;AACrD;AACA,IAAI,wDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C;AACA,8BAA8B,4CAAO;AACrC;AACA,wCAAwC,4CAAO;AAC/C,sCAAsC,4CAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,2DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2DAA2D,qBAAqB,EAAE;AAClF,6CAA6C,oBAAoB;AACjE;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qCAAqC,mFAAqB;AAC1D,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,+BAA+B,mFAAqB;AACpD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,8BAA8B,mFAAqB;AACnD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,yDAAyD,8BAA8B,EAAE;AACzF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA,0EAA0E,oEAAY;AACtF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,sCAAsC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,wDAAwD,oEAAY;AACpE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,qBAAqB;AACrB,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,+BAA+B,uCAAuC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,yCAAyC,EAAE;AAC3C;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB;AAC5D,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kDAAkD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,iBAAiB,2DAAK;AACtB,iBAAiB,2DAAK;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oDAAoD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qEAAqE,gCAAgC,EAAE;AACvG;AACA;AACA,8BAA8B,uDAAQ,6BAA6B,UAAU;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kEAAkE,oBAAoB,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAS;AACzB;AACA,qCAAqC,gEAAiB;AACtD,yCAAyC,iEAAU,cAAc,6BAA6B,EAAE;AAChG;AACA,yBAAyB;AACzB;AACA,snBAAsnB,sVAAsV,eAAe,6gBAA6gB,cAAc,mvCAAmvC,67BAA67B,4LAA4L,sFAAsF,6LAA6L,mFAAmF;AACxsI;AACA,qCAAqC,sEAAuB;AAC5D,oCAAoC,cAAc,gBAAgB,gCAAgC,kBAAkB,cAAc,yBAAyB,8BAA8B,QAAQ,UAAU,kBAAkB,4FAA4F,kBAAkB,YAAY,MAAM,8DAA8D,SAAS,0CAA0C,wBAAwB,oBAAoB,qBAAqB,8DAA8D,wCAAwC,gCAAgC,mUAAmU,WAAW,eAAe,eAAe,sUAAsU,eAAe,oWAAoW,gBAAgB,kBAAkB,oFAAoF,eAAe,WAAW,sBAAsB,4HAA4H,WAAW,YAAY,sNAAsN,qBAAqB,qBAAqB,8LAA8L,WAAW,YAAY,SAAS;AACj9E,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,gCAAgC,OAAO,uDAAQ,EAAE,GAAG,OAAO,qDAAM,SAAS,wDAAQ,IAAI,GAAG;AAClG,SAAS,OAAO,yDAAU,EAAE;AAC5B,SAAS,OAAO,sEAAY,EAAE;AAC9B,SAAS,OAAO,gEAAiB;AACjC,MAAM;AACN;AACA,sBAAsB,OAAO,8DAAe,yCAAyC;AACrF,0BAA0B,OAAO,wDAAS,4BAA4B;AACtE,wBAAwB,OAAO,2DAAY,4BAA4B;AACvE,iBAAiB,OAAO,2DAAY,oCAAoC;AACxE,gBAAgB,OAAO,oDAAK,mBAAmB;AAC/C,mBAAmB,OAAO,oDAAK,sBAAsB;AACrD,4BAA4B,OAAO,oDAAK,+BAA+B;AACvE,sBAAsB,OAAO,oDAAK,yBAAyB;AAC3D,qBAAqB,OAAO,oDAAK,wBAAwB;AACzD,oBAAoB,OAAO,oDAAK,uBAAuB;AACvD,oBAAoB,OAAO,oDAAK,uBAAuB;AACvD,kBAAkB,OAAO,oDAAK,qBAAqB;AACnD,qBAAqB,OAAO,oDAAK,wBAAwB;AACzD,wBAAwB,OAAO,qDAAM,yBAAyB;AAC9D,uBAAuB,OAAO,qDAAM,wBAAwB;AAC5D,sBAAsB,OAAO,qDAAM,uBAAuB;AAC1D,uBAAuB,OAAO,qDAAM,wBAAwB;AAC5D,uBAAuB,OAAO,oDAAK,0BAA0B;AAC7D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oCAAoC,0CAA0C;AAC9E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AA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Ae,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oCAAoC,oBAAoB;AACxD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,+CAA+C;AAClF;AACA,oCAAoC;AACpC;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,yDAAU;AAC1B;AACA;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,gBAAgB,uDAAQ,QAAQ,uDAAQ;AACxC;AACA;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,4EAAiB;AACzC,wBAAwB,0EAAgB;AACxC,wBAAwB,oEAAa;AACrC,wBAAwB,8EAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;;AAEuW;;AAEvW,oD;;;;;;;;;;;;ACnsEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACe;AACD;AACF;AACJ;AACA;AACM;AACY;AACvC;AACoJ;AAC7I;AACgB;AACkB;;AAE3E;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,oBAAoB,oBAAoB,aAAa,SAAS,WAAW,gBAAgB,YAAY,gBAAgB,8EAA8E,oBAAoB,oBAAoB,aAAa,4BAA4B,6BAA6B,0BAA0B,sBAAsB;AACrY,iBAAiB;AACjB;AACA;AACA,mBAAmB,OAAO,uDAAS,SAAS,oEAAU,IAAI;AAC1D,gBAAgB,OAAO,mDAAK,mBAAmB;AAC/C,kBAAkB,OAAO,mDAAK,qBAAqB;AACnD,wBAAwB,OAAO,mDAAK,2BAA2B;AAC/D,6BAA6B,OAAO,mDAAK,gCAAgC;AACzE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb,+BAA+B,4EAAa;AAC5C;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO,mDAAK,6BAA6B;AACnE,yBAAyB,OAAO,0DAAY,gCAAgC;AAC5E;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,0CAA0C,EAAE;AAC5C,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS,wCAAwC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,gEAAU,cAAc,0BAA0B,EAAE,KAAK,GAAG;AACvJ,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,0BAA0B,OAAO,mDAAK,6BAA6B;AACnE;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,0CAA0C,EAAE;AAC5C,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS,wCAAwC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,gEAAU,cAAc,0BAA0B,EAAE,KAAK,GAAG;AACvJ,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,yBAAyB,OAAO,mDAAK,4BAA4B;AACjE;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,0CAA0C,EAAE;AAC5C,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD;AACxD,SAAS,wCAAwC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,gEAAU,cAAc,0BAA0B,EAAE,KAAK,GAAG;AACvJ,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,yBAAyB,OAAO,mDAAK,2BAA2B;AAChE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,8YAA8Y,MAAM,kJAAkJ,cAAc;AACpjB,8CAA8C,cAAc,oCAAoC,eAAe,gBAAgB,MAAM,oBAAoB,oBAAoB,aAAa,SAAS,WAAW,gBAAgB,YAAY,gBAAgB,6BAA6B,4BAA4B,6BAA6B,0BAA0B,sBAAsB,8BAA8B,sBAAsB,oBAAoB,oBAAoB,aAAa,SAAS,WAAW,gBAAgB,YAAY,4DAA4D,8BAA8B,6BAA6B,uBAAuB,mBAAmB,8BAA8B,sBAAsB,oBAAoB,oBAAoB,aAAa,yBAAyB,sBAAsB,mBAAmB,0BAA0B,qBAAqB,eAAe,uBAAuB,oBAAoB,2BAA2B,oDAAoD,4BAA4B,6BAA6B,0BAA0B,sBAAsB,8BAA8B,sBAAsB,oBAAoB,oBAAoB,aAAa,mBAAmB,WAAW,OAAO,kBAAkB,cAAc,iCAAiC;AACr1C,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,uDAAM,gBAAgB,OAAO,sDAAQ,EAAE;AACvD,MAAM;AACN;AACA,wBAAwB,OAAO,mDAAK,2BAA2B;AAC/D,gBAAgB,OAAO,mDAAK,mBAAmB;AAC/C,gBAAgB,OAAO,mDAAK,mBAAmB;AAC/C,iBAAiB,OAAO,mDAAK,oBAAoB;AACjD,2BAA2B,OAAO,mDAAK,8BAA8B;AACrE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,uzBAAuzB,MAAM,0JAA0J,cAAc;AAC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;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,oCAAoC,cAAc,kBAAkB;AACpE,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,oBAAoB;AACjD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2DAA2D,6DAAe;AAC1E,gEAAgE,6DAAe;AAC/E;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,smBAAsmB,MAAM,6SAA6S,cAAc,4FAA4F,MAAM,kMAAkM,eAAe;AAC1tC,iCAAiC,0EAAmB;AACpD,oCAAoC,WAAW,uGAAuG,gBAAgB,kBAAkB,aAAa,wCAAwC,4BAA4B,sBAAsB,+CAA+C,4BAA4B,6BAA6B,0BAA0B,sBAAsB,sBAAsB,wBAAwB,wDAAwD,8BAA8B,6BAA6B,uBAAuB,mBAAmB,8BAA8B,sBAAsB,oBAAoB,oBAAoB,aAAa,yBAAyB,sBAAsB,mBAAmB,0BAA0B,qBAAqB,eAAe,uBAAuB,oBAAoB,2BAA2B,6FAA6F,kBAAkB,YAAY,WAAW,qBAAqB,oDAAoD,8BAA8B,6BAA6B,uBAAuB,mBAAmB,8BAA8B,sBAAsB,oBAAoB,oBAAoB,aAAa,gFAAgF,mBAAmB,WAAW,OAAO,sFAAsF,YAAY,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","file":"app-views-pages-dashboard-dashboard-module.js","sourcesContent":["import { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { __extends, __values } from 'tslib';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { mixinControlValueAccessor } from '@covalent/core/common';\nimport { Component, Input, Renderer2, ElementRef, HostListener, Directive, TemplateRef, ViewContainerRef, Output, EventEmitter, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef, ViewChild, ContentChildren, Inject, Optional, ViewChildren, HostBinding, Injectable, SkipSelf, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdDataTableColumnRowComponent = /** @class */ (function () {\n    function TdDataTableColumnRowComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column-row');\n    }\n    TdDataTableColumnRowComponent.decorators = [\n        { type: Component, args: [{\n                    /* tslint:disable-next-line */\n                    selector: 'tr[td-data-table-column-row]',\n                    template: \"<ng-content></ng-content>\",\n                    styles: [\":host{border-bottom-style:solid;border-bottom-width:1px}:host.td-data-table-row{height:48px}:host.td-data-table-column-row{height:56px}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    TdDataTableColumnRowComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    return TdDataTableColumnRowComponent;\n}());\nvar TdDataTableRowComponent = /** @class */ (function () {\n    function TdDataTableRowComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._selected = false;\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-row');\n    }\n    Object.defineProperty(TdDataTableRowComponent.prototype, \"selected\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._selected;\n        },\n        set: /**\n         * @param {?} selected\n         * @return {?}\n         */\n        function (selected) {\n            if (selected) {\n                this._renderer.addClass(this._elementRef.nativeElement, 'td-selected');\n            }\n            else {\n                this._renderer.removeClass(this._elementRef.nativeElement, 'td-selected');\n            }\n            this._selected = selected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableRowComponent.prototype, \"height\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var height = 48;\n            if (this._elementRef.nativeElement) {\n                height = ((/** @type {?} */ (this._elementRef.nativeElement))).getBoundingClientRect().height;\n            }\n            return height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Listening to click event to explicitly focus the row element.\n     */\n    /**\n     * Listening to click event to explicitly focus the row element.\n     * @return {?}\n     */\n    TdDataTableRowComponent.prototype.clickListener = /**\n     * Listening to click event to explicitly focus the row element.\n     * @return {?}\n     */\n    function () {\n        this.focus();\n    };\n    /**\n     * @return {?}\n     */\n    TdDataTableRowComponent.prototype.focus = /**\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.focus();\n    };\n    TdDataTableRowComponent.decorators = [\n        { type: Component, args: [{\n                    /* tslint:disable-next-line */\n                    selector: 'tr[td-data-table-row]',\n                    template: \"<ng-content></ng-content>\",\n                    styles: [\":host{border-bottom-style:solid;border-bottom-width:1px}:host.td-data-table-row{height:48px}:host.td-data-table-column-row{height:56px}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    TdDataTableRowComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    TdDataTableRowComponent.propDecorators = {\n        selected: [{ type: Input, args: ['selected',] }],\n        clickListener: [{ type: HostListener, args: ['click',] }]\n    };\n    return TdDataTableRowComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdDataTableTemplateDirective = /** @class */ (function (_super) {\n    __extends(TdDataTableTemplateDirective, _super);\n    function TdDataTableTemplateDirective(templateRef, viewContainerRef) {\n        return _super.call(this, templateRef, viewContainerRef) || this;\n    }\n    TdDataTableTemplateDirective.decorators = [\n        { type: Directive, args: [{ selector: '[tdDataTableTemplate]ng-template' },] }\n    ];\n    /** @nocollapse */\n    TdDataTableTemplateDirective.ctorParameters = function () { return [\n        { type: TemplateRef },\n        { type: ViewContainerRef }\n    ]; };\n    TdDataTableTemplateDirective.propDecorators = {\n        tdDataTableTemplate: [{ type: Input }]\n    };\n    return TdDataTableTemplateDirective;\n}(TemplatePortalDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n/** @enum {string} */\nvar TdDataTableSortingOrder = {\n    Ascending: 'ASC',\n    Descending: 'DESC',\n};\n/**\n * Constant to set the rows offset before and after the viewport\n * @type {?}\n */\nvar TD_VIRTUAL_OFFSET = 2;\n/**\n * Constant to set default row height if none is provided\n * @type {?}\n */\nvar TD_VIRTUAL_DEFAULT_ROW_HEIGHT = 48;\nvar TdDataTableBase = /** @class */ (function () {\n    function TdDataTableBase(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n    }\n    return TdDataTableBase;\n}());\n/* tslint:disable-next-line */\n/** @type {?} */\nvar _TdDataTableMixinBase = mixinControlValueAccessor(TdDataTableBase, []);\nvar TdDataTableComponent = /** @class */ (function (_super) {\n    __extends(TdDataTableComponent, _super);\n    function TdDataTableComponent(_document, _elementRef, _domSanitizer, _changeDetectorRef) {\n        var _this = _super.call(this, _changeDetectorRef) || this;\n        _this._document = _document;\n        _this._elementRef = _elementRef;\n        _this._domSanitizer = _domSanitizer;\n        _this._hostWidth = 0;\n        /**\n         * manually resizable columns\n         */\n        _this._resizableColumns = false;\n        _this._columnClientX = 0;\n        _this._onColumnResize = new Subject();\n        _this._widths = [];\n        _this._onResize = new Subject();\n        _this._scrollHorizontalOffset = 0;\n        _this._onHorizontalScroll = new Subject();\n        _this._onVerticalScroll = new Subject();\n        // Array of cached row heights to allow dynamic row heights\n        _this._rowHeightCache = [];\n        // Total pseudo height of all the elements\n        _this._totalHeight = 0;\n        // Total host height for the viewport\n        _this._hostHeight = 0;\n        // Scrolled vertical pixels\n        _this._scrollVerticalOffset = 0;\n        // Variables that set from and to which rows will be rendered\n        _this._fromRow = 0;\n        _this._toRow = 0;\n        _this._selectable = false;\n        _this._clickable = false;\n        _this._multiple = true;\n        _this._allSelected = false;\n        _this._indeterminate = false;\n        /**\n         * sorting\n         */\n        _this._sortable = false;\n        _this._sortOrder = TdDataTableSortingOrder.Ascending;\n        /**\n         * shift select\n         */\n        _this._shiftPreviouslyPressed = false;\n        _this._lastSelectedIndex = -1;\n        _this._firstSelectedIndex = -1;\n        _this._firstCheckboxValue = false;\n        /**\n         * template fetching support\n         */\n        _this._templateMap = new Map();\n        /**\n         * sortChange?: function\n         * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n         * Emits an [ITdDataTableSortChangeEvent] implemented object.\n         */\n        _this.onSortChange = new EventEmitter();\n        /**\n         * rowSelect?: function\n         * Event emitted when a row is selected/deselected. [selectable] needs to be enabled.\n         * Emits an [ITdDataTableSelectEvent] implemented object.\n         */\n        _this.onRowSelect = new EventEmitter();\n        /**\n         * rowClick?: function\n         * Event emitted when a row is clicked.\n         * Emits an [ITdDataTableRowClickEvent] implemented object.\n         */\n        _this.onRowClick = new EventEmitter();\n        /**\n         * selectAll?: function\n         * Event emitted when all rows are selected/deselected by the all checkbox. [selectable] needs to be enabled.\n         * Emits an [ITdDataTableSelectAllEvent] implemented object.\n         */\n        _this.onSelectAll = new EventEmitter();\n        /**\n         * compareWith?: function(row, model): boolean\n         * Allows custom comparison between row and model to see if row is selected or not\n         * Default comparation is by reference\n         */\n        _this.compareWith = function (row, model) {\n            return row === model;\n        };\n        return _this;\n    }\n    Object.defineProperty(TdDataTableComponent.prototype, \"resizingColumn\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._resizingColumn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"hostWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // if the checkboxes are rendered, we need to remove their width\n            // from the total width to calculate properly\n            if (this.selectable) {\n                return this._hostWidth - 42;\n            }\n            return this._hostWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"offsetTransform\", {\n        /**\n         * Returns the offset style with a proper calculation on how much it should move\n         * over the y axis of the total height\n         */\n        get: /**\n         * Returns the offset style with a proper calculation on how much it should move\n         * over the y axis of the total height\n         * @return {?}\n         */\n        function () {\n            return this._offsetTransform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"totalHeight\", {\n        /**\n         * Returns the assumed total height of the rows\n         */\n        get: /**\n         * Returns the assumed total height of the rows\n         * @return {?}\n         */\n        function () {\n            return this._totalHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"fromRow\", {\n        /**\n         * Returns the initial row to render in the viewport\n         */\n        get: /**\n         * Returns the initial row to render in the viewport\n         * @return {?}\n         */\n        function () {\n            return this._fromRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"toRow\", {\n        /**\n         * Returns the last row to render in the viewport\n         */\n        get: /**\n         * Returns the last row to render in the viewport\n         * @return {?}\n         */\n        function () {\n            return this._toRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"columnsLeftScroll\", {\n        /**\n         * Returns scroll position to reposition column headers\n         */\n        get: /**\n         * Returns scroll position to reposition column headers\n         * @return {?}\n         */\n        function () {\n            return this._scrollHorizontalOffset * -1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"allSelected\", {\n        /**\n         * Returns true if all values are selected.\n         */\n        get: /**\n         * Returns true if all values are selected.\n         * @return {?}\n         */\n        function () {\n            return this._allSelected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"indeterminate\", {\n        /**\n         * Returns true if all values are not deselected\n         * and at least one is.\n         */\n        get: /**\n         * Returns true if all values are not deselected\n         * and at least one is.\n         * @return {?}\n         */\n        function () {\n            return this._indeterminate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._data;\n        },\n        /**\n         * data?: {[key: string]: any}[]\n         * Sets the data to be rendered as rows.\n         */\n        set: /**\n         * data?: {[key: string]: any}[]\n         * Sets the data to be rendered as rows.\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) {\n            var _this = this;\n            this._data = data;\n            this._rowHeightCache = [];\n            Promise.resolve().then(function () {\n                _this.refresh();\n                // scroll back to the top if the data has changed\n                _this._scrollableDiv.nativeElement.scrollTop = 0;\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"virtualData\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._virtualData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"columns\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            if (this._columns) {\n                return this._columns;\n            }\n            if (this.hasData) {\n                this._columns = [];\n                // if columns is undefined, use key in [data] rows as name and label for column headers.\n                /** @type {?} */\n                var row = this._data[0];\n                Object.keys(row).forEach(function (k) {\n                    if (!_this._columns.find(function (c) { return c.name === k; })) {\n                        _this._columns.push({ name: k, label: k });\n                    }\n                });\n                return this._columns;\n            }\n            else {\n                return [];\n            }\n        },\n        /**\n         * columns?: ITdDataTableColumn[]\n         * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\n         * Defaults to [data] keys.\n         */\n        set: /**\n         * columns?: ITdDataTableColumn[]\n         * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\n         * Defaults to [data] keys.\n         * @param {?} cols\n         * @return {?}\n         */\n        function (cols) {\n            this._columns = cols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"resizableColumns\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._resizableColumns;\n        },\n        /**\n         * resizableColumns?: boolean\n         * Enables manual column resize.\n         * Defaults to 'false'\n         */\n        set: /**\n         * resizableColumns?: boolean\n         * Enables manual column resize.\n         * Defaults to 'false'\n         * @param {?} resizableColumns\n         * @return {?}\n         */\n        function (resizableColumns) {\n            this._resizableColumns = coerceBooleanProperty(resizableColumns);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"selectable\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._selectable;\n        },\n        /**\n         * selectable?: boolean\n         * Enables row selection events, hover and selected row states.\n         * Defaults to 'false'\n         */\n        set: /**\n         * selectable?: boolean\n         * Enables row selection events, hover and selected row states.\n         * Defaults to 'false'\n         * @param {?} selectable\n         * @return {?}\n         */\n        function (selectable) {\n            this._selectable = coerceBooleanProperty(selectable);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"clickable\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._clickable;\n        },\n        /**\n         * clickable?: boolean\n         * Enables row click events, hover.\n         * Defaults to 'false'\n         */\n        set: /**\n         * clickable?: boolean\n         * Enables row click events, hover.\n         * Defaults to 'false'\n         * @param {?} clickable\n         * @return {?}\n         */\n        function (clickable) {\n            this._clickable = coerceBooleanProperty(clickable);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"multiple\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._multiple;\n        },\n        /**\n         * multiple?: boolean\n         * Enables multiple row selection. [selectable] needs to be enabled.\n         * Defaults to 'false'\n         */\n        set: /**\n         * multiple?: boolean\n         * Enables multiple row selection. [selectable] needs to be enabled.\n         * Defaults to 'false'\n         * @param {?} multiple\n         * @return {?}\n         */\n        function (multiple) {\n            this._multiple = coerceBooleanProperty(multiple);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"sortable\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._sortable;\n        },\n        /**\n         * sortable?: boolean\n         * Enables sorting events, sort icons and active column states.\n         * Defaults to 'false'\n         */\n        set: /**\n         * sortable?: boolean\n         * Enables sorting events, sort icons and active column states.\n         * Defaults to 'false'\n         * @param {?} sortable\n         * @return {?}\n         */\n        function (sortable) {\n            this._sortable = coerceBooleanProperty(sortable);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"sortBy\", {\n        /**\n         * sortBy?: string\n         * Sets the active sort column. [sortable] needs to be enabled.\n         */\n        set: /**\n         * sortBy?: string\n         * Sets the active sort column. [sortable] needs to be enabled.\n         * @param {?} columnName\n         * @return {?}\n         */\n        function (columnName) {\n            if (!columnName) {\n                return;\n            }\n            /** @type {?} */\n            var column = this.columns.find(function (c) { return c.name === columnName; });\n            if (!column) {\n                throw new Error('[sortBy] must be a valid column name');\n            }\n            this._sortBy = column;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"sortByColumn\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._sortBy;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"sortOrder\", {\n        /**\n         * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n         * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\n         * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n         */\n        set: /**\n         * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n         * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\n         * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n         * @param {?} order\n         * @return {?}\n         */\n        function (order) {\n            /** @type {?} */\n            var sortOrder = order ? order.toUpperCase() : 'ASC';\n            if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n                throw new Error('[sortOrder] must be empty, ASC or DESC');\n            }\n            this._sortOrder = sortOrder === 'ASC' ?\n                TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"sortOrderEnum\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._sortOrder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableComponent.prototype, \"hasData\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._data && this._data.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize observable for resize and scroll events\n     */\n    /**\n     * Initialize observable for resize and scroll events\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.ngOnInit = /**\n     * Initialize observable for resize and scroll events\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // initialize observable for resize calculations\n        this._resizeSubs = this._onResize.asObservable().subscribe(function () {\n            if (_this._rows) {\n                _this._rows.toArray().forEach(function (row, index) {\n                    _this._rowHeightCache[_this.fromRow + index] = row.height + 1;\n                });\n            }\n            _this._calculateWidths();\n            _this._calculateVirtualRows();\n        });\n        // initialize observable for column resize calculations\n        this._columnResizeSubs = this._onColumnResize.asObservable().pipe(debounceTime(0)).subscribe(function (clientX) {\n            _this._columnClientX = clientX;\n            _this._calculateWidths();\n            _this._changeDetectorRef.markForCheck();\n        });\n        // initialize observable for scroll column header reposition\n        this._horizontalScrollSubs = this._onHorizontalScroll.asObservable()\n            .subscribe(function (horizontalScroll) {\n            _this._scrollHorizontalOffset = horizontalScroll;\n            _this._changeDetectorRef.markForCheck();\n        });\n        // initialize observable for virtual scroll rendering\n        this._verticalScrollSubs = this._onVerticalScroll.asObservable()\n            .subscribe(function (verticalScroll) {\n            _this._scrollVerticalOffset = verticalScroll;\n            _this._calculateVirtualRows();\n            _this._changeDetectorRef.markForCheck();\n        });\n        this._valueChangesSubs = this.valueChanges.subscribe(function (value) {\n            _this.refresh();\n        });\n    };\n    /**\n     * Loads templates and sets them in a map for faster access.\n     */\n    /**\n     * Loads templates and sets them in a map for faster access.\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.ngAfterContentInit = /**\n     * Loads templates and sets them in a map for faster access.\n     * @return {?}\n     */\n    function () {\n        for (var i = 0; i < this._templates.toArray().length; i++) {\n            this._templateMap.set(this._templates.toArray()[i].tdDataTableTemplate, this._templates.toArray()[i].templateRef);\n        }\n    };\n    /**\n     * Checks hosts native elements widths to see if it has changed (resize check)\n     */\n    /**\n     * Checks hosts native elements widths to see if it has changed (resize check)\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.ngAfterContentChecked = /**\n     * Checks hosts native elements widths to see if it has changed (resize check)\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // check if the scroll has been reset when element is hidden\n        if (this._scrollVerticalOffset - this._scrollableDiv.nativeElement.scrollTop > 5) {\n            // scroll back to the top if element has been reset\n            this._onVerticalScroll.next(0);\n        }\n        if (this._elementRef.nativeElement) {\n            /** @type {?} */\n            var newHostWidth_1 = this._elementRef.nativeElement.getBoundingClientRect().width;\n            // if the width has changed then we throw a resize event.\n            if (this._hostWidth !== newHostWidth_1) {\n                setTimeout(function () {\n                    _this._hostWidth = newHostWidth_1;\n                    _this._onResize.next();\n                }, 0);\n            }\n        }\n        if (this._scrollableDiv.nativeElement) {\n            /** @type {?} */\n            var newHostHeight = this._scrollableDiv.nativeElement.getBoundingClientRect().height;\n            // if the height of the viewport has changed, then we mark for check\n            if (this._hostHeight !== newHostHeight) {\n                this._hostHeight = newHostHeight;\n                this._calculateVirtualRows();\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n    };\n    /**\n     * Registers to an observable that checks if all rows have been rendered\n     * so we can start calculating the widths\n     */\n    /**\n     * Registers to an observable that checks if all rows have been rendered\n     * so we can start calculating the widths\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.ngAfterViewInit = /**\n     * Registers to an observable that checks if all rows have been rendered\n     * so we can start calculating the widths\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._rowsChangedSubs = this._rows.changes.pipe(debounceTime(0)).subscribe(function () {\n            _this._onResize.next();\n        });\n        this._calculateVirtualRows();\n    };\n    /**\n     * Unsubscribes observables when data table is destroyed\n     */\n    /**\n     * Unsubscribes observables when data table is destroyed\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.ngOnDestroy = /**\n     * Unsubscribes observables when data table is destroyed\n     * @return {?}\n     */\n    function () {\n        if (this._resizeSubs) {\n            this._resizeSubs.unsubscribe();\n        }\n        if (this._columnResizeSubs) {\n            this._columnResizeSubs.unsubscribe();\n        }\n        if (this._horizontalScrollSubs) {\n            this._horizontalScrollSubs.unsubscribe();\n        }\n        if (this._verticalScrollSubs) {\n            this._verticalScrollSubs.unsubscribe();\n        }\n        if (this._rowsChangedSubs) {\n            this._rowsChangedSubs.unsubscribe();\n        }\n        if (this._valueChangesSubs) {\n            this._valueChangesSubs.unsubscribe();\n        }\n    };\n    /**\n     * Method that gets executed every time there is a scroll event\n     * Calls the scroll observable\n     */\n    /**\n     * Method that gets executed every time there is a scroll event\n     * Calls the scroll observable\n     * @param {?} event\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.handleScroll = /**\n     * Method that gets executed every time there is a scroll event\n     * Calls the scroll observable\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var element = ((/** @type {?} */ (event.target)));\n        if (element) {\n            /** @type {?} */\n            var horizontalScroll = element.scrollLeft;\n            if (this._scrollHorizontalOffset !== horizontalScroll) {\n                this._onHorizontalScroll.next(horizontalScroll);\n            }\n            /** @type {?} */\n            var verticalScroll = element.scrollTop;\n            if (this._scrollVerticalOffset !== verticalScroll) {\n                this._onVerticalScroll.next(verticalScroll);\n            }\n        }\n    };\n    /**\n     * Returns the width needed for the columns via index\n     */\n    /**\n     * Returns the width needed for the columns via index\n     * @param {?} index\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.getColumnWidth = /**\n     * Returns the width needed for the columns via index\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (this._widths[index]) {\n            return this._widths[index].value;\n        }\n        return undefined;\n    };\n    /**\n     * @param {?} column\n     * @param {?} value\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.getCellValue = /**\n     * @param {?} column\n     * @param {?} value\n     * @return {?}\n     */\n    function (column, value) {\n        if (column.nested === undefined || column.nested) {\n            return this._getNestedValue(column.name, value);\n        }\n        return value[column.name];\n    };\n    /**\n     * Getter method for template references\n     */\n    /**\n     * Getter method for template references\n     * @param {?} name\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.getTemplateRef = /**\n     * Getter method for template references\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._templateMap.get(name);\n    };\n    /**\n     * Clears model (ngModel) of component by removing all values in array.\n     */\n    /**\n     * Clears model (ngModel) of component by removing all values in array.\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.clearModel = /**\n     * Clears model (ngModel) of component by removing all values in array.\n     * @return {?}\n     */\n    function () {\n        this.value.splice(0, this.value.length);\n    };\n    /**\n     * Refreshes data table and rerenders [data] and [columns]\n     */\n    /**\n     * Refreshes data table and rerenders [data] and [columns]\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.refresh = /**\n     * Refreshes data table and rerenders [data] and [columns]\n     * @return {?}\n     */\n    function () {\n        this._calculateVirtualRows();\n        this._calculateWidths();\n        this._calculateCheckboxState();\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Selects or clears all rows depending on 'checked' value.\n     */\n    /**\n     * Selects or clears all rows depending on 'checked' value.\n     * @param {?} checked\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.selectAll = /**\n     * Selects or clears all rows depending on 'checked' value.\n     * @param {?} checked\n     * @return {?}\n     */\n    function (checked) {\n        var _this = this;\n        /** @type {?} */\n        var toggledRows = [];\n        if (checked) {\n            this._data.forEach(function (row) {\n                // skiping already selected rows\n                if (!_this.isRowSelected(row)) {\n                    _this.value.push(row);\n                    // checking which ones are being toggled\n                    toggledRows.push(row);\n                }\n            });\n            this._allSelected = true;\n            this._indeterminate = true;\n        }\n        else {\n            this._data.forEach(function (row) {\n                // checking which ones are being toggled\n                if (_this.isRowSelected(row)) {\n                    toggledRows.push(row);\n                    /** @type {?} */\n                    var modelRow = _this.value.filter(function (val) {\n                        return _this.compareWith(row, val);\n                    })[0];\n                    /** @type {?} */\n                    var index = _this.value.indexOf(modelRow);\n                    if (index > -1) {\n                        _this.value.splice(index, 1);\n                    }\n                }\n            });\n            this._allSelected = false;\n            this._indeterminate = false;\n        }\n        this.onSelectAll.emit({ rows: toggledRows, selected: checked });\n        this.onChange(this.value);\n    };\n    /**\n     * Checks if row is selected\n     */\n    /**\n     * Checks if row is selected\n     * @param {?} row\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.isRowSelected = /**\n     * Checks if row is selected\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        var _this = this;\n        // compare items by [compareWith] function\n        return this.value ? this.value.filter(function (val) {\n            return _this.compareWith(row, val);\n        }).length > 0 : false;\n    };\n    /**\n     * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\n     * handles cntrl clicks and shift clicks for multi-select\n     */\n    /**\n     * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\n     * handles cntrl clicks and shift clicks for multi-select\n     * @param {?} row\n     * @param {?} event\n     * @param {?} currentSelected\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.select = /**\n     * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\n     * handles cntrl clicks and shift clicks for multi-select\n     * @param {?} row\n     * @param {?} event\n     * @param {?} currentSelected\n     * @return {?}\n     */\n    function (row, event, currentSelected) {\n        if (this.selectable) {\n            this.blockEvent(event);\n            // Check to see if Shift key is selected and need to select everything in between\n            /** @type {?} */\n            var mouseEvent = (/** @type {?} */ (event));\n            if (this.multiple && mouseEvent && mouseEvent.shiftKey && this._lastSelectedIndex > -1) {\n                /** @type {?} */\n                var firstIndex = currentSelected;\n                /** @type {?} */\n                var lastIndex = this._lastSelectedIndex;\n                if (currentSelected > this._lastSelectedIndex) {\n                    firstIndex = this._lastSelectedIndex;\n                    lastIndex = currentSelected;\n                }\n                // if clicking a checkbox behind the initial check, then toggle all selections expect the initial checkbox\n                // else the checkboxes clicked are all after the initial one\n                if ((this._firstSelectedIndex >= currentSelected && this._lastSelectedIndex > this._firstSelectedIndex) ||\n                    (this._firstSelectedIndex <= currentSelected && this._lastSelectedIndex < this._firstSelectedIndex)) {\n                    for (var i = firstIndex; i <= lastIndex; i++) {\n                        if (this._firstSelectedIndex !== i) {\n                            this._doSelection(this._data[i], i);\n                        }\n                    }\n                }\n                else if ((this._firstSelectedIndex > currentSelected) || (this._firstSelectedIndex < currentSelected)) {\n                    // change indexes depending on where the next checkbox is selected (before or after)\n                    if (this._firstSelectedIndex > currentSelected) {\n                        lastIndex--;\n                    }\n                    else if (this._firstSelectedIndex < currentSelected) {\n                        firstIndex++;\n                    }\n                    for (var i = firstIndex; i <= lastIndex; i++) {\n                        /** @type {?} */\n                        var rowSelected = this.isRowSelected(this._data[i]);\n                        // if row is selected and first checkbox was selected\n                        // or if row was unselected and first checkbox was unselected\n                        // we ignore the toggle\n                        if ((this._firstCheckboxValue && !rowSelected) ||\n                            (!this._firstCheckboxValue && rowSelected)) {\n                            this._doSelection(this._data[i], i);\n                        }\n                        else if (this._shiftPreviouslyPressed) {\n                            // else if the checkbox selected was in the middle of the last selection and the first selection\n                            // then we undo the selections\n                            if ((currentSelected >= this._firstSelectedIndex && currentSelected <= this._lastSelectedIndex) ||\n                                (currentSelected <= this._firstSelectedIndex && currentSelected >= this._lastSelectedIndex)) {\n                                this._doSelection(this._data[i], i);\n                            }\n                        }\n                    }\n                }\n                this._shiftPreviouslyPressed = true;\n                // if shift wasnt pressed, then we take the element checked as the first row\n                // incase the next click uses shift\n            }\n            else if (mouseEvent && !mouseEvent.shiftKey) {\n                this._firstCheckboxValue = this._doSelection(row, currentSelected);\n                this._shiftPreviouslyPressed = false;\n                this._firstSelectedIndex = currentSelected;\n            }\n            this._lastSelectedIndex = currentSelected;\n        }\n    };\n    /**\n     * Overrides the onselectstart method of the document so other text on the page\n     * doesn't get selected when doing shift selections.\n     */\n    /**\n     * Overrides the onselectstart method of the document so other text on the page\n     * doesn't get selected when doing shift selections.\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.disableTextSelection = /**\n     * Overrides the onselectstart method of the document so other text on the page\n     * doesn't get selected when doing shift selections.\n     * @return {?}\n     */\n    function () {\n        if (this._document) {\n            this._document.onselectstart = function () {\n                return false;\n            };\n        }\n    };\n    /**\n     * Resets the original onselectstart method.\n     */\n    /**\n     * Resets the original onselectstart method.\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.enableTextSelection = /**\n     * Resets the original onselectstart method.\n     * @return {?}\n     */\n    function () {\n        if (this._document) {\n            this._document.onselectstart = undefined;\n        }\n    };\n    /**\n     * emits the onRowClickEvent when a row is clicked\n     * if clickable is true and selectable is false then select the row\n     */\n    /**\n     * emits the onRowClickEvent when a row is clicked\n     * if clickable is true and selectable is false then select the row\n     * @param {?} row\n     * @param {?} index\n     * @param {?} event\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.handleRowClick = /**\n     * emits the onRowClickEvent when a row is clicked\n     * if clickable is true and selectable is false then select the row\n     * @param {?} row\n     * @param {?} index\n     * @param {?} event\n     * @return {?}\n     */\n    function (row, index, event) {\n        if (this.clickable) {\n            // ignoring linting rules here because attribute it actually null or not there\n            // can't check for undefined\n            /** @type {?} */\n            var srcElement = event.srcElement || event.currentTarget;\n            /** @type {?} */\n            var element = (/** @type {?} */ (event.target));\n            /* tslint:disable-next-line */\n            if (srcElement.getAttribute('stopRowClick') === null && element.tagName.toLowerCase() !== 'mat-pseudo-checkbox') {\n                this.onRowClick.emit({\n                    row: row,\n                    index: index,\n                });\n            }\n        }\n    };\n    /**\n     * Method handle for sort click event in column headers.\n     */\n    /**\n     * Method handle for sort click event in column headers.\n     * @param {?} column\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.handleSort = /**\n     * Method handle for sort click event in column headers.\n     * @param {?} column\n     * @return {?}\n     */\n    function (column) {\n        if (this._sortBy === column) {\n            this._sortOrder = this._sortOrder === TdDataTableSortingOrder.Ascending ?\n                TdDataTableSortingOrder.Descending : TdDataTableSortingOrder.Ascending;\n        }\n        else {\n            this._sortBy = column;\n            this._sortOrder = TdDataTableSortingOrder.Ascending;\n        }\n        this.onSortChange.next({ name: this._sortBy.name, order: this._sortOrder });\n    };\n    /**\n     * Handle all keyup events when focusing a data table row\n     */\n    /**\n     * Handle all keyup events when focusing a data table row\n     * @param {?} event\n     * @param {?} row\n     * @param {?} index\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._rowKeyup = /**\n     * Handle all keyup events when focusing a data table row\n     * @param {?} event\n     * @param {?} row\n     * @param {?} index\n     * @return {?}\n     */\n    function (event, row, index) {\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                /** if user presses enter or space, the row should be selected */\n                if (this.selectable) {\n                    this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n                }\n                break;\n            case UP_ARROW:\n                /**\n                 * if users presses the up arrow, we focus the prev row\n                 * unless its the first row\n                 */\n                if (index > 0) {\n                    this._rows.toArray()[index - 1].focus();\n                }\n                this.blockEvent(event);\n                if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index >= 0) {\n                    this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n                }\n                break;\n            case DOWN_ARROW:\n                /**\n                 * if users presses the down arrow, we focus the next row\n                 * unless its the last row\n                 */\n                if (index < (this._rows.toArray().length - 1)) {\n                    this._rows.toArray()[index + 1].focus();\n                }\n                this.blockEvent(event);\n                if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index < this._data.length) {\n                    this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n                }\n                break;\n            default:\n            // default\n        }\n    };\n    /**\n     * Sets column index of the dragged column and initial clientX of column\n     */\n    /**\n     * Sets column index of the dragged column and initial clientX of column\n     * @param {?} index\n     * @param {?} event\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._handleStartColumnDrag = /**\n     * Sets column index of the dragged column and initial clientX of column\n     * @param {?} index\n     * @param {?} event\n     * @return {?}\n     */\n    function (index, event) {\n        this._columnClientX = event.clientX;\n        this._resizingColumn = index;\n    };\n    /**\n     * Calculates new width depending on new clientX of dragger column\n     */\n    /**\n     * Calculates new width depending on new clientX of dragger column\n     * @param {?} event\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._handleColumnDrag = /**\n     * Calculates new width depending on new clientX of dragger column\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // check if there was been a separator clicked for resize\n        if (this._resizingColumn !== undefined && event.clientX > 0) {\n            /** @type {?} */\n            var xPosition = event.clientX;\n            // checks if the separator is being moved to try and resize the column, else dont do anything\n            if (xPosition > 0 && this._columnClientX > 0 && (xPosition - this._columnClientX) !== 0) {\n                // calculate the new width depending if making the column bigger or smaller\n                /** @type {?} */\n                var proposedManualWidth = this._widths[this._resizingColumn].value + (xPosition - this._columnClientX);\n                // if the proposed new width is less than the projected min width of the column, use projected min width\n                if (proposedManualWidth < this._colElements.toArray()[this._resizingColumn].projectedWidth) {\n                    proposedManualWidth = this._colElements.toArray()[this._resizingColumn].projectedWidth;\n                }\n                this.columns[this._resizingColumn].width = proposedManualWidth;\n                // update new x position for the resized column\n                this._onColumnResize.next(xPosition);\n            }\n        }\n    };\n    /**\n     * Ends dragged flags\n     */\n    /**\n     * Ends dragged flags\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._handleEndColumnDrag = /**\n     * Ends dragged flags\n     * @return {?}\n     */\n    function () {\n        this._columnClientX = undefined;\n        this._resizingColumn = undefined;\n    };\n    /**\n     * Method to prevent the default events\n     */\n    /**\n     * Method to prevent the default events\n     * @param {?} event\n     * @return {?}\n     */\n    TdDataTableComponent.prototype.blockEvent = /**\n     * Method to prevent the default events\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        event.preventDefault();\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._getNestedValue = /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (!(value instanceof Object) || !name) {\n            return value;\n        }\n        if (name.indexOf('.') > -1) {\n            /** @type {?} */\n            var splitName = name.split(/\\.(.+)/, 2);\n            return this._getNestedValue(splitName[1], value[splitName[0]]);\n        }\n        else {\n            return value[name];\n        }\n    };\n    /**\n     * Does the actual Row Selection\n     */\n    /**\n     * Does the actual Row Selection\n     * @param {?} row\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._doSelection = /**\n     * Does the actual Row Selection\n     * @param {?} row\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    function (row, rowIndex) {\n        var _this = this;\n        /** @type {?} */\n        var wasSelected = this.isRowSelected(row);\n        if (!wasSelected) {\n            if (!this._multiple) {\n                this.clearModel();\n            }\n            this.value.push(row);\n        }\n        else {\n            // compare items by [compareWith] function\n            row = this.value.filter(function (val) {\n                return _this.compareWith(row, val);\n            })[0];\n            /** @type {?} */\n            var index = this.value.indexOf(row);\n            if (index > -1) {\n                this.value.splice(index, 1);\n            }\n        }\n        this._calculateCheckboxState();\n        this.onRowSelect.emit({ row: row, index: rowIndex, selected: !wasSelected });\n        this.onChange(this.value);\n        return !wasSelected;\n    };\n    /**\n     * Calculate all the state of all checkboxes\n     */\n    /**\n     * Calculate all the state of all checkboxes\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._calculateCheckboxState = /**\n     * Calculate all the state of all checkboxes\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var e_1, _a;\n        if (this._data) {\n            this._allSelected = typeof this._data.find(function (d) { return !_this.isRowSelected(d); }) === 'undefined';\n            this._indeterminate = false;\n            try {\n                for (var _b = __values(this._data), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var row = _c.value;\n                    if (!this.isRowSelected(row)) {\n                        continue;\n                    }\n                    this._indeterminate = true;\n                    break;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n    };\n    /**\n     * Calculates the widths for columns and cells depending on content\n     */\n    /**\n     * Calculates the widths for columns and cells depending on content\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._calculateWidths = /**\n     * Calculates the widths for columns and cells depending on content\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._colElements && this._colElements.length) {\n            this._widths = [];\n            this._colElements.forEach(function (col, index) {\n                _this._adjustColumnWidth(index, _this._calculateWidth());\n            });\n            this._adjustColumnWidhts();\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * Adjusts columns after calculation to see if they need to be recalculated.\n     */\n    /**\n     * Adjusts columns after calculation to see if they need to be recalculated.\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._adjustColumnWidhts = /**\n     * Adjusts columns after calculation to see if they need to be recalculated.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var fixedTotalWidth = 0;\n        // get the number of total columns that have flexible widths (not fixed or hidden)\n        /** @type {?} */\n        var flexibleWidths = this._widths.filter(function (width, index) {\n            if (_this.columns[index].hidden) {\n                return false;\n            }\n            if (width.limit || width.max || width.min) {\n                fixedTotalWidth += width.value;\n            }\n            return !width.limit && !width.max && !width.min;\n        }).length;\n        // calculate how much pixes are left that could be spread across\n        // the flexible columns\n        /** @type {?} */\n        var recalculateHostWidth = 0;\n        if (fixedTotalWidth < this.hostWidth) {\n            recalculateHostWidth = this.hostWidth - fixedTotalWidth;\n        }\n        // if we have flexible columns and pixels to spare on them\n        // we try and spread the pixels across them\n        if (flexibleWidths && recalculateHostWidth) {\n            /** @type {?} */\n            var newValue_1 = Math.floor(recalculateHostWidth / flexibleWidths);\n            /** @type {?} */\n            var adjustedNumber_1 = 0;\n            // adjust the column widths with the spread pixels\n            this._widths.forEach(function (colWidth) {\n                if (_this._widths[colWidth.index].max && _this._widths[colWidth.index].value > newValue_1 ||\n                    _this._widths[colWidth.index].min && _this._widths[colWidth.index].value < newValue_1 ||\n                    !_this._widths[colWidth.index].limit) {\n                    _this._adjustColumnWidth(colWidth.index, newValue_1);\n                    adjustedNumber_1++;\n                }\n            });\n            // if there are still columns that need to be recalculated, we start over\n            /** @type {?} */\n            var newFlexibleWidths = this._widths.filter(function (width) {\n                return !width.limit && !width.max;\n            }).length;\n            if (newFlexibleWidths !== adjustedNumber_1 && newFlexibleWidths !== flexibleWidths) {\n                this._adjustColumnWidhts();\n            }\n        }\n    };\n    /**\n     * Adjusts a single column to see if it can be recalculated\n     */\n    /**\n     * Adjusts a single column to see if it can be recalculated\n     * @param {?} index\n     * @param {?} value\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._adjustColumnWidth = /**\n     * Adjusts a single column to see if it can be recalculated\n     * @param {?} index\n     * @param {?} value\n     * @return {?}\n     */\n    function (index, value) {\n        this._widths[index] = {\n            value: value,\n            index: index,\n            limit: false,\n            min: false,\n            max: false,\n        };\n        // flag to see if we need to skip the min width projection\n        // depending if a width or min width has been provided\n        /** @type {?} */\n        var skipMinWidthProjection = false;\n        if (this.columns[index]) {\n            // if the provided width has min/max, then we check to see if we need to set it\n            if (typeof this.columns[index].width === 'object') {\n                /** @type {?} */\n                var widthOpts = (/** @type {?} */ (this.columns[index].width));\n                // if the column width is less than the configured min, we override it\n                skipMinWidthProjection = (widthOpts && !!widthOpts.min);\n                if (widthOpts && widthOpts.min >= this._widths[index].value) {\n                    this._widths[index].value = widthOpts.min;\n                    this._widths[index].min = true;\n                    // if the column width is more than the configured max, we override it\n                }\n                else if (widthOpts && widthOpts.max <= this._widths[index].value) {\n                    this._widths[index].value = widthOpts.max;\n                    this._widths[index].max = true;\n                }\n                // if it has a fixed width, then we just set it\n            }\n            else if (typeof this.columns[index].width === 'number') {\n                this._widths[index].value = (/** @type {?} */ (this.columns[index].width));\n                skipMinWidthProjection = this._widths[index].limit = true;\n            }\n        }\n        // if there wasn't any width or min width provided, we set a min to what the column width min should be\n        if (!skipMinWidthProjection &&\n            this._widths[index].value < this._colElements.toArray()[index].projectedWidth) {\n            this._widths[index].value = this._colElements.toArray()[index].projectedWidth;\n            this._widths[index].min = true;\n            this._widths[index].limit = false;\n        }\n    };\n    /**\n     * Generic method to calculate column width\n     */\n    /**\n     * Generic method to calculate column width\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._calculateWidth = /**\n     * Generic method to calculate column width\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var renderedColumns = this.columns.filter(function (col) { return !col.hidden; });\n        return Math.floor(this.hostWidth / renderedColumns.length);\n    };\n    /**\n     * Method to calculate the rows to be rendered in the viewport\n     */\n    /**\n     * Method to calculate the rows to be rendered in the viewport\n     * @return {?}\n     */\n    TdDataTableComponent.prototype._calculateVirtualRows = /**\n     * Method to calculate the rows to be rendered in the viewport\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var scrolledRows = 0;\n        if (this._data) {\n            this._totalHeight = 0;\n            /** @type {?} */\n            var rowHeightSum_1 = 0;\n            // loop through all rows to see if we have their height cached\n            // and sum them all to calculate the total height\n            this._data.forEach(function (d, i) {\n                // iterate through all rows at first and assume all\n                // rows are the same height as the first one\n                if (!_this._rowHeightCache[i]) {\n                    _this._rowHeightCache[i] = _this._rowHeightCache[0] || TD_VIRTUAL_DEFAULT_ROW_HEIGHT;\n                }\n                rowHeightSum_1 += _this._rowHeightCache[i];\n                // check how many rows have been scrolled\n                if (_this._scrollVerticalOffset - rowHeightSum_1 > 0) {\n                    scrolledRows++;\n                }\n            });\n            this._totalHeight = rowHeightSum_1;\n            // set the initial row to be rendered taking into account the row offset\n            /** @type {?} */\n            var fromRow = scrolledRows - TD_VIRTUAL_OFFSET;\n            this._fromRow = fromRow > 0 ? fromRow : 0;\n            /** @type {?} */\n            var hostHeight = this._hostHeight;\n            /** @type {?} */\n            var index = 0;\n            // calculate how many rows can fit in the viewport\n            while (hostHeight > 0) {\n                hostHeight -= this._rowHeightCache[this.fromRow + index];\n                index++;\n            }\n            // set the last row to be rendered taking into account the row offset\n            /** @type {?} */\n            var range = (index - 1) + (TD_VIRTUAL_OFFSET * 2);\n            /** @type {?} */\n            var toRow = range + this.fromRow;\n            // if last row is greater than the total length, then we use the total length\n            if (isFinite(toRow) && toRow > this._data.length) {\n                toRow = this._data.length;\n            }\n            else if (!isFinite(toRow)) {\n                toRow = TD_VIRTUAL_OFFSET;\n            }\n            this._toRow = toRow;\n        }\n        else {\n            this._totalHeight = 0;\n            this._fromRow = 0;\n            this._toRow = 0;\n        }\n        /** @type {?} */\n        var offset = 0;\n        // calculate the proper offset depending on how many rows have been scrolled\n        if (scrolledRows > TD_VIRTUAL_OFFSET) {\n            for (var index = 0; index < this.fromRow; index++) {\n                offset += this._rowHeightCache[index];\n            }\n        }\n        this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle('translateY(' + (offset - this.totalHeight) + 'px)');\n        if (this._data) {\n            this._virtualData = this.data.slice(this.fromRow, this.toRow);\n        }\n        // mark for check at the end of the queue so we are sure\n        // that the changes will be marked\n        Promise.resolve().then(function () {\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    TdDataTableComponent.decorators = [\n        { type: Component, args: [{\n                    providers: [{\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(function () { return TdDataTableComponent; }),\n                            multi: true,\n                        }],\n                    selector: 'td-data-table',\n                    template: \"<table td-data-table\\n        [style.left.px]=\\\"columnsLeftScroll\\\"\\n        [class.mat-selectable]=\\\"selectable\\\">\\n  <thead class=\\\"td-data-table-head\\\"\\n          (dragover)=\\\"_handleColumnDrag($event)\\\">\\n    <tr td-data-table-column-row>\\n      <th td-data-table-column class=\\\"mat-checkbox-column\\\" *ngIf=\\\"selectable\\\">\\n        <mat-checkbox\\n          #checkBoxAll\\n          *ngIf=\\\"multiple\\\"\\n          [disabled]=\\\"!hasData\\\"\\n          [indeterminate]=\\\"indeterminate && !allSelected && hasData\\\"\\n          [checked]=\\\"allSelected && hasData\\\"\\n          (click)=\\\"blockEvent($event); selectAll(!checkBoxAll.checked)\\\"\\n          (keyup.enter)=\\\"selectAll(!checkBoxAll.checked)\\\"\\n          (keyup.space)=\\\"selectAll(!checkBoxAll.checked)\\\"\\n          (keydown.space)=\\\"blockEvent($event)\\\">\\n        </mat-checkbox>\\n      </th>\\n      <th td-data-table-column\\n        #columnElement\\n        *ngFor=\\\"let column of columns; let i = index; let last = last\\\"\\n        [style.min-width.px]=\\\"getColumnWidth(i)\\\"\\n        [style.max-width.px]=\\\"getColumnWidth(i)\\\"\\n        [name]=\\\"column.name\\\"\\n        [numeric]=\\\"column.numeric\\\"\\n        [active]=\\\"(column.sortable || sortable) && column === sortByColumn\\\"\\n        [sortable]=\\\"column.sortable || (sortable && column.sortable !== false)\\\"\\n        [sortOrder]=\\\"sortOrderEnum\\\"\\n        [hidden]=\\\"column.hidden\\\"\\n        (sortChange)=\\\"handleSort(column)\\\">\\n        <span [matTooltip]=\\\"column.tooltip\\\">{{column.label}}</span>\\n        <span td-column-resizer\\n              *ngIf=\\\"resizableColumns\\\"\\n              draggable=\\\"true\\\"\\n              class=\\\"td-data-table-column-resizer\\\"\\n              [class.td-resizing]=\\\"i === resizingColumn\\\"\\n              (mousedown)=\\\"_handleStartColumnDrag(i, $event)\\\"\\n              (dragstart)=\\\"$event?.dataTransfer?.setData('text', '')\\\"\\n              (drag)=\\\"_handleColumnDrag($event)\\\"\\n              (dragend)=\\\"_handleEndColumnDrag()\\\"\\n              (mouseup)=\\\"_handleEndColumnDrag()\\\">\\n          <span class=\\\"td-data-table-column-separator\\\"></span>\\n        </span>\\n      </th>\\n    </tr>\\n  </thead>\\n</table>\\n<div #scrollableDiv class=\\\"td-data-table-scrollable\\\"\\n      (scroll)=\\\"handleScroll($event)\\\">\\n  <div [style.height.px]=\\\"totalHeight\\\"></div>\\n  <table td-data-table\\n          [style.transform]=\\\"offsetTransform\\\"\\n          [style.position]=\\\"'absolute'\\\"\\n          [class.mat-selectable]=\\\"selectable\\\"\\n          [class.mat-clickable]=\\\"clickable\\\">\\n    <tbody class=\\\"td-data-table-body\\\">\\n      <tr td-data-table-row\\n          #dtRow\\n          [tabIndex]=\\\"selectable ? 0 : -1\\\"\\n          [selected]=\\\"(clickable || selectable) && isRowSelected(row)\\\"\\n          *ngFor=\\\"let row of virtualData; let rowIndex = index\\\"\\n          (click)=\\\"handleRowClick(row, fromRow + rowIndex, $event)\\\"\\n          (keyup)=\\\"selectable && _rowKeyup($event, row, rowIndex)\\\"\\n          (keydown.space)=\\\"blockEvent($event)\\\"\\n          (keydown.shift.space)=\\\"blockEvent($event)\\\"\\n          (keydown.shift)=\\\"disableTextSelection()\\\"\\n          (keyup.shift)=\\\"enableTextSelection()\\\">\\n        <td td-data-table-cell class=\\\"mat-checkbox-cell\\\" *ngIf=\\\"selectable\\\">\\n          <mat-pseudo-checkbox\\n            [state]=\\\"dtRow.selected ? 'checked' : 'unchecked'\\\"\\n            (mousedown)=\\\"disableTextSelection()\\\"\\n            (mouseup)=\\\"enableTextSelection()\\\"\\n            stopRowClick\\n            (click)=\\\"select(row, $event, fromRow + rowIndex)\\\">\\n          </mat-pseudo-checkbox>\\n        </td>\\n        <td td-data-table-cell\\n            [numeric]=\\\"column.numeric\\\"\\n            [hidden]=\\\"column.hidden\\\"\\n            *ngFor=\\\"let column of columns; let i = index\\\"\\n            [style.min-width.px]=\\\"getColumnWidth(i)\\\"\\n            [style.max-width.px]=\\\"getColumnWidth(i)\\\">\\n          <span *ngIf=\\\"!getTemplateRef(column.name)\\\">{{column.format ? column.format(getCellValue(column, row)) : getCellValue(column, row)}}</span>\\n          <ng-template\\n            *ngIf=\\\"getTemplateRef(column.name)\\\"\\n            [ngTemplateOutlet]=\\\"getTemplateRef(column.name)\\\"\\n            [ngTemplateOutletContext]=\\\"{ value: getCellValue(column, row), row: row, column: column.name, index: rowIndex }\\\">\\n          </ng-template>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<ng-content></ng-content>\\n\",\n                    inputs: ['value'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\":host{display:block;overflow:hidden}:host .td-data-table-scrollable{position:relative;overflow:auto;height:calc(100% - 56px)}.td-data-table-column-resizer{right:0;width:6px;cursor:col-resize}.td-data-table-column-resizer,.td-data-table-column-resizer .td-data-table-column-separator{position:absolute;height:100%;top:0}.td-data-table-column-resizer .td-data-table-column-separator{left:2px}.td-data-table-column-resizer.td-resizing{cursor:-webkit-grabbing}table.td-data-table{width:auto!important}table.td-data-table.mat-selectable tbody>tr.td-data-table-row{-webkit-transition:background-color .2s;transition:background-color .2s}table.td-data-table.mat-selectable .td-data-table-column:first-child>.td-data-table-column-content-wrapper,table.td-data-table.mat-selectable td.td-data-table-cell:first-child>.td-data-table-column-content-wrapper,table.td-data-table.mat-selectable th.td-data-table-column:first-child>.td-data-table-column-content-wrapper{width:18px;min-width:18px;padding:0 24px}table.td-data-table.mat-selectable .td-data-table-column:nth-child(2)>.td-data-table-column-content-wrapper,table.td-data-table.mat-selectable td.td-data-table-cell:nth-child(2)>.td-data-table-column-content-wrapper,table.td-data-table.mat-selectable th.td-data-table-column:nth-child(2)>.td-data-table-column-content-wrapper{padding-left:0}[dir=rtl] table.td-data-table.mat-selectable .td-data-table-column:nth-child(2)>.td-data-table-column-content-wrapper,[dir=rtl] table.td-data-table.mat-selectable td.td-data-table-cell:nth-child(2)>.td-data-table-column-content-wrapper,[dir=rtl] table.td-data-table.mat-selectable th.td-data-table-column:nth-child(2)>.td-data-table-column-content-wrapper{padding-right:0;padding-left:28px}table.td-data-table td.mat-checkbox-cell,table.td-data-table th.mat-checkbox-column{min-width:42px;width:42px;font-size:0!important}table.td-data-table td.mat-checkbox-cell mat-pseudo-checkbox,table.td-data-table th.mat-checkbox-column mat-pseudo-checkbox{width:18px;height:18px}::ng-deep table.td-data-table td.mat-checkbox-cell mat-pseudo-checkbox.mat-pseudo-checkbox-checked::after,::ng-deep table.td-data-table th.mat-checkbox-column mat-pseudo-checkbox.mat-pseudo-checkbox-checked::after{width:11px!important;height:4px!important}table.td-data-table td.mat-checkbox-cell mat-checkbox ::ng-deep .mat-checkbox-inner-container,table.td-data-table th.mat-checkbox-column mat-checkbox ::ng-deep .mat-checkbox-inner-container{width:18px;height:18px;margin:0}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    TdDataTableComponent.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n        { type: ElementRef },\n        { type: DomSanitizer },\n        { type: ChangeDetectorRef }\n    ]; };\n    TdDataTableComponent.propDecorators = {\n        _templates: [{ type: ContentChildren, args: [TdDataTableTemplateDirective,] }],\n        _scrollableDiv: [{ type: ViewChild, args: ['scrollableDiv',] }],\n        _colElements: [{ type: ViewChildren, args: ['columnElement',] }],\n        _rows: [{ type: ViewChildren, args: [TdDataTableRowComponent,] }],\n        data: [{ type: Input, args: ['data',] }],\n        columns: [{ type: Input, args: ['columns',] }],\n        resizableColumns: [{ type: Input, args: ['resizableColumns',] }],\n        selectable: [{ type: Input, args: ['selectable',] }],\n        clickable: [{ type: Input, args: ['clickable',] }],\n        multiple: [{ type: Input, args: ['multiple',] }],\n        sortable: [{ type: Input, args: ['sortable',] }],\n        sortBy: [{ type: Input, args: ['sortBy',] }],\n        sortOrder: [{ type: Input, args: ['sortOrder',] }],\n        onSortChange: [{ type: Output, args: ['sortChange',] }],\n        onRowSelect: [{ type: Output, args: ['rowSelect',] }],\n        onRowClick: [{ type: Output, args: ['rowClick',] }],\n        onSelectAll: [{ type: Output, args: ['selectAll',] }],\n        compareWith: [{ type: Input, args: ['compareWith',] }]\n    };\n    return TdDataTableComponent;\n}(_TdDataTableMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdDataTableColumnComponent = /** @class */ (function () {\n    function TdDataTableColumnComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._sortOrder = TdDataTableSortingOrder.Ascending;\n        /**\n         * name?: string\n         * Sets unique column [name] for [sortable] events.\n         */\n        this.name = '';\n        /**\n         * sortable?: boolean\n         * Enables sorting events, sort icons and active column states.\n         * Defaults to 'false'\n         */\n        this.sortable = false;\n        /**\n         * active?: boolean\n         * Sets column to active state when 'true'.\n         * Defaults to 'false'\n         */\n        this.active = false;\n        /**\n         * numeric?: boolean\n         * Makes column follow the numeric data-table specs and sort icon.\n         * Defaults to 'false'\n         */\n        this.numeric = false;\n        /**\n         * sortChange?: function\n         * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n         * Emits an [ITdDataTableSortChangeEvent] implemented object.\n         */\n        this.onSortChange = new EventEmitter();\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column');\n    }\n    Object.defineProperty(TdDataTableColumnComponent.prototype, \"projectedWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._columnContent && this._columnContent.nativeElement) {\n                return ((/** @type {?} */ (this._columnContent.nativeElement))).getBoundingClientRect().width;\n            }\n            return 100;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableColumnComponent.prototype, \"sortOrder\", {\n        /**\n         * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n         * Sets the sort order of column.\n         * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n         */\n        set: /**\n         * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n         * Sets the sort order of column.\n         * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n         * @param {?} order\n         * @return {?}\n         */\n        function (order) {\n            /** @type {?} */\n            var sortOrder = order ? order.toUpperCase() : 'ASC';\n            if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n                throw new Error('[sortOrder] must be empty, ASC or DESC');\n            }\n            this._sortOrder = sortOrder === 'ASC' ?\n                TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableColumnComponent.prototype, \"bindClickable\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.sortable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableColumnComponent.prototype, \"bingSortable\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.sortable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableColumnComponent.prototype, \"bindActive\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableColumnComponent.prototype, \"bindNumeric\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.numeric;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Listening to click event on host to throw a sort event\n     */\n    /**\n     * Listening to click event on host to throw a sort event\n     * @return {?}\n     */\n    TdDataTableColumnComponent.prototype.handleClick = /**\n     * Listening to click event on host to throw a sort event\n     * @return {?}\n     */\n    function () {\n        if (this.sortable) {\n            this.onSortChange.emit({ name: this.name, order: this._sortOrder });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TdDataTableColumnComponent.prototype.isAscending = /**\n     * @return {?}\n     */\n    function () {\n        return this._sortOrder === TdDataTableSortingOrder.Ascending;\n    };\n    /**\n     * @return {?}\n     */\n    TdDataTableColumnComponent.prototype.isDescending = /**\n     * @return {?}\n     */\n    function () {\n        return this._sortOrder === TdDataTableSortingOrder.Descending;\n    };\n    TdDataTableColumnComponent.decorators = [\n        { type: Component, args: [{\n                    /* tslint:disable-next-line */\n                    selector: 'th[td-data-table-column]',\n                    template: \"<span #columnContent class=\\\"td-data-table-heading\\\">\\n  <mat-icon \\n    class=\\\"td-data-table-sort-icon\\\" \\n    *ngIf=\\\"sortable && numeric\\\"\\n    [class.mat-asc]=\\\"isAscending()\\\"\\n    [class.mat-desc]=\\\"isDescending()\\\">\\n    arrow_upward\\n  </mat-icon>\\n  <span>\\n    <ng-content></ng-content>\\n  </span>\\n  <mat-icon \\n    class=\\\"td-data-table-sort-icon\\\" \\n    *ngIf=\\\"sortable && !numeric\\\"\\n    [class.mat-asc]=\\\"isAscending()\\\"\\n    [class.mat-desc]=\\\"isDescending()\\\">\\n    arrow_upward\\n  </mat-icon>\\n</span>\\n<ng-content select=\\\"[td-column-resizer]\\\"></ng-content>\\n\",\n                    styles: [\":host{white-space:nowrap;position:relative;padding:0;vertical-align:middle;text-align:left}:host>.td-data-table-heading{padding:0 28px}:host:first-child>.td-data-table-heading{padding-left:24px;padding-right:initial}html[dir=rtl] :host:first-child>.td-data-table-heading{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}body[dir=rtl] :host:first-child>.td-data-table-heading{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}[dir=rtl] :host:first-child>.td-data-table-heading{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}:host:first-child>.td-data-table-heading bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host:first-child>.td-data-table-heading bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host:last-child>.td-data-table-heading{padding-left:28px;padding-right:24px}html[dir=rtl] :host:last-child>.td-data-table-heading{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}body[dir=rtl] :host:last-child>.td-data-table-heading{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}[dir=rtl] :host:last-child>.td-data-table-heading{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}:host:last-child>.td-data-table-heading bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host:last-child>.td-data-table-heading bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host mat-icon{height:16px;width:16px;font-size:16px!important;line-height:16px!important}:host mat-icon.td-data-table-sort-icon{opacity:0;-webkit-transition:-webkit-transform .25s;transition:transform .25s;transition:transform .25s,-webkit-transform .25s;position:absolute;top:0}:host mat-icon.td-data-table-sort-icon.mat-asc{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}:host mat-icon.td-data-table-sort-icon.mat-desc{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}:host.mat-active.mat-sortable mat-icon.td-data-table-sort-icon,:host:hover.mat-sortable mat-icon.td-data-table-sort-icon{opacity:1}html[dir=rtl] :host{text-align:right;unicode-bidi:embed}body[dir=rtl] :host{text-align:right;unicode-bidi:embed}[dir=rtl] :host{text-align:right;unicode-bidi:embed}:host bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host>*{vertical-align:middle}:host.mat-clickable{cursor:pointer}:host.mat-clickable:focus{outline:0}:host .td-data-table-heading{display:inline-block;position:relative}:host.mat-numeric{text-align:right}html[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}body[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}:host.mat-numeric bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host.mat-numeric bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host.mat-numeric mat-icon.td-data-table-sort-icon{margin-left:-22px;margin-right:initial}html[dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:-22px;unicode-bidi:embed}body[dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:-22px;unicode-bidi:embed}[dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:-22px;unicode-bidi:embed}:host.mat-numeric mat-icon.td-data-table-sort-icon bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host.mat-numeric mat-icon.td-data-table-sort-icon bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host:not(.mat-numeric) mat-icon.td-data-table-sort-icon{margin-left:6px;margin-right:initial}html[dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:6px;unicode-bidi:embed}body[dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:6px;unicode-bidi:embed}[dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:6px;unicode-bidi:embed}:host:not(.mat-numeric) mat-icon.td-data-table-sort-icon bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host:not(.mat-numeric) mat-icon.td-data-table-sort-icon bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    TdDataTableColumnComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    TdDataTableColumnComponent.propDecorators = {\n        _columnContent: [{ type: ViewChild, args: ['columnContent', { read: ElementRef },] }],\n        name: [{ type: Input, args: ['name',] }],\n        sortable: [{ type: Input, args: ['sortable',] }],\n        active: [{ type: Input, args: ['active',] }],\n        numeric: [{ type: Input, args: ['numeric',] }],\n        sortOrder: [{ type: Input, args: ['sortOrder',] }],\n        onSortChange: [{ type: Output, args: ['sortChange',] }],\n        bindClickable: [{ type: HostBinding, args: ['class.mat-clickable',] }],\n        bingSortable: [{ type: HostBinding, args: ['class.mat-sortable',] }],\n        bindActive: [{ type: HostBinding, args: ['class.mat-active',] }],\n        bindNumeric: [{ type: HostBinding, args: ['class.mat-numeric',] }],\n        handleClick: [{ type: HostListener, args: ['click',] }]\n    };\n    return TdDataTableColumnComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdDataTableCellComponent = /** @class */ (function () {\n    function TdDataTableCellComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        /**\n         * numeric?: boolean\n         * Makes cell follow the numeric data-table specs.\n         * Defaults to 'false'\n         */\n        this.numeric = false;\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-cell');\n    }\n    Object.defineProperty(TdDataTableCellComponent.prototype, \"align\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._align;\n        },\n        /**\n         * align?: 'start' | 'center' | 'end'\n         * Makes cell content align on demand\n         * Defaults to 'left', overrides numeric\n         */\n        set: /**\n         * align?: 'start' | 'center' | 'end'\n         * Makes cell content align on demand\n         * Defaults to 'left', overrides numeric\n         * @param {?} align\n         * @return {?}\n         */\n        function (align) {\n            this._align = align;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdDataTableCellComponent.prototype, \"bindNumeric\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.numeric;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TdDataTableCellComponent.decorators = [\n        { type: Component, args: [{\n                    /* tslint:disable-next-line */\n                    selector: 'td[td-data-table-cell]',\n                    template: \"<div class=\\\"td-data-table-cell-content-wrapper\\\"\\n     [class.td-data-table-cell-numeric]=\\\"numeric\\\"\\n     [class.td-data-table-cell-align-center]=\\\"align === 'center'\\\"\\n     [class.td-data-table-cell-align-end]=\\\"align === 'end'\\\"\\n     [class.td-data-table-cell-align-start]=\\\"align === 'start'\\\"\\n     >\\n  <ng-content></ng-content>\\n</div>\",\n                    styles: [\":host{vertical-align:middle;text-align:left;padding:0}html[dir=rtl] :host{text-align:right;unicode-bidi:embed}body[dir=rtl] :host{text-align:right;unicode-bidi:embed}[dir=rtl] :host{text-align:right;unicode-bidi:embed}:host bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host>.td-data-table-cell-content-wrapper{padding:0 28px;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}:host>.td-data-table-cell-content-wrapper.td-data-table-cell-numeric{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}:host>.td-data-table-cell-content-wrapper.td-data-table-cell-align-start{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}:host>.td-data-table-cell-content-wrapper.td-data-table-cell-align-end{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}:host>.td-data-table-cell-content-wrapper.td-data-table-cell-align-center{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}:host:first-child>.td-data-table-cell-content-wrapper{padding-left:24px;padding-right:initial}html[dir=rtl] :host:first-child>.td-data-table-cell-content-wrapper{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}body[dir=rtl] :host:first-child>.td-data-table-cell-content-wrapper{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}[dir=rtl] :host:first-child>.td-data-table-cell-content-wrapper{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}:host:first-child>.td-data-table-cell-content-wrapper bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host:first-child>.td-data-table-cell-content-wrapper bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host:last-child>.td-data-table-cell-content-wrapper{padding-left:28px;padding-right:24px}html[dir=rtl] :host:last-child>.td-data-table-cell-content-wrapper{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}body[dir=rtl] :host:last-child>.td-data-table-cell-content-wrapper{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}[dir=rtl] :host:last-child>.td-data-table-cell-content-wrapper{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}:host:last-child>.td-data-table-cell-content-wrapper bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host:last-child>.td-data-table-cell-content-wrapper bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host>*{vertical-align:middle}:host.mat-clickable{cursor:pointer}:host.mat-clickable:focus{outline:0}:host.mat-numeric{text-align:right}html[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}body[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}:host.mat-numeric bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host.mat-numeric bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    TdDataTableCellComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    TdDataTableCellComponent.propDecorators = {\n        numeric: [{ type: Input, args: ['numeric',] }],\n        align: [{ type: Input }],\n        bindNumeric: [{ type: HostBinding, args: ['class.mat-numeric',] }]\n    };\n    return TdDataTableCellComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdDataTableTableComponent = /** @class */ (function () {\n    function TdDataTableTableComponent(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table');\n    }\n    TdDataTableTableComponent.decorators = [\n        { type: Component, args: [{\n                    /* tslint:disable-next-line */\n                    selector: 'table[td-data-table]',\n                    template: \"<ng-content></ng-content>\",\n                    styles: [\":host{width:100%;position:relative;border-spacing:0;overflow:hidden;border-collapse:collapse}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    TdDataTableTableComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    return TdDataTableTableComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdDataTableService = /** @class */ (function () {\n    function TdDataTableService() {\n    }\n    /**\n     * params:\n     * - data: any[]\n     * - searchTerm: string\n     * - ignoreCase: boolean = false\n     * - excludedColumns: string[] = []\n     *\n     * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\n     */\n    /**\n     * params:\n     * - data: any[]\n     * - searchTerm: string\n     * - ignoreCase: boolean = false\n     * - excludedColumns: string[] = []\n     *\n     * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\n     * @param {?} data\n     * @param {?} searchTerm\n     * @param {?=} ignoreCase\n     * @param {?=} excludedColumns\n     * @return {?}\n     */\n    TdDataTableService.prototype.filterData = /**\n     * params:\n     * - data: any[]\n     * - searchTerm: string\n     * - ignoreCase: boolean = false\n     * - excludedColumns: string[] = []\n     *\n     * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\n     * @param {?} data\n     * @param {?} searchTerm\n     * @param {?=} ignoreCase\n     * @param {?=} excludedColumns\n     * @return {?}\n     */\n    function (data, searchTerm, ignoreCase, excludedColumns) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @type {?} */\n        var filter = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\n        if (filter) {\n            data = data.filter(function (item) {\n                /** @type {?} */\n                var res = Object.keys(item).find(function (key) {\n                    if (!excludedColumns || excludedColumns.indexOf(key) === -1) {\n                        /** @type {?} */\n                        var preItemValue = ('' + item[key]);\n                        /** @type {?} */\n                        var itemValue = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n                        return itemValue.indexOf(filter) > -1;\n                    }\n                });\n                return !(typeof res === 'undefined');\n            });\n        }\n        return data;\n    };\n    /**\n     * params:\n     * - data: any[]\n     * - sortBy: string\n     * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\n     *\n     * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\n     */\n    /**\n     * params:\n     * - data: any[]\n     * - sortBy: string\n     * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\n     *\n     * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\n     * @param {?} data\n     * @param {?} sortBy\n     * @param {?=} sortOrder\n     * @return {?}\n     */\n    TdDataTableService.prototype.sortData = /**\n     * params:\n     * - data: any[]\n     * - sortBy: string\n     * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\n     *\n     * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\n     * @param {?} data\n     * @param {?} sortBy\n     * @param {?=} sortOrder\n     * @return {?}\n     */\n    function (data, sortBy, sortOrder) {\n        if (sortOrder === void 0) { sortOrder = TdDataTableSortingOrder.Ascending; }\n        if (sortBy) {\n            data = Array.from(data); // Change the array reference to trigger OnPush and not mutate original array\n            data.sort(function (a, b) {\n                /** @type {?} */\n                var compA = a[sortBy];\n                /** @type {?} */\n                var compB = b[sortBy];\n                /** @type {?} */\n                var direction = 0;\n                if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\n                    direction = Number.parseFloat(compA) - Number.parseFloat(compB);\n                }\n                else {\n                    if (compA < compB) {\n                        direction = -1;\n                    }\n                    else if (compA > compB) {\n                        direction = 1;\n                    }\n                }\n                return direction * (sortOrder === TdDataTableSortingOrder.Descending ? -1 : 1);\n            });\n        }\n        return data;\n    };\n    /**\n     * params:\n     * - data: any[]\n     * - fromRow: number\n     * - toRow: : number\n     *\n     * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\n     */\n    /**\n     * params:\n     * - data: any[]\n     * - fromRow: number\n     * - toRow: : number\n     *\n     * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\n     * @param {?} data\n     * @param {?} fromRow\n     * @param {?} toRow\n     * @return {?}\n     */\n    TdDataTableService.prototype.pageData = /**\n     * params:\n     * - data: any[]\n     * - fromRow: number\n     * - toRow: : number\n     *\n     * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\n     * @param {?} data\n     * @param {?} fromRow\n     * @param {?} toRow\n     * @return {?}\n     */\n    function (data, fromRow, toRow) {\n        if (fromRow >= 1) {\n            data = data.slice(fromRow - 1, toRow);\n        }\n        return data;\n    };\n    TdDataTableService.decorators = [\n        { type: Injectable }\n    ];\n    return TdDataTableService;\n}());\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction DATA_TABLE_PROVIDER_FACTORY(parent) {\n    return parent || new TdDataTableService();\n}\n/** @type {?} */\nvar DATA_TABLE_PROVIDER = {\n    // If there is already a service available, use that. Otherwise, provide a new one.\n    provide: TdDataTableService,\n    deps: [[new Optional(), new SkipSelf(), TdDataTableService]],\n    useFactory: DATA_TABLE_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar TD_DATA_TABLE = [\n    TdDataTableComponent,\n    TdDataTableTemplateDirective,\n    TdDataTableColumnComponent,\n    TdDataTableCellComponent,\n    TdDataTableRowComponent,\n    TdDataTableColumnRowComponent,\n    TdDataTableTableComponent,\n];\nvar CovalentDataTableModule = /** @class */ (function () {\n    function CovalentDataTableModule() {\n    }\n    CovalentDataTableModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatCheckboxModule,\n                        MatTooltipModule,\n                        MatIconModule,\n                        MatPseudoCheckboxModule,\n                    ],\n                    declarations: [\n                        TD_DATA_TABLE,\n                    ],\n                    exports: [\n                        TD_DATA_TABLE,\n                    ],\n                    providers: [\n                        DATA_TABLE_PROVIDER,\n                    ],\n                },] }\n    ];\n    return CovalentDataTableModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\nexport { CovalentDataTableModule, TdDataTableSortingOrder, TdDataTableBase, _TdDataTableMixinBase, TdDataTableComponent, TdDataTableCellComponent, TdDataTableColumnComponent, TdDataTableColumnRowComponent, TdDataTableRowComponent, TdDataTableTableComponent, TdDataTableTemplateDirective, DATA_TABLE_PROVIDER_FACTORY, TdDataTableService, DATA_TABLE_PROVIDER };\n\n//# sourceMappingURL=covalent-core-data-table.js.map","import { CommonModule } from '@angular/common';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { __extends } from 'tslib';\nimport { Component, Input, ViewChild, HostListener, Optional, Directive, Renderer2, ElementRef, Inject, forwardRef, ContentChildren, SecurityContext, NgModule } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { mixinDisabled, tdCollapseAnimation } from '@covalent/core/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdLayoutComponent = /** @class */ (function () {\n    function TdLayoutComponent() {\n        /**\n         * mode?: 'side', 'push' or 'over'\n         *\n         * The mode or styling of the sidenav.\n         * Defaults to \"over\".\n         * See \"MatSidenav\" documentation for more info.\n         *\n         * https://github.com/angular/material2/tree/master/src/lib/sidenav\n         */\n        this.mode = 'over';\n        /**\n         * opened?: boolean\n         *\n         * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n         * Defaults to \"false\".\n         *\n         * See \"MatSidenav\" documentation for more info.\n         *\n         * https://github.com/angular/material2/tree/master/src/lib/sidenav\n         */\n        this.opened = false;\n        /**\n         * sidenavWidth?: string\n         *\n         * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n         * Defaults to \"320px\".\n         *\n         * https://github.com/angular/material2/tree/master/src/lib/sidenav\n         */\n        this.sidenavWidth = '320px';\n        /**\n         * containerAutosize?: boolean\n         *\n         * Sets \"autosize\" of the sidenav-container.\n         * Defaults to \"false\".\n         *\n         * See documentation for more info and potential performance risks.\n         *\n         * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n         */\n        this.containerAutosize = false;\n    }\n    Object.defineProperty(TdLayoutComponent.prototype, \"disableClose\", {\n        /**\n         * Checks if `ESC` should close the sidenav\n         * Should only close it for `push` and `over` modes\n         */\n        get: /**\n         * Checks if `ESC` should close the sidenav\n         * Should only close it for `push` and `over` modes\n         * @return {?}\n         */\n        function () {\n            return this.mode === 'side';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdLayoutComponent.prototype.toggle = /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this.sidenav.toggle(!this.sidenav.opened);\n    };\n    /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdLayoutComponent.prototype.open = /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this.sidenav.open();\n    };\n    /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdLayoutComponent.prototype.close = /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this.sidenav.close();\n    };\n    TdLayoutComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'td-layout',\n                    template: \"<mat-sidenav-container fullscreen [autosize]=\\\"containerAutosize\\\">\\n  <mat-sidenav #sidenav\\n              class=\\\"td-layout-sidenav\\\"\\n              [mode]=\\\"mode\\\"\\n              [opened]=\\\"opened\\\"\\n              [style.max-width]=\\\"sidenavWidth\\\"\\n              [style.min-width]=\\\"sidenavWidth\\\"\\n              [disableClose]=\\\"disableClose\\\">\\n    <ng-content select=\\\"td-navigation-drawer\\\"></ng-content>\\n    <ng-content select=\\\"[td-sidenav-content]\\\"></ng-content>\\n  </mat-sidenav>\\n  <ng-content></ng-content>\\n</mat-sidenav-container>\\n\",\n                    styles: [\":host{display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;width:100%;min-height:100%;height:100%;overflow:hidden}:host ::ng-deep>mat-sidenav-container .mat-drawer>.mat-drawer-inner-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}\"]\n                }] }\n    ];\n    TdLayoutComponent.propDecorators = {\n        sidenav: [{ type: ViewChild, args: [MatSidenav,] }],\n        mode: [{ type: Input, args: ['mode',] }],\n        opened: [{ type: Input, args: ['opened',] }],\n        sidenavWidth: [{ type: Input, args: ['sidenavWidth',] }],\n        containerAutosize: [{ type: Input, args: ['containerAutosize',] }]\n    };\n    return TdLayoutComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar LayoutToggleBase = /** @class */ (function () {\n    function LayoutToggleBase() {\n    }\n    return LayoutToggleBase;\n}());\n/* tslint:disable-next-line */\n/** @type {?} */\nvar _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n/**\n * @abstract\n */\nvar LayoutToggle = /** @class */ (function (_super) {\n    __extends(LayoutToggle, _super);\n    function LayoutToggle(_layout, _renderer, _elementRef) {\n        var _this = _super.call(this) || this;\n        _this._layout = _layout;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this._initialized = false;\n        _this._hideWhenOpened = false;\n        // if layout has not been provided\n        // show warn message\n        if (!_this._layout) {\n            _this._noLayoutMessage();\n        }\n        _this._renderer.addClass(_this._elementRef.nativeElement, 'td-layout-menu-button');\n        return _this;\n    }\n    Object.defineProperty(LayoutToggle.prototype, \"hideWhenOpened\", {\n        /**\n         * hideWhenOpened?: boolean\n         * When this is set to true, the host will be hidden when\n         * the sidenav is opened.\n         */\n        set: /**\n         * hideWhenOpened?: boolean\n         * When this is set to true, the host will be hidden when\n         * the sidenav is opened.\n         * @param {?} hideWhenOpened\n         * @return {?}\n         */\n        function (hideWhenOpened) {\n            this._hideWhenOpened = hideWhenOpened;\n            if (this._initialized) {\n                this._toggleVisibility();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    LayoutToggle.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._initialized = true;\n        if (this._layout && this._layout.sidenav) {\n            this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(function () {\n                _this._toggleVisibility();\n            });\n        }\n        // execute toggleVisibility since the onOpenStart and onCloseStart\n        // methods might not be executed always when the element is rendered\n        this._toggleVisibility();\n    };\n    /**\n     * @return {?}\n     */\n    LayoutToggle.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._toggleSubs) {\n            this._toggleSubs.unsubscribe();\n            this._toggleSubs = undefined;\n        }\n    };\n    /**\n     * Listens to host click event to trigger the layout toggle\n     */\n    /**\n     * Listens to host click event to trigger the layout toggle\n     * @param {?} event\n     * @return {?}\n     */\n    LayoutToggle.prototype.clickListener = /**\n     * Listens to host click event to trigger the layout toggle\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        event.preventDefault();\n        if (!this.disabled) {\n            // if layout has been provided, try triggering the click on it\n            // else show warn message\n            if (this._layout && this._layout.open) {\n                this.onClick();\n            }\n            else {\n                this._noLayoutMessage();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LayoutToggle.prototype._toggleVisibility = /**\n     * @return {?}\n     */\n    function () {\n        if (this._layout) {\n            if (this._layout.sidenav.opened && this._hideWhenOpened) {\n                this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n            }\n            else {\n                this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LayoutToggle.prototype._noLayoutMessage = /**\n     * @return {?}\n     */\n    function () {\n        /* tslint:disable-next-line */\n        console.warn('Covalent: Parent layout not found for layout toggle directive');\n    };\n    LayoutToggle.propDecorators = {\n        hideWhenOpened: [{ type: Input, args: ['hideWhenOpened',] }],\n        clickListener: [{ type: HostListener, args: ['click', ['$event'],] }]\n    };\n    return LayoutToggle;\n}(_TdLayoutToggleMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdLayoutToggleDirective = /** @class */ (function (_super) {\n    __extends(TdLayoutToggleDirective, _super);\n    function TdLayoutToggleDirective(layout, renderer, elementRef) {\n        return _super.call(this, layout, renderer, elementRef) || this;\n    }\n    Object.defineProperty(TdLayoutToggleDirective.prototype, \"tdLayoutToggle\", {\n        set: /**\n         * @param {?} tdLayoutToggle\n         * @return {?}\n         */\n        function (tdLayoutToggle) {\n            this.disabled = !((/** @type {?} */ (tdLayoutToggle)) === '' || tdLayoutToggle);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdLayoutToggleDirective.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        this._layout.toggle();\n    };\n    TdLayoutToggleDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[tdLayoutToggle]',\n                },] }\n    ];\n    /** @nocollapse */\n    TdLayoutToggleDirective.ctorParameters = function () { return [\n        { type: TdLayoutComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return TdLayoutComponent; }),] }] },\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    TdLayoutToggleDirective.propDecorators = {\n        tdLayoutToggle: [{ type: Input, args: ['tdLayoutToggle',] }]\n    };\n    return TdLayoutToggleDirective;\n}(LayoutToggle));\nvar TdLayoutCloseDirective = /** @class */ (function (_super) {\n    __extends(TdLayoutCloseDirective, _super);\n    function TdLayoutCloseDirective(layout, renderer, elementRef) {\n        return _super.call(this, layout, renderer, elementRef) || this;\n    }\n    Object.defineProperty(TdLayoutCloseDirective.prototype, \"tdLayoutClose\", {\n        set: /**\n         * @param {?} tdLayoutClose\n         * @return {?}\n         */\n        function (tdLayoutClose) {\n            this.disabled = !((/** @type {?} */ (tdLayoutClose)) === '' || tdLayoutClose);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdLayoutCloseDirective.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        this._layout.close();\n    };\n    TdLayoutCloseDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[tdLayoutClose]',\n                },] }\n    ];\n    /** @nocollapse */\n    TdLayoutCloseDirective.ctorParameters = function () { return [\n        { type: TdLayoutComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return TdLayoutComponent; }),] }] },\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    TdLayoutCloseDirective.propDecorators = {\n        tdLayoutClose: [{ type: Input, args: ['tdLayoutClose',] }]\n    };\n    return TdLayoutCloseDirective;\n}(LayoutToggle));\nvar TdLayoutOpenDirective = /** @class */ (function (_super) {\n    __extends(TdLayoutOpenDirective, _super);\n    function TdLayoutOpenDirective(layout, renderer, elementRef) {\n        return _super.call(this, layout, renderer, elementRef) || this;\n    }\n    Object.defineProperty(TdLayoutOpenDirective.prototype, \"tdLayoutClose\", {\n        set: /**\n         * @param {?} tdLayoutOpen\n         * @return {?}\n         */\n        function (tdLayoutOpen) {\n            this.disabled = !((/** @type {?} */ (tdLayoutOpen)) === '' || tdLayoutOpen);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdLayoutOpenDirective.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        this._layout.open();\n    };\n    TdLayoutOpenDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[tdLayoutOpen]',\n                },] }\n    ];\n    /** @nocollapse */\n    TdLayoutOpenDirective.ctorParameters = function () { return [\n        { type: TdLayoutComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return TdLayoutComponent; }),] }] },\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    TdLayoutOpenDirective.propDecorators = {\n        tdLayoutClose: [{ type: Input, args: ['tdLayoutOpen',] }]\n    };\n    return TdLayoutOpenDirective;\n}(LayoutToggle));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdLayoutNavComponent = /** @class */ (function () {\n    function TdLayoutNavComponent(_router) {\n        this._router = _router;\n        /**\n         * color?: string\n         *\n         * toolbar color option: primary | accent | warn.\n         * If [color] is not set, primary is used.\n         */\n        this.color = 'primary';\n    }\n    Object.defineProperty(TdLayoutNavComponent.prototype, \"routerEnabled\", {\n        /**\n         * Checks if router was injected.\n         */\n        get: /**\n         * Checks if router was injected.\n         * @return {?}\n         */\n        function () {\n            return !!this._router && !!this.navigationRoute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdLayoutNavComponent.prototype.handleNavigationClick = /**\n     * @return {?}\n     */\n    function () {\n        if (this.routerEnabled) {\n            this._router.navigateByUrl(this.navigationRoute);\n        }\n    };\n    TdLayoutNavComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'td-layout-nav',\n                    template: \"<div class=\\\"td-layout-nav-wrapper\\\">\\n  <mat-toolbar [color]=\\\"color\\\">\\n    <ng-content select=\\\"[td-menu-button]\\\"></ng-content>\\n    <span *ngIf=\\\"icon || logo || toolbarTitle\\\"\\n          [class.cursor-pointer]=\\\"routerEnabled\\\"\\n          (click)=\\\"handleNavigationClick()\\\"\\n          class=\\\"td-layout-nav-toolbar-content\\\">\\n      <mat-icon *ngIf=\\\"icon\\\">{{icon}}</mat-icon>\\n      <mat-icon *ngIf=\\\"logo && !icon\\\" class=\\\"mat-icon-logo\\\" [svgIcon]=\\\"logo\\\"></mat-icon>\\n      <span *ngIf=\\\"toolbarTitle\\\">{{toolbarTitle}}</span>\\n    </span>\\n    <ng-content select=\\\"[td-toolbar-content]\\\"></ng-content>\\n  </mat-toolbar>\\n  <div class=\\\"td-layout-nav-content\\\" cdkScrollable>\\n    <ng-content></ng-content>\\n  </div>\\n  <ng-content select=\\\"td-layout-footer\\\"></ng-content>\\n</div>\\n\",\n                    styles: [\".td-menu-button{margin-left:0}::ng-deep [dir=rtl] .td-menu-button{margin-right:0;margin-left:6px}:host{display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;width:100%;min-height:100%;height:100%;overflow:hidden}:host .td-layout-nav-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;width:100%;min-height:100%;height:100%}:host .td-layout-nav-wrapper .td-layout-nav-toolbar-content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}:host .td-layout-nav-wrapper .td-layout-nav-content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1;position:relative;overflow:auto;-webkit-overflow-scrolling:touch}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    TdLayoutNavComponent.ctorParameters = function () { return [\n        { type: Router, decorators: [{ type: Optional }] }\n    ]; };\n    TdLayoutNavComponent.propDecorators = {\n        toolbarTitle: [{ type: Input, args: ['toolbarTitle',] }],\n        icon: [{ type: Input, args: ['icon',] }],\n        logo: [{ type: Input, args: ['logo',] }],\n        color: [{ type: Input, args: ['color',] }],\n        navigationRoute: [{ type: Input, args: ['navigationRoute',] }]\n    };\n    return TdLayoutNavComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdLayoutNavListComponent = /** @class */ (function () {\n    function TdLayoutNavListComponent(_router) {\n        this._router = _router;\n        /**\n         * color?: string\n         *\n         * toolbar color option: primary | accent | warn.\n         * If [color] is not set, primary is used.\n         */\n        this.color = 'primary';\n        /**\n         * mode?: 'side', 'push' or 'over'\n         *\n         * The mode or styling of the sidenav.\n         * Defaults to \"side\".\n         * See \"MatSidenav\" documentation for more info.\n         *\n         * https://github.com/angular/material2/tree/master/src/lib/sidenav\n         */\n        this.mode = 'side';\n        /**\n         * opened?: boolean\n         * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n         * Defaults to \"true\".\n         *\n         * See \"MatSidenav\" documentation for more info.\n         *\n         * https://github.com/angular/material2/tree/master/src/lib/sidenav\n         */\n        this.opened = true;\n        /**\n         * sidenavWidth?: string\n         *\n         * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n         * Defaults to \"350px\".\n         *\n         * https://github.com/angular/material2/tree/master/src/lib/sidenav\n         */\n        this.sidenavWidth = '350px';\n        /**\n         * containerAutosize?: boolean\n         *\n         * Sets \"autosize\" of the sidenav-container.\n         * Defaults to \"false\".\n         *\n         * See documentation for more info and potential performance risks.\n         *\n         * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n         */\n        this.containerAutosize = false;\n    }\n    Object.defineProperty(TdLayoutNavListComponent.prototype, \"disableClose\", {\n        /**\n         * Checks if `ESC` should close the sidenav\n         * Should only close it for `push` and `over` modes\n         */\n        get: /**\n         * Checks if `ESC` should close the sidenav\n         * Should only close it for `push` and `over` modes\n         * @return {?}\n         */\n        function () {\n            return this.mode === 'side';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdLayoutNavListComponent.prototype, \"routerEnabled\", {\n        /**\n         * Checks if router was injected.\n         */\n        get: /**\n         * Checks if router was injected.\n         * @return {?}\n         */\n        function () {\n            return !!this._router && !!this.navigationRoute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdLayoutNavListComponent.prototype.handleNavigationClick = /**\n     * @return {?}\n     */\n    function () {\n        if (this.routerEnabled) {\n            this._router.navigateByUrl(this.navigationRoute);\n        }\n    };\n    /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdLayoutNavListComponent.prototype.toggle = /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this.sidenav.toggle(!this.sidenav.opened);\n    };\n    /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdLayoutNavListComponent.prototype.open = /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this.sidenav.open();\n    };\n    /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdLayoutNavListComponent.prototype.close = /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this.sidenav.close();\n    };\n    TdLayoutNavListComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'td-layout-nav-list',\n                    template: \"<div class=\\\"td-layout-nav-list-wrapper\\\">\\n  <mat-sidenav-container fullscreen [autosize]=\\\"containerAutosize\\\" class=\\\"td-layout-nav-list\\\">\\n    <mat-sidenav #sidenav\\n                position=\\\"start\\\"\\n                [mode]=\\\"mode\\\"\\n                [opened]=\\\"opened\\\"\\n                [disableClose]=\\\"disableClose\\\"\\n                [style.max-width]=\\\"sidenavWidth\\\"\\n                [style.min-width]=\\\"sidenavWidth\\\">\\n      <mat-toolbar [color]=\\\"color\\\">\\n        <ng-content select=\\\"[td-menu-button]\\\"></ng-content>\\n        <span *ngIf=\\\"icon || logo || toolbarTitle\\\"\\n              class=\\\"td-layout-nav-list-toolbar-content\\\"\\n              [class.cursor-pointer]=\\\"routerEnabled\\\"\\n              (click)=\\\"handleNavigationClick()\\\">\\n          <mat-icon *ngIf=\\\"icon\\\">{{icon}}</mat-icon>\\n          <mat-icon *ngIf=\\\"logo && !icon\\\" class=\\\"mat-icon-logo\\\" [svgIcon]=\\\"logo\\\"></mat-icon>\\n          <span *ngIf=\\\"toolbarTitle\\\">{{toolbarTitle}}</span>\\n        </span>\\n        <ng-content select=\\\"[td-sidenav-toolbar-content]\\\"></ng-content>\\n      </mat-toolbar>\\n      <div class=\\\"td-layout-nav-list-content\\\" cdkScrollable>\\n        <ng-content select=\\\"[td-sidenav-content]\\\"></ng-content>\\n      </div>\\n    </mat-sidenav>\\n    <div class=\\\"td-layout-nav-list-main\\\">\\n      <mat-toolbar [color]=\\\"color\\\">\\n        <ng-content select=\\\"[td-toolbar-content]\\\"></ng-content>\\n      </mat-toolbar>\\n      <div class=\\\"td-layout-nav-list-content\\\" cdkScrollable>\\n        <ng-content></ng-content>\\n      </div>\\n      <ng-content select=\\\"td-layout-footer-inner\\\"></ng-content>\\n    </div>\\n  </mat-sidenav-container>\\n</div>\\n<ng-content select=\\\"td-layout-footer\\\"></ng-content>\",\n                    styles: [\":host{margin:0;width:100%;min-height:100%;height:100%;overflow:hidden;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1}:host .td-layout-nav-list-wrapper>.mat-sidenav-container>mat-sidenav.mat-drawer-side{border-right:0}[dir=rtl] :host .td-layout-nav-list-wrapper>.mat-sidenav-container>mat-sidenav.mat-drawer-side{border-left:0}:host .td-layout-nav-list-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1;position:relative;overflow:auto;-webkit-overflow-scrolling:touch}:host .td-layout-nav-list-wrapper .td-layout-nav-list-toolbar-content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}:host .td-layout-nav-list-wrapper .td-layout-nav-list-content{text-align:start;-webkit-box-flex:1;-ms-flex:1;flex:1;display:block;position:relative;overflow:auto;-webkit-overflow-scrolling:touch}:host .td-layout-nav-list-wrapper .td-layout-nav-list-main{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;width:100%;min-height:100%;height:100%;position:relative;overflow:auto}:host .td-layout-nav-list-wrapper .td-layout-nav-list-main .td-layout-nav-list-content{display:block;position:relative;overflow:auto;-webkit-overflow-scrolling:touch;-webkit-box-flex:1;-ms-flex:1;flex:1}:host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list{-webkit-box-flex:1;-ms-flex:1;flex:1}:host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list>mat-sidenav.mat-drawer-closed,:host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list>mat-sidenav.mat-drawer-closing,:host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list>mat-sidenav.mat-drawer-opened,:host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list>mat-sidenav.mat-drawer-opening{-webkit-box-shadow:none;box-shadow:none}:host ::ng-deep mat-sidenav-container.td-layout-nav-list>.mat-drawer-content{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}:host ::ng-deep mat-sidenav-container.td-layout-nav-list>.mat-drawer>.mat-drawer-inner-container{-webkit-box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    TdLayoutNavListComponent.ctorParameters = function () { return [\n        { type: Router, decorators: [{ type: Optional }] }\n    ]; };\n    TdLayoutNavListComponent.propDecorators = {\n        sidenav: [{ type: ViewChild, args: [MatSidenav,] }],\n        toolbarTitle: [{ type: Input, args: ['toolbarTitle',] }],\n        icon: [{ type: Input, args: ['icon',] }],\n        logo: [{ type: Input, args: ['logo',] }],\n        color: [{ type: Input, args: ['color',] }],\n        mode: [{ type: Input, args: ['mode',] }],\n        opened: [{ type: Input, args: ['opened',] }],\n        sidenavWidth: [{ type: Input, args: ['sidenavWidth',] }],\n        containerAutosize: [{ type: Input, args: ['containerAutosize',] }],\n        navigationRoute: [{ type: Input, args: ['navigationRoute',] }]\n    };\n    return TdLayoutNavListComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdLayoutNavListToggleDirective = /** @class */ (function (_super) {\n    __extends(TdLayoutNavListToggleDirective, _super);\n    function TdLayoutNavListToggleDirective(layout, renderer, elementRef) {\n        return _super.call(this, layout, renderer, elementRef) || this;\n    }\n    Object.defineProperty(TdLayoutNavListToggleDirective.prototype, \"tdLayoutNavListToggle\", {\n        set: /**\n         * @param {?} tdLayoutNavListToggle\n         * @return {?}\n         */\n        function (tdLayoutNavListToggle) {\n            this.disabled = !((/** @type {?} */ (tdLayoutNavListToggle)) === '' || tdLayoutNavListToggle);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdLayoutNavListToggleDirective.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        this._layout.toggle();\n    };\n    TdLayoutNavListToggleDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[tdLayoutNavListToggle]',\n                },] }\n    ];\n    /** @nocollapse */\n    TdLayoutNavListToggleDirective.ctorParameters = function () { return [\n        { type: TdLayoutNavListComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return TdLayoutNavListComponent; }),] }] },\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    TdLayoutNavListToggleDirective.propDecorators = {\n        tdLayoutNavListToggle: [{ type: Input, args: ['tdLayoutNavListToggle',] }]\n    };\n    return TdLayoutNavListToggleDirective;\n}(LayoutToggle));\nvar TdLayoutNavListCloseDirective = /** @class */ (function (_super) {\n    __extends(TdLayoutNavListCloseDirective, _super);\n    function TdLayoutNavListCloseDirective(layout, renderer, elementRef) {\n        return _super.call(this, layout, renderer, elementRef) || this;\n    }\n    Object.defineProperty(TdLayoutNavListCloseDirective.prototype, \"tdLayoutNavListClose\", {\n        set: /**\n         * @param {?} tdLayoutNavListClose\n         * @return {?}\n         */\n        function (tdLayoutNavListClose) {\n            this.disabled = !((/** @type {?} */ (tdLayoutNavListClose)) === '' || tdLayoutNavListClose);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdLayoutNavListCloseDirective.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        this._layout.close();\n    };\n    TdLayoutNavListCloseDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[tdLayoutNavListClose]',\n                },] }\n    ];\n    /** @nocollapse */\n    TdLayoutNavListCloseDirective.ctorParameters = function () { return [\n        { type: TdLayoutNavListComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return TdLayoutNavListComponent; }),] }] },\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    TdLayoutNavListCloseDirective.propDecorators = {\n        tdLayoutNavListClose: [{ type: Input, args: ['tdLayoutNavListClose',] }]\n    };\n    return TdLayoutNavListCloseDirective;\n}(LayoutToggle));\nvar TdLayoutNavListOpenDirective = /** @class */ (function (_super) {\n    __extends(TdLayoutNavListOpenDirective, _super);\n    function TdLayoutNavListOpenDirective(layout, renderer, elementRef) {\n        return _super.call(this, layout, renderer, elementRef) || this;\n    }\n    Object.defineProperty(TdLayoutNavListOpenDirective.prototype, \"tdLayoutNavListOpen\", {\n        set: /**\n         * @param {?} tdLayoutNavListOpen\n         * @return {?}\n         */\n        function (tdLayoutNavListOpen) {\n            this.disabled = !((/** @type {?} */ (tdLayoutNavListOpen)) === '' || tdLayoutNavListOpen);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdLayoutNavListOpenDirective.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        this._layout.open();\n    };\n    TdLayoutNavListOpenDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[tdLayoutNavListOpen]',\n                },] }\n    ];\n    /** @nocollapse */\n    TdLayoutNavListOpenDirective.ctorParameters = function () { return [\n        { type: TdLayoutNavListComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return TdLayoutNavListComponent; }),] }] },\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    TdLayoutNavListOpenDirective.propDecorators = {\n        tdLayoutNavListOpen: [{ type: Input, args: ['tdLayoutNavListOpen',] }]\n    };\n    return TdLayoutNavListOpenDirective;\n}(LayoutToggle));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdLayoutCardOverComponent = /** @class */ (function () {\n    function TdLayoutCardOverComponent() {\n        /**\n         * cardWidth?: string\n         *\n         * Card flex width in %.\n         * Defaults to 70%.\n         */\n        this.cardWidth = 70;\n        /**\n         * color?: string\n         *\n         * toolbar color option: primary | accent | warn.\n         * If [color] is not set, primary is used.\n         */\n        this.color = 'primary';\n    }\n    TdLayoutCardOverComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'td-layout-card-over',\n                    template: \"<mat-toolbar [color]=\\\"color\\\">\\n</mat-toolbar>\\n<div class=\\\"td-layout-card-over-wrapper\\\">\\n  <div class=\\\"td-layout-card-over\\\"\\n        [style.max-width.%]=\\\"cardWidth\\\"\\n        [style.flex]=\\\"'1 1 ' + cardWidth + '%'\\\"\\n        [style.-ms-flex]=\\\"'1 1 ' + cardWidth + '%'\\\"\\n        [style.-webkit-box-flex]=\\\"1\\\">\\n    <mat-card>\\n      <mat-card-title *ngIf=\\\"cardTitle\\\">{{cardTitle}}</mat-card-title>\\n      <mat-card-subtitle *ngIf=\\\"cardSubtitle\\\">{{cardSubtitle}}</mat-card-subtitle>\\n      <mat-divider *ngIf=\\\"cardTitle || cardSubtitle\\\"></mat-divider>\\n      <ng-content></ng-content>\\n    </mat-card>\\n    <ng-content select=\\\"[td-after-card]\\\"></ng-content>\\n  </div>\\n</div>\\n\",\n                    styles: [\":host{position:relative;display:block;z-index:2;width:100%;min-height:100%;height:100%}:host [td-after-card]{display:block}.td-layout-card-over-wrapper{margin:-64px 0;width:100%;min-height:100%;height:100%}@media (min-width:600px){.td-layout-card-over-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-ms-flex-line-pack:start;align-content:flex-start;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.td-layout-card-over-wrapper .td-layout-card-over{max-height:100%;-webkit-box-sizing:border-box;box-sizing:border-box}}@media (max-width:599px){.td-layout-card-over-wrapper .td-layout-card-over{max-width:100%!important}}\"]\n                }] }\n    ];\n    TdLayoutCardOverComponent.propDecorators = {\n        cardTitle: [{ type: Input, args: ['cardTitle',] }],\n        cardSubtitle: [{ type: Input, args: ['cardSubtitle',] }],\n        cardWidth: [{ type: Input, args: ['cardWidth',] }],\n        color: [{ type: Input, args: ['color',] }]\n    };\n    return TdLayoutCardOverComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdLayoutManageListComponent = /** @class */ (function () {\n    function TdLayoutManageListComponent() {\n        /**\n         * mode?: 'side', 'push' or 'over'\n         *\n         * The mode or styling of the sidenav.\n         * Defaults to \"side\".\n         * See \"MatSidenav\" documentation for more info.\n         *\n         * https://github.com/angular/material2/tree/master/src/lib/sidenav\n         */\n        this.mode = 'side';\n        /**\n         * opened?: boolean\n         *\n         * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n         * Defaults to \"true\".\n         *\n         * See \"MatSidenav\" documentation for more info.\n         *\n         * https://github.com/angular/material2/tree/master/src/lib/sidenav\n         */\n        this.opened = true;\n        /**\n         * sidenavWidth?: string\n         *\n         * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n         * Defaults to \"257px\".\n         *\n         * https://github.com/angular/material2/tree/master/src/lib/sidenav\n         */\n        this.sidenavWidth = '257px';\n        /**\n         * containerAutosize?: boolean\n         *\n         * Sets \"autosize\" of the sidenav-container.\n         * Defaults to \"false\".\n         *\n         * See documentation for more info and potential performance risks.\n         *\n         * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n         */\n        this.containerAutosize = false;\n    }\n    Object.defineProperty(TdLayoutManageListComponent.prototype, \"disableClose\", {\n        /**\n         * Checks if `ESC` should close the sidenav\n         * Should only close it for `push` and `over` modes\n         */\n        get: /**\n         * Checks if `ESC` should close the sidenav\n         * Should only close it for `push` and `over` modes\n         * @return {?}\n         */\n        function () {\n            return this.mode === 'side';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdLayoutManageListComponent.prototype.toggle = /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this.sidenav.toggle(!this.sidenav.opened);\n    };\n    /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdLayoutManageListComponent.prototype.open = /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this.sidenav.open();\n    };\n    /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdLayoutManageListComponent.prototype.close = /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this.sidenav.close();\n    };\n    TdLayoutManageListComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'td-layout-manage-list',\n                    template: \"<mat-sidenav-container fullscreen [autosize]=\\\"containerAutosize\\\" class=\\\"td-layout-manage-list\\\">\\n  <mat-sidenav #sidenav\\n              position=\\\"start\\\"\\n              [mode]=\\\"mode\\\"\\n              [opened]=\\\"opened\\\"\\n              [disableClose]=\\\"disableClose\\\"\\n              [style.max-width]=\\\"sidenavWidth\\\"\\n              [style.min-width]=\\\"sidenavWidth\\\">\\n    <ng-content select=\\\"mat-toolbar[td-sidenav-content]\\\"></ng-content>\\n    <div class=\\\"td-layout-manage-list-sidenav\\\" cdkScrollable>\\n      <ng-content select=\\\"[td-sidenav-content]\\\"></ng-content>\\n    </div>\\n  </mat-sidenav>\\n  <div class=\\\"td-layout-manage-list-main\\\">\\n    <ng-content select=\\\"mat-toolbar\\\"></ng-content>\\n    <div class=\\\"td-layout-manage-list-content\\\" cdkScrollable>\\n      <ng-content></ng-content>\\n    </div>\\n    <ng-content select=\\\"td-layout-footer-inner\\\"></ng-content>\\n  </div>\\n</mat-sidenav-container>\\n\",\n                    styles: [\":host{display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;width:100%;min-height:100%;height:100%;overflow:hidden}:host mat-sidenav-container.td-layout-manage-list{-webkit-box-flex:1;-ms-flex:1;flex:1}:host mat-sidenav-container.td-layout-manage-list>.mat-drawer>.mat-drawer-inner-container.mat-drawer-closed,:host mat-sidenav-container.td-layout-manage-list>.mat-drawer>.mat-drawer-inner-container.mat-drawer-closing,:host mat-sidenav-container.td-layout-manage-list>.mat-drawer>.mat-drawer-inner-container.mat-drawer-opened,:host mat-sidenav-container.td-layout-manage-list>.mat-drawer>.mat-drawer-inner-container.mat-drawer-opening{-webkit-box-shadow:0 1px 3px 0 rgba(0,0,0,.2);box-shadow:0 1px 3px 0 rgba(0,0,0,.2)}:host .td-layout-manage-list-sidenav{text-align:start;-webkit-box-flex:1;-ms-flex:1;flex:1;display:block;position:relative;overflow:auto;-webkit-overflow-scrolling:touch}:host .td-layout-manage-list-main{margin:0;width:100%;min-height:100%;height:100%;position:relative;overflow:auto;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex}:host .td-layout-manage-list-main .td-layout-manage-list-content{display:block;position:relative;overflow:auto;-webkit-overflow-scrolling:touch;-webkit-box-flex:1;-ms-flex:1;flex:1}:host ::ng-deep mat-sidenav-container.td-layout-manage-list>.mat-drawer-content{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}:host ::ng-deep mat-sidenav-container.td-layout-manage-list>.mat-drawer>.mat-drawer-inner-container{-webkit-box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}:host ::ng-deep mat-nav-list a[mat-list-item] .mat-list-item-content{font-size:14px}:host ::ng-deep .mat-toolbar{font-weight:400}\"]\n                }] }\n    ];\n    TdLayoutManageListComponent.propDecorators = {\n        sidenav: [{ type: ViewChild, args: [MatSidenav,] }],\n        mode: [{ type: Input, args: ['mode',] }],\n        opened: [{ type: Input, args: ['opened',] }],\n        sidenavWidth: [{ type: Input, args: ['sidenavWidth',] }],\n        containerAutosize: [{ type: Input, args: ['containerAutosize',] }]\n    };\n    return TdLayoutManageListComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdLayoutManageListToggleDirective = /** @class */ (function (_super) {\n    __extends(TdLayoutManageListToggleDirective, _super);\n    function TdLayoutManageListToggleDirective(layout, renderer, elementRef) {\n        return _super.call(this, layout, renderer, elementRef) || this;\n    }\n    Object.defineProperty(TdLayoutManageListToggleDirective.prototype, \"tdLayoutManageListToggle\", {\n        set: /**\n         * @param {?} tdLayoutManageListToggle\n         * @return {?}\n         */\n        function (tdLayoutManageListToggle) {\n            this.disabled = !((/** @type {?} */ (tdLayoutManageListToggle)) === '' || tdLayoutManageListToggle);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdLayoutManageListToggleDirective.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        this._layout.toggle();\n    };\n    TdLayoutManageListToggleDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[tdLayoutManageListToggle]',\n                },] }\n    ];\n    /** @nocollapse */\n    TdLayoutManageListToggleDirective.ctorParameters = function () { return [\n        { type: TdLayoutManageListComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return TdLayoutManageListComponent; }),] }] },\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    TdLayoutManageListToggleDirective.propDecorators = {\n        tdLayoutManageListToggle: [{ type: Input, args: ['tdLayoutManageListToggle',] }]\n    };\n    return TdLayoutManageListToggleDirective;\n}(LayoutToggle));\nvar TdLayoutManageListCloseDirective = /** @class */ (function (_super) {\n    __extends(TdLayoutManageListCloseDirective, _super);\n    function TdLayoutManageListCloseDirective(layout, renderer, elementRef) {\n        return _super.call(this, layout, renderer, elementRef) || this;\n    }\n    Object.defineProperty(TdLayoutManageListCloseDirective.prototype, \"tdLayoutManageListClose\", {\n        set: /**\n         * @param {?} tdLayoutManageListClose\n         * @return {?}\n         */\n        function (tdLayoutManageListClose) {\n            this.disabled = !((/** @type {?} */ (tdLayoutManageListClose)) === '' || tdLayoutManageListClose);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdLayoutManageListCloseDirective.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        this._layout.close();\n    };\n    TdLayoutManageListCloseDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[tdLayoutManageListClose]',\n                },] }\n    ];\n    /** @nocollapse */\n    TdLayoutManageListCloseDirective.ctorParameters = function () { return [\n        { type: TdLayoutManageListComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return TdLayoutManageListComponent; }),] }] },\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    TdLayoutManageListCloseDirective.propDecorators = {\n        tdLayoutManageListClose: [{ type: Input, args: ['tdLayoutManageListClose',] }]\n    };\n    return TdLayoutManageListCloseDirective;\n}(LayoutToggle));\nvar TdLayoutManageListOpenDirective = /** @class */ (function (_super) {\n    __extends(TdLayoutManageListOpenDirective, _super);\n    function TdLayoutManageListOpenDirective(layout, renderer, elementRef) {\n        return _super.call(this, layout, renderer, elementRef) || this;\n    }\n    Object.defineProperty(TdLayoutManageListOpenDirective.prototype, \"tdLayoutManageListOpen\", {\n        set: /**\n         * @param {?} tdLayoutManageListOpen\n         * @return {?}\n         */\n        function (tdLayoutManageListOpen) {\n            this.disabled = !((/** @type {?} */ (tdLayoutManageListOpen)) === '' || tdLayoutManageListOpen);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdLayoutManageListOpenDirective.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        this._layout.open();\n    };\n    TdLayoutManageListOpenDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[tdLayoutManageListOpen]',\n                },] }\n    ];\n    /** @nocollapse */\n    TdLayoutManageListOpenDirective.ctorParameters = function () { return [\n        { type: TdLayoutManageListComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return TdLayoutManageListComponent; }),] }] },\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    TdLayoutManageListOpenDirective.propDecorators = {\n        tdLayoutManageListOpen: [{ type: Input, args: ['tdLayoutManageListOpen',] }]\n    };\n    return TdLayoutManageListOpenDirective;\n}(LayoutToggle));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdLayoutFooterComponent = /** @class */ (function () {\n    function TdLayoutFooterComponent(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n    }\n    Object.defineProperty(TdLayoutFooterComponent.prototype, \"color\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._color;\n        },\n        /**\n         * color?: string\n         *\n         * Optional color option: primary | accent | warn.\n         */\n        set: /**\n         * color?: string\n         *\n         * Optional color option: primary | accent | warn.\n         * @param {?} color\n         * @return {?}\n         */\n        function (color) {\n            if (color) {\n                this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n                this._color = color;\n                this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TdLayoutFooterComponent.decorators = [\n        { type: Component, args: [{\n                    /* tslint:disable-next-line */\n                    selector: 'td-layout-footer,td-layout-footer-inner',\n                    template: \"<ng-content></ng-content>\\n\",\n                    styles: [\":host{display:block;padding:10px 16px}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    TdLayoutFooterComponent.ctorParameters = function () { return [\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    TdLayoutFooterComponent.propDecorators = {\n        color: [{ type: Input, args: ['color',] }]\n    };\n    return TdLayoutFooterComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TdNavigationDrawerMenuDirective = /** @class */ (function () {\n    function TdNavigationDrawerMenuDirective() {\n    }\n    TdNavigationDrawerMenuDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[td-navigation-drawer-menu]',\n                },] }\n    ];\n    return TdNavigationDrawerMenuDirective;\n}());\nvar TdNavigationDrawerToolbarDirective = /** @class */ (function () {\n    function TdNavigationDrawerToolbarDirective() {\n    }\n    TdNavigationDrawerToolbarDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[td-navigation-drawer-toolbar]',\n                },] }\n    ];\n    return TdNavigationDrawerToolbarDirective;\n}());\nvar TdNavigationDrawerComponent = /** @class */ (function () {\n    function TdNavigationDrawerComponent(_layout, _router, _sanitize) {\n        this._layout = _layout;\n        this._router = _router;\n        this._sanitize = _sanitize;\n        this._menuToggled = false;\n    }\n    Object.defineProperty(TdNavigationDrawerComponent.prototype, \"menuToggled\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._menuToggled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdNavigationDrawerComponent.prototype, \"isMenuAvailable\", {\n        /**\n         * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n         */\n        get: /**\n         * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n         * @return {?}\n         */\n        function () {\n            return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdNavigationDrawerComponent.prototype, \"isCustomToolbar\", {\n        /**\n         * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n         */\n        get: /**\n         * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n         * @return {?}\n         */\n        function () {\n            return this._toolbar ? this._toolbar.length > 0 : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdNavigationDrawerComponent.prototype, \"isBackgroundAvailable\", {\n        /**\n         * Checks if there is a background image for the toolbar.\n         */\n        get: /**\n         * Checks if there is a background image for the toolbar.\n         * @return {?}\n         */\n        function () {\n            return !!this._backgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdNavigationDrawerComponent.prototype, \"backgroundUrl\", {\n        /**\n         * backgroundUrl?: SafeResourceUrl\n         *\n         * image to be displayed as the background of the toolbar.\n         * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n         */\n        set: /**\n         * backgroundUrl?: SafeResourceUrl\n         *\n         * image to be displayed as the background of the toolbar.\n         * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n         * @param {?} backgroundUrl\n         * @return {?}\n         */\n        function (backgroundUrl) {\n            if (backgroundUrl) {\n                /** @type {?} */\n                var sanitizedUrl = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n                this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdNavigationDrawerComponent.prototype, \"backgroundImage\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._backgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TdNavigationDrawerComponent.prototype, \"routerEnabled\", {\n        /**\n         * Checks if router was injected.\n         */\n        get: /**\n         * Checks if router was injected.\n         * @return {?}\n         */\n        function () {\n            return !!this._router && !!this.navigationRoute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TdNavigationDrawerComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._closeSubscription = this._layout.sidenav.openedChange.subscribe(function (opened) {\n            if (!opened) {\n                _this._menuToggled = false;\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TdNavigationDrawerComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._closeSubscription) {\n            this._closeSubscription.unsubscribe();\n            this._closeSubscription = undefined;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TdNavigationDrawerComponent.prototype.toggleMenu = /**\n     * @return {?}\n     */\n    function () {\n        if (this.isMenuAvailable) {\n            this._menuToggled = !this._menuToggled;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TdNavigationDrawerComponent.prototype.handleNavigationClick = /**\n     * @return {?}\n     */\n    function () {\n        if (this.routerEnabled) {\n            this._router.navigateByUrl(this.navigationRoute);\n            this.close();\n        }\n    };\n    /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdNavigationDrawerComponent.prototype.toggle = /**\n     * Proxy toggle method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this._layout.toggle();\n    };\n    /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdNavigationDrawerComponent.prototype.open = /**\n     * Proxy open method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this._layout.open();\n    };\n    /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     */\n    /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    TdNavigationDrawerComponent.prototype.close = /**\n     * Proxy close method to access sidenav from outside (from td-layout template).\n     * @return {?}\n     */\n    function () {\n        return this._layout.close();\n    };\n    TdNavigationDrawerComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'td-navigation-drawer',\n                    template: \"<mat-toolbar [color]=\\\"color\\\"\\n             [style.background-image]=\\\"backgroundImage\\\"\\n             [class.td-toolbar-background]=\\\"!!isBackgroundAvailable\\\"\\n             class=\\\"td-nagivation-drawer-toolbar\\\">\\n  <ng-content select=\\\"[td-navigation-drawer-toolbar]\\\"></ng-content>\\n  <ng-container *ngIf=\\\"!isCustomToolbar\\\">\\n    <div *ngIf=\\\"icon || logo || sidenavTitle || avatar\\\"\\n          class=\\\"td-navigation-drawer-toolbar-content\\\"\\n          [class.cursor-pointer]=\\\"routerEnabled\\\"\\n          (click)=\\\"handleNavigationClick()\\\">\\n      <mat-icon *ngIf=\\\"icon\\\">{{icon}}</mat-icon>\\n      <mat-icon *ngIf=\\\"logo && !icon\\\" class=\\\"mat-icon-logo\\\" [svgIcon]=\\\"logo\\\"></mat-icon>\\n      <img *ngIf=\\\"avatar && !logo && !icon\\\" class=\\\"td-nagivation-drawer-toolbar-avatar\\\" [attr.src]=\\\"avatar\\\" />\\n      <span *ngIf=\\\"sidenavTitle\\\" class=\\\"td-navigation-drawer-title\\\">{{sidenavTitle}}</span>\\n    </div>\\n    <div class=\\\"td-navigation-drawer-name\\\" *ngIf=\\\"email && name\\\">{{name}}</div>\\n    <div class=\\\"td-navigation-drawer-menu-toggle\\\"\\n        href\\n        *ngIf=\\\"email || name\\\"\\n        (click)=\\\"toggleMenu()\\\">\\n      <span class=\\\"td-navigation-drawer-label\\\">{{email || name}}</span>\\n      <button mat-icon-button class=\\\"td-navigation-drawer-menu-button\\\" *ngIf=\\\"isMenuAvailable\\\">\\n        <mat-icon *ngIf=\\\"!menuToggled\\\">arrow_drop_down</mat-icon>\\n        <mat-icon *ngIf=\\\"menuToggled\\\">arrow_drop_up</mat-icon>\\n      </button>\\n    </div>\\n  </ng-container>\\n</mat-toolbar>\\n<div class=\\\"td-navigation-drawer-content\\\" [@tdCollapse]=\\\"menuToggled\\\">\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"td-navigation-drawer-menu-content\\\" [@tdCollapse]=\\\"!menuToggled\\\">\\n  <ng-content select=\\\"[td-navigation-drawer-menu]\\\"></ng-content>\\n</div>\\n\",\n                    animations: [tdCollapseAnimation],\n                    styles: [\":host{width:100%}:host .td-navigation-drawer-content.ng-animating,:host .td-navigation-drawer-menu-content.ng-animating{overflow:hidden}:host mat-toolbar{padding:16px}:host mat-toolbar.td-toolbar-background{background-repeat:no-repeat;background-size:cover}:host mat-toolbar.td-nagivation-drawer-toolbar{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:auto!important;display:block!important}:host mat-toolbar .td-navigation-drawer-toolbar-content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}:host mat-toolbar .td-navigation-drawer-toolbar-content .td-nagivation-drawer-toolbar-avatar{border-radius:50%;height:60px;width:60px;margin:0 12px 12px 0}:host mat-toolbar .td-navigation-drawer-menu-toggle{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex}:host mat-toolbar .td-navigation-drawer-menu-toggle .td-navigation-drawer-label{-webkit-box-flex:1;-ms-flex:1;flex:1}:host mat-toolbar .td-navigation-drawer-menu-toggle .td-navigation-drawer-menu-button{height:24px;line-height:24px;width:24px}:host>div{overflow:hidden}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    TdNavigationDrawerComponent.ctorParameters = function () { return [\n        { type: TdLayoutComponent, decorators: [{ type: Inject, args: [forwardRef(function () { return TdLayoutComponent; }),] }] },\n        { type: Router, decorators: [{ type: Optional }] },\n        { type: DomSanitizer }\n    ]; };\n    TdNavigationDrawerComponent.propDecorators = {\n        _drawerMenu: [{ type: ContentChildren, args: [TdNavigationDrawerMenuDirective,] }],\n        _toolbar: [{ type: ContentChildren, args: [TdNavigationDrawerToolbarDirective,] }],\n        sidenavTitle: [{ type: Input, args: ['sidenavTitle',] }],\n        icon: [{ type: Input, args: ['icon',] }],\n        logo: [{ type: Input, args: ['logo',] }],\n        avatar: [{ type: Input, args: ['avatar',] }],\n        color: [{ type: Input, args: ['color',] }],\n        navigationRoute: [{ type: Input, args: ['navigationRoute',] }],\n        backgroundUrl: [{ type: Input, args: ['backgroundUrl',] }],\n        name: [{ type: Input, args: ['name',] }],\n        email: [{ type: Input, args: ['email',] }]\n    };\n    return TdNavigationDrawerComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar TD_LAYOUTS = [\n    TdLayoutComponent,\n    TdLayoutToggleDirective,\n    TdLayoutCloseDirective,\n    TdLayoutOpenDirective,\n    TdLayoutNavComponent,\n    TdLayoutNavListComponent,\n    TdLayoutNavListToggleDirective,\n    TdLayoutNavListCloseDirective,\n    TdLayoutNavListOpenDirective,\n    TdLayoutCardOverComponent,\n    TdLayoutManageListComponent,\n    TdLayoutManageListToggleDirective,\n    TdLayoutManageListCloseDirective,\n    TdLayoutManageListOpenDirective,\n    TdLayoutFooterComponent,\n    TdNavigationDrawerComponent,\n    TdNavigationDrawerMenuDirective,\n    TdNavigationDrawerToolbarDirective,\n];\nvar CovalentLayoutModule = /** @class */ (function () {\n    function CovalentLayoutModule() {\n    }\n    CovalentLayoutModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        ScrollDispatchModule,\n                        MatSidenavModule,\n                        MatToolbarModule,\n                        MatButtonModule,\n                        MatIconModule,\n                        MatCardModule,\n                        MatDividerModule,\n                    ],\n                    declarations: [\n                        TD_LAYOUTS,\n                    ],\n                    exports: [\n                        TD_LAYOUTS,\n                    ],\n                },] }\n    ];\n    return CovalentLayoutModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\nexport { CovalentLayoutModule, TdLayoutComponent, TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective, LayoutToggleBase, _TdLayoutToggleMixinBase, LayoutToggle, TdLayoutCardOverComponent, TdLayoutFooterComponent, TdLayoutManageListComponent, TdLayoutManageListToggleDirective, TdLayoutManageListCloseDirective, TdLayoutManageListOpenDirective, TdLayoutNavComponent, TdLayoutNavListComponent, TdLayoutNavListToggleDirective, TdLayoutNavListCloseDirective, TdLayoutNavListOpenDirective, TdNavigationDrawerMenuDirective, TdNavigationDrawerToolbarDirective, TdNavigationDrawerComponent };\n\n//# sourceMappingURL=covalent-core-layout.js.map","module.exports = \"\\r\\n\\t\\t  <td-layout [mode]=\\\"(media.registerQuery('gt-sm') | async) ? 'side' : 'push'\\\" [sidenavWidth]=\\\"(media.registerQuery('gt-xs') | async) ? '240px' : '100%'\\\">\\r\\n\\t\\t\\t\\t<td-navigation-drawer flex [sidenavTitle]=\\\"name\\\" logo=\\\"assets:covalent\\\">\\r\\n\\t\\t\\t\\t  <mat-nav-list [tdLayoutClose]=\\\"!media.query('gt-sm')\\\">\\r\\n\\t\\t\\t\\t\\t<a *ngFor=\\\"let item of routes\\\" mat-list-item><mat-icon matListIcon>{{item.icon}}</mat-icon>{{item.title}}</a>\\r\\n\\t\\t\\t\\t  </mat-nav-list>\\r\\n\\t\\t\\t\\t  <div td-navigation-drawer-menu>\\r\\n\\t\\t\\t\\t\\t<mat-nav-list>\\r\\n\\t\\t\\t\\t\\t  <a *ngFor=\\\"let item of usermenu\\\" mat-list-item><mat-icon matListIcon>{{item.icon}}</mat-icon>{{item.title}}</a>\\r\\n\\t\\t\\t\\t\\t</mat-nav-list>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t</td-navigation-drawer>\\r\\n\\t\\t\\t\\t<td-layout-nav [toolbarTitle]=\\\"(media.registerQuery('gt-xs') | async) ? 'Dashboard' : ''\\\" logo=\\\"assets:covalent\\\" navigationRoute=\\\"/\\\">\\r\\n\\t\\t\\t\\t  <button mat-icon-button td-menu-button tdLayoutToggle>\\r\\n\\t\\t\\t\\t\\t<mat-icon>menu</mat-icon>\\r\\n\\t\\t\\t\\t  </button>\\r\\n\\t\\t\\t\\t  <!-- <div td-toolbar-content layout=\\\"row\\\" layout-align=\\\"start center\\\" flex>\\r\\n\\t\\t\\t\\t\\t<span flex *ngIf=\\\"!searchBox.searchVisible\\\"></span>\\r\\n\\t\\t\\t\\t\\t<td-search-box hide-xs flex #searchBox [ngClass]=\\\"{'push-left push-right mat-whiteframe-z1 bgc-white tc-black': searchBox.searchVisible }\\\"  placeholder=\\\"search\\\"></td-search-box>\\r\\n\\t\\t\\t\\t\\t<span>\\r\\n\\t\\t\\t\\t\\t  <button mat-icon-button matTooltip=\\\"Alerts\\\" [matMenuTriggerFor]=\\\"notificationsMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t<td-notification-count color=\\\"accent\\\" [notifications]=\\\"4\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <mat-icon>notifications</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t</td-notification-count>\\r\\n\\t\\t\\t\\t\\t  </button>\\r\\n\\t\\t\\t\\t\\t  <mat-menu #notificationsMenu=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t<td-menu>\\r\\n\\t\\t\\t\\t\\t\\t  <div td-menu-header class=\\\"mat-subhead\\\">Notifications</div>\\r\\n\\t\\t\\t\\t\\t\\t  <mat-nav-list dense>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-template let-last=\\\"last\\\" ngFor [ngForOf]=\\\"[0,1,2]\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <a mat-list-item>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon matListAvatar>today</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h4 mat-line><span class=\\\"text-wrap\\\">Candy sales are on the rise!</span></h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p mat-line>22 minutes ago</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </a>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-divider *ngIf=\\\"!last\\\"></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t  </mat-nav-list>\\r\\n\\t\\t\\t\\t\\t\\t  <button mat-button color=\\\"accent\\\" td-menu-footer>\\r\\n\\t\\t\\t\\t\\t\\t\\tSee All Notifications\\r\\n\\t\\t\\t\\t\\t\\t  </button>\\r\\n\\t\\t\\t\\t\\t\\t</td-menu>\\r\\n\\t\\t\\t\\t\\t  </mat-menu>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t<span>\\r\\n\\t\\t\\t\\t\\t  <button mat-icon-button matTooltip=\\\"More\\\" [mat-menu-trigger-for]=\\\"more\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t  </button>\\r\\n\\t\\t\\t\\t\\t  <mat-menu xPosition=\\\"before\\\" #more=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button mat-menu-item *ngIf=\\\"activeTheme === 'theme-dark'\\\" (click)=\\\"theme('theme-light')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>brightness_high</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span>Light Mode</span>\\r\\n\\t\\t\\t\\t\\t\\t  </button>\\r\\n\\t\\t\\t\\t\\t\\t  <button mat-menu-item *ngIf=\\\"activeTheme != 'theme-dark'\\\" (click)=\\\"theme('theme-dark')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>brightness_low</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span>Dark Mode</span>\\r\\n\\t\\t\\t\\t\\t\\t  </button>\\r\\n\\t\\t\\t\\t\\t  </mat-menu>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t  </div> -->\\r\\n\\t\\t\\t\\t  <td-layout-manage-list #manageList\\r\\n\\t\\t\\t\\t\\t\\t  [opened]=\\\"media.registerQuery('gt-sm') | async\\\"\\r\\n\\t\\t\\t\\t\\t\\t  [mode]=\\\"(media.registerQuery('gt-sm') | async) ? 'side' :  'over'\\\"\\r\\n\\t\\t\\t\\t\\t\\t  [sidenavWidth]=\\\"!miniNav ? '257px' : '64px'\\\">\\r\\n\\t\\t\\t\\t\\t<div td-sidenav-content layout=\\\"column\\\" layout-fill>\\r\\n\\t\\t\\t\\t\\t  <mat-toolbar>\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"push-left-xs\\\" [matTooltip]=\\\"!miniNav ? '' : 'Dashboards'\\\" matTooltipPosition=\\\"after\\\">dashboard</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"!miniNav\\\" class=\\\"push-left-sm\\\">Dashboards</span>\\r\\n\\t\\t\\t\\t\\t  </mat-toolbar>\\r\\n\\t\\t\\t\\t\\t  <mat-nav-list flex [tdLayoutManageListClose]=\\\"!media.query('gt-sm')\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-template let-item let-index=\\\"index\\\" let-last=\\\"last\\\" ngFor [ngForOf]=\\\"[0, 1]\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <a mat-list-item>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon matListIcon [matTooltip]=\\\"!miniNav ? '' : 'Dashboard ' + index\\\" matTooltipPosition=\\\"after\\\">dashboard</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"!miniNav\\\">Dashboard {{index}}</span>\\r\\n\\t\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t  </a>\\r\\n\\t\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t<a mat-list-item  (click)=\\\"compagnielist()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon matListIcon [matTooltip]=\\\"!miniNav ? '' : 'Dashboard '\\\" matTooltipPosition=\\\"after\\\">dashboard</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"!miniNav\\\">List des compagnies</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t\\t  </a>\\r\\n\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t<a mat-list-item>\\r\\n\\t\\t\\t\\t\\t\\t  <mat-icon matListIcon [matTooltip]=\\\"!miniNav ? '' : 'Add Dashboard'\\\" matTooltipPosition=\\\"after\\\">add</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t  <span *ngIf=\\\"!miniNav\\\">Add Dashboard</span>\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t  </mat-nav-list>\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"td-layout-footer pad-sm\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" mat-icon-button (click)=\\\"toggleMiniNav()\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <mat-icon [@tdRotate]=\\\"miniNav\\\">keyboard_arrow_left</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"!miniNav\\\" class=\\\"mat-caption\\\">&copy; 2017 Your Company, Inc.</span>\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<mat-sidenav-container flex>\\r\\n\\t\\t\\t\\t\\t  <mat-sidenav #sidenav align=\\\"end\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div layout=\\\"column\\\" layout-fill>\\r\\n\\t\\t\\t\\t\\t\\t  <mat-toolbar>Settings</mat-toolbar>\\r\\n\\t\\t\\t\\t\\t\\t  <div flex class=\\\"mat-content\\\">\\r\\n\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t  </mat-sidenav>\\r\\n\\t\\t\\t\\t\\t  <td-layout-nav color=\\\"none\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div td-toolbar-content flex layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button mat-icon-button tdLayoutManageListToggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>menu</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t  </button>\\r\\n\\t\\t\\t\\t\\t\\t  <span hide-xs>Dashboard 1</span>\\r\\n\\t\\t\\t\\t\\t\\t  <span flex></span>\\r\\n\\t\\t\\t\\t\\t\\t  <span [style.width.px]=\\\"100\\\" layout=\\\"row\\\" class=\\\"push-left-sm push-right mat-body-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-form-field floatPlaceholder=\\\"never\\\" flex>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input matInput  readonly [(ngModel)]=\\\"dateFrom\\\" [matDatepicker]=\\\"pickerFrom\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix matTooltip=\\\"Start date\\\" [for]=\\\"pickerFrom\\\"></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-datepicker #pickerFrom [startAt]=\\\"dateFrom\\\"></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t  <span hide-xs class=\\\"mat-body-2 push-right\\\"> to </span>\\r\\n\\t\\t\\t\\t\\t\\t  <span [style.width.px]=\\\"100\\\" layout=\\\"row\\\" class=\\\"mat-body-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-form-field floatPlaceholder=\\\"never\\\" flex>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input matInput\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t\\t   readonly [(ngModel)]=\\\"dateTo\\\" [matDatepicker]=\\\"pickerTo\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix matTooltip=\\\"End date\\\" [for]=\\\"pickerTo\\\"></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-datepicker #pickerTo [startAt]=\\\"dateTo\\\"></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t  <button matTooltip=\\\"Dashboard Settings\\\" matTooltipPosition=\\\"before\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"sidenav.open()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>settings</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t  </button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div flex layout-gt-sm=\\\"row\\\" tdMediaToggle=\\\"gt-xs\\\" layout-wrap [mediaClasses]=\\\"['push-sm']\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <span flex>Card title</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Card settings\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[mat-menu-trigger-for]=\\\"settings2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu xPosition=\\\"before\\\" #settings2=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Settings </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Remove </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"pad\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [style.height.px]=\\\"250\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <ngx-charts-bar-vertical-2d\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[scheme]=\\\"{ domain: [ '#4DD0E1', '#BA68C8', '#FF7043' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[results]=\\\"multi\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[barPadding]=\\\"18\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[groupPadding]=\\\"28\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[gradient]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[xAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[showXAxisLabel]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[showYAxisLabel]=\\\"false\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </ngx-charts-bar-vertical-2d>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t  <div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span flex>Card title</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Card settings\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[mat-menu-trigger-for]=\\\"settings3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu xPosition=\\\"before\\\" #settings3=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Settings </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Remove </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"pad-top pad-bottom\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"overflow-hidden\\\" [style.height.px]=\\\"250\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div [style.height.px]=\\\"270\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-area-chart-stacked\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"{ domain: [ '#4DD0E1', '#BA68C8', '#FF7043' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [results]=\\\"times\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [gradient]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [xAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [legend]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [showXAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [showYAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [xAxisLabel]=\\\"xAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [yAxisLabel]=\\\"yAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [xAxisTickFormatting]=\\\"axisDate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-area-chart-stacked>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-card>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  <div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <span flex>Card title</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Card settings\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[mat-menu-trigger-for]=\\\"settings1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu xPosition=\\\"before\\\" #settings1=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item (click)=\\\"openTemplate()\\\"> Settings </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Remove </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div [style.height.px]=\\\"280\\\" class=\\\"push-top-sm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-line-chart\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"{ domain: [ '#4DD0E1', '#BA68C8', '#FF7043' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [results]=\\\"times\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [gradient]=\\\"gradient\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [autoScale]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [xAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [legend]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [showXAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [showYAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [xAxisLabel]=\\\"xAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [yAxisLabel]=\\\"yAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [xAxisTickFormatting]=\\\"axisDate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-line-chart>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t  <div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span flex>Card title</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Card settings\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[mat-menu-trigger-for]=\\\"settings4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu xPosition=\\\"before\\\" #settings4=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Settings </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Remove </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <td-data-table\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[data]=\\\"data\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[style.height.px]=\\\"290\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  </td-data-table>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-card>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t  <!-- <div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span flex>Card title</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Card settings\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[mat-menu-trigger-for]=\\\"settings5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu xPosition=\\\"before\\\" #settings5=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-menu-item> Settings </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-menu-item> Remove </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </mat-card-title> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t  <!-- <mat-divider></mat-divider> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t  <!-- <mat-nav-list>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a mat-list-item>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon matListAvatar color=\\\"primary\\\">mood</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <h3 mat-line>Candy</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <p mat-line>exceeding goal!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div flex=\\\"100\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-linear-gauge\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"{ domain: [ '#4DD0E1' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [value]=\\\"90\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [previousValue]=\\\"80\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [min]=\\\"0\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [max]=\\\"100\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [units]=\\\"'alerts'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-linear-gauge>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-divider mat-inset></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a mat-list-item>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon matListAvatar color=\\\"accent\\\">sentiment_satisfied</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <h3 mat-line>Ice Cream</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <p mat-line>goal almost achieved!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div flex=\\\"100\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-linear-gauge\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"{ domain: [ '#BA68C8' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [value]=\\\"60\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [previousValue]=\\\"70\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [min]=\\\"0\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [max]=\\\"100\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [units]=\\\"'alerts'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-linear-gauge>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-divider mat-inset></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a mat-list-item>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon matListAvatar color=\\\"warn\\\">sentiment_very_dissatisfied</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <h3 mat-line>Pastry</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <p mat-line>falling short of goal!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div flex=\\\"100\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-linear-gauge\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"{ domain: [ '#FF7043' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [value]=\\\"40\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [previousValue]=\\\"60\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [min]=\\\"0\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [max]=\\\"100\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [units]=\\\"'alerts'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-linear-gauge>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </mat-nav-list> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- </mat-card>\\r\\n\\t\\t\\t\\t\\t\\t  </div> -->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t  </td-layout-nav>\\r\\n\\t\\t\\t\\t\\t</mat-sidenav-container>\\r\\n\\t\\t\\t\\t  </td-layout-manage-list>\\r\\n\\t\\t\\t\\t  <td-layout-footer>\\r\\n\\t\\t\\t\\t\\t<div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t  <span class=\\\"mat-caption\\\">Made by Gracetechnologie</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t  </td-layout-footer>\\r\\n\\t\\t\\t\\t</td-layout-nav>\\r\\n\\t\\t\\t  </td-layout>\\r\\n\\t\\t\\t  \\r\\n\\t\\t\\t  <ng-template #dialogContent let-dialogRef=\\\"dialogRef\\\">\\r\\n\\t\\t\\t\\t<div layout=\\\"column\\\" layout-fill>\\r\\n\\t\\t\\t\\t  <h2 mat-dialog-title>\\r\\n\\t\\t\\t\\t\\tCard Settings\\r\\n\\t\\t\\t\\t  </h2>\\r\\n\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t  <mat-dialog-content flex>\\r\\n\\t\\t\\t\\t\\t<form class=\\\"pad\\\">\\r\\n\\t\\t\\t\\t\\t  <div layout=\\\"row\\\" layout-margin>\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field flex>\\r\\n\\t\\t\\t\\t\\t\\t  <input matInput placeholder=\\\"Card order\\\" value=\\\"1\\\" type=\\\"number\\\">\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field flex>\\r\\n\\t\\t\\t\\t\\t\\t  <input matInput placeholder=\\\"Card width\\\" value=\\\"100\\\" type=\\\"number\\\">\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-dialog-content>\\r\\n\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t  <mat-dialog-actions align=\\\"end\\\">\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" mat-button class=\\\"text-upper\\\" (click)=\\\"dialogRef.close()\\\">Close</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" mat-button color=\\\"accent\\\" class=\\\"text-upper\\\" (click)=\\\"dialogRef.close()\\\">Save</button>\\r\\n\\t\\t\\t\\t  </mat-dialog-actions>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t  <!-- <div flex layout-gt-sm=\\\"row\\\" tdMediaToggle=\\\"gt-xs\\\">\\r\\n\\t\\t\\t\\t<div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t  <mat-card>\\r\\n\\t \\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div [style.height.px]=\\\"280\\\" class=\\\"push-top-sm\\\">\\r\\n\\t\\t\\t\\t\\t  <ngx-charts-line-chart\\r\\n\\t\\t\\t\\t\\t\\t[scheme]=\\\"{ domain: [ '#4DD0E1', '#BA68C8', '#FF7043' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t[results]=\\\"times\\\"\\r\\n\\t\\t\\t\\t\\t\\t[gradient]=\\\"gradient\\\"\\r\\n\\t\\t\\t\\t\\t\\t[autoScale]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t[xAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t[yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t[legend]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t[showXAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t[showYAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t[xAxisLabel]=\\\"xAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t[yAxisLabel]=\\\"yAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t[xAxisTickFormatting]=\\\"axisDate\\\">\\r\\n\\t\\t\\t\\t\\t  </ngx-charts-line-chart>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t  </mat-card>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t  <mat-card>\\r\\n\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"pad\\\">\\r\\n\\t\\t\\t\\t\\t  <div [style.height.px]=\\\"250\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ngx-charts-bar-vertical-2d\\r\\n\\t\\t\\t\\t\\t\\t  [scheme]=\\\"{ domain: [ '#4DD0E1', '#BA68C8', '#FF7043' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t  [results]=\\\"multi\\\"\\r\\n\\t\\t\\t\\t\\t\\t  [barPadding]=\\\"18\\\"\\r\\n\\t\\t\\t\\t\\t\\t  [groupPadding]=\\\"28\\\"\\r\\n\\t\\t\\t\\t\\t\\t  [gradient]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t  [xAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t  [yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t  [legend]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t  [showXAxisLabel]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t  [showYAxisLabel]=\\\"false\\\">\\r\\n\\t\\t\\t\\t\\t\\t</ngx-charts-bar-vertical-2d>\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t  </mat-card>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t  <mat-card>\\r\\n\\t \\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"pad-top pad-bottom\\\">\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"overflow-hidden\\\" [style.height.px]=\\\"250\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div [style.height.px]=\\\"270\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <ngx-charts-area-chart-stacked\\r\\n\\t\\t\\t\\t\\t\\t\\t[scheme]=\\\"{ domain: [ '#4DD0E1', '#BA68C8', '#FF7043' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[results]=\\\"times\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[gradient]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[xAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[showXAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[showYAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[xAxisLabel]=\\\"xAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[yAxisLabel]=\\\"yAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[xAxisTickFormatting]=\\\"axisDate\\\">\\r\\n\\t\\t\\t\\t\\t\\t  </ngx-charts-area-chart-stacked>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t  </mat-card>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t  <mat-card>\\r\\n  -->\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<!-- <td-data-table\\r\\n\\t\\t\\t\\t\\t  [data]=\\\"data\\\"\\r\\n\\t\\t\\t\\t\\t  [style.height.px]=\\\"290\\\">\\r\\n\\t\\t\\t\\t\\t</td-data-table> -->\\r\\n\\t\\t\\t\\t  <!-- </mat-card>\\r\\n\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<!-- <td-layout-nav color=\\\"none\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div td-toolbar-content flex layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <button mat-icon-button tdLayoutManageListToggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>menu</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t  </button>\\r\\n\\t\\t\\t\\t\\t\\t  <span hide-xs>Dashboard 1</span>\\r\\n\\t\\t\\t\\t\\t\\t  <span flex></span>\\r\\n\\t\\t\\t\\t\\t\\t  <span [style.width.px]=\\\"100\\\" layout=\\\"row\\\" class=\\\"push-left-sm push-right mat-body-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-form-field floatPlaceholder=\\\"never\\\" flex>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input matInput [max]=\\\"maxFromDate\\\" readonly [(ngModel)]=\\\"dateFrom\\\" [matDatepicker]=\\\"pickerFrom\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix matTooltip=\\\"Start date\\\" [for]=\\\"pickerFrom\\\"></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-datepicker #pickerFrom [startAt]=\\\"dateFrom\\\"></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t  <span hide-xs class=\\\"mat-body-2 push-right\\\"> to </span>\\r\\n\\t\\t\\t\\t\\t\\t  <span [style.width.px]=\\\"100\\\" layout=\\\"row\\\" class=\\\"mat-body-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-form-field floatPlaceholder=\\\"never\\\" flex>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input matInput [max]=\\\"maxToDate\\\" readonly [(ngModel)]=\\\"dateTo\\\" [matDatepicker]=\\\"pickerTo\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix matTooltip=\\\"End date\\\" [for]=\\\"pickerTo\\\"></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-datepicker #pickerTo [startAt]=\\\"dateTo\\\"></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t  <button matTooltip=\\\"Dashboard Settings\\\" matTooltipPosition=\\\"before\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"sidenav.open()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>settings</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t  </button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div flex layout-gt-sm=\\\"row\\\" tdMediaToggle=\\\"gt-xs\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span flex>Card title</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Card settings\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[mat-menu-trigger-for]=\\\"settings1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu xPosition=\\\"before\\\" #settings1=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item (click)=\\\"openTemplate()\\\"> Settings </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Remove </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <div [style.height.px]=\\\"280\\\" class=\\\"push-top-sm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-line-chart\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"{ domain: [ '#4DD0E1', '#BA68C8', '#FF7043' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [results]=\\\"times\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [gradient]=\\\"gradient\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [autoScale]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [xAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [legend]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [showXAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [showYAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [xAxisLabel]=\\\"xAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [yAxisLabel]=\\\"yAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [xAxisTickFormatting]=\\\"axisDate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-line-chart>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-card>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t  <div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span flex>Card title</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Card settings\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[mat-menu-trigger-for]=\\\"settings2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu xPosition=\\\"before\\\" #settings2=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Settings </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Remove </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"pad\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [style.height.px]=\\\"250\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <ngx-charts-bar-vertical-2d\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[scheme]=\\\"{ domain: [ '#4DD0E1', '#BA68C8', '#FF7043' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[results]=\\\"multi\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[barPadding]=\\\"18\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[groupPadding]=\\\"28\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[gradient]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[xAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[showXAxisLabel]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[showYAxisLabel]=\\\"false\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </ngx-charts-bar-vertical-2d>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-card>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t  <div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span flex>Card title</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Card settings\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[mat-menu-trigger-for]=\\\"settings3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu xPosition=\\\"before\\\" #settings3=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Settings </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Remove </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"pad-top pad-bottom\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"overflow-hidden\\\" [style.height.px]=\\\"250\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div [style.height.px]=\\\"270\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-area-chart-stacked\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"{ domain: [ '#4DD0E1', '#BA68C8', '#FF7043' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [results]=\\\"times\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [gradient]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [xAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [legend]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [showXAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [showYAxisLabel]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [xAxisLabel]=\\\"xAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [yAxisLabel]=\\\"yAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [xAxisTickFormatting]=\\\"axisDate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-area-chart-stacked>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-card>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t  <div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span flex>Card title</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Card settings\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[mat-menu-trigger-for]=\\\"settings4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu xPosition=\\\"before\\\" #settings4=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Settings </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <button mat-menu-item> Remove </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <td-data-table\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[data]=\\\"data\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[style.height.px]=\\\"290\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  </td-data-table>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-card>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t  <div flex-gt-sm=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div layout=\\\"row\\\" layout-align=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span flex>Card title</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Card settings\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[mat-menu-trigger-for]=\\\"settings5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu xPosition=\\\"before\\\" #settings5=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-menu-item> Settings </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-menu-item> Remove </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </mat-card-title>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-divider></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <mat-nav-list>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a mat-list-item>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon matListAvatar color=\\\"primary\\\">mood</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <h3 mat-line>Candy</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <p mat-line>exceeding goal!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div flex=\\\"100\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-linear-gauge\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"{ domain: [ '#4DD0E1' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [value]=\\\"90\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [previousValue]=\\\"80\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [min]=\\\"0\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [max]=\\\"100\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [units]=\\\"'alerts'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-linear-gauge>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-divider mat-inset></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a mat-list-item>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon matListAvatar color=\\\"accent\\\">sentiment_satisfied</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <h3 mat-line>Ice Cream</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <p mat-line>goal almost achieved!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div flex=\\\"100\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-linear-gauge\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"{ domain: [ '#BA68C8' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [value]=\\\"60\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [previousValue]=\\\"70\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [min]=\\\"0\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [max]=\\\"100\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [units]=\\\"'alerts'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-linear-gauge>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-divider mat-inset></mat-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a mat-list-item>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-icon matListAvatar color=\\\"warn\\\">sentiment_very_dissatisfied</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <h3 mat-line>Pastry</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <p mat-line>falling short of goal!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div flex=\\\"100\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-linear-gauge\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"{ domain: [ '#FF7043' ] }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [value]=\\\"40\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [previousValue]=\\\"60\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [min]=\\\"0\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [max]=\\\"100\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [units]=\\\"'alerts'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-linear-gauge>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </mat-nav-list>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-card>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t  </td-layout-nav> -->\\r\\n\\t\\t\\t  <!-- </div> -->\\r\\n\\t\\t  <!-- <gridster [options]=\\\"options\\\">\\r\\n\\t\\t\\t\\t<gridster-item [item]=\\\"item\\\" *ngFor=\\\"let item of dashboard\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ngx-charts-pie-chart\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[view]=\\\"view\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[scheme]=\\\"colorScheme\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[results]=\\\"single\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"showLegend\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[explodeSlices]=\\\"explodeSlices\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[labels]=\\\"showLabels\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[doughnut]=\\\"doughnut\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[gradient]=\\\"gradient\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(select)=\\\"onSelect($event)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </ngx-charts-pie-chart>\\r\\n\\t\\t\\t\\t</gridster-item>\\r\\n\\t\\t\\t  </gridster> -->\\r\\n <!-- <div class=\\\"row\\\">\\r\\n\\t\\t\\t  <div class=\\\"col-xl-6\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row row-full-height\\\"> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- <div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-pie-chart\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[view]=\\\"view\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[scheme]=\\\"colorScheme\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[results]=\\\"single\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"showLegend\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[explodeSlices]=\\\"explodeSlices\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[labels]=\\\"showLabels\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[doughnut]=\\\"doughnut\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[gradient]=\\\"gradient\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(select)=\\\"onSelect($event)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </ngx-charts-pie-chart>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div> This is a visual representation of a pie chart</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-number-card\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[view]=\\\"view\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[scheme]=\\\"colorScheme\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[results]=\\\"single\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(select)=\\\"onSelect($event)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-number-card>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngx-charts-bar-vertical-2d\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[view]=\\\"view\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[scheme]=\\\"colorScheme\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[results]=\\\"multi\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[gradient]=\\\"gradient\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[xAxis]=\\\"showXAxis\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[yAxis]=\\\"showYAxis\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"showLegend\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[showXAxisLabel]=\\\"showXAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[showYAxisLabel]=\\\"showYAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[xAxisLabel]=\\\"xAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[yAxisLabel]=\\\"yAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[animations]=\\\"animations\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(select)=\\\"onSelect($event)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t </ngx-charts-bar-vertical-2d>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t   \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <ngx-charts-bar-vertical-2d\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[view]=\\\"view\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[scheme]=\\\"colorScheme\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[results]=\\\"multi\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[gradient]=\\\"gradient\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[xAxis]=\\\"showXAxis\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[yAxis]=\\\"showYAxis\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"showLegend\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[showXAxisLabel]=\\\"showXAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[showYAxisLabel]=\\\"showYAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[xAxisLabel]=\\\"xAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[yAxisLabel]=\\\"yAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[animations]=\\\"animations\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(select)=\\\"onSelect($event)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t </ngx-charts-bar-vertical-2d>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <div> This is a visual representation of a line chart</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  <div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <ngx-charts-pie-chart\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [view]=\\\"view\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"colorScheme\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [results]=\\\"single\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [legend]=\\\"showLegend\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [explodeSlices]=\\\"explodeSlices\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [labels]=\\\"showLabels\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [doughnut]=\\\"doughnut\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  [gradient]=\\\"gradient\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  (select)=\\\"onSelect($event)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ngx-charts-pie-chart>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <div> This is a visual representation of a area chart</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <div >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <ngx-charts-area-chart\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [view]=\\\"view\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [scheme]=\\\"colorScheme\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [results]=\\\"multi\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [gradient]=\\\"gradient\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [xAxis]=\\\"showXAxis\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [yAxis]=\\\"showYAxis\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [legend]=\\\"showLegend\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [showXAxisLabel]=\\\"showXAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [showYAxisLabel]=\\\"showYAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [xAxisLabel]=\\\"xAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [yAxisLabel]=\\\"yAxisLabel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  [autoScale]=\\\"autoScale\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  (select)=\\\"onSelect($event)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </ngx-charts-area-chart>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <div> This is a visual representation of a pie chart</div> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t  <!-- <div *ngFor=\\\"let companie of companies\\\"class=\\\"col-sm-12 col-md-12 col-lg-4\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<kt-portlet [class]=\\\"'kt-portlet'\\\">\\r\\n\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <kt-portlet-header>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <ng-container ktPortletTools>\\r\\n\\t\\t\\t\\t\\t<p> {{companie.company_title}}</p>\\r\\n\\t\\t\\t\\t  <kt-context-menu2></kt-context-menu2>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  </ng-container>\\r\\n\\t\\t\\t\\t  </kt-portlet-header>\\r\\n\\t\\t\\t\\t  <kt-portlet-body (click)=\\\"modules(companie.id)\\\">\\r\\n\\t\\t\\t\\t  <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n\\t\\t\\t\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t\\t\\t<a class=\\\"kt-widget12__desc\\\" routerLink=\\\"/demo2/kt-mesmodules\\\">{{companie.short_name}}<span class=\\\"sr-only\\\">(current)</span></a>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t  </ul>\\r\\n\\t\\t\\t\\t  <kt-compagnie></kt-compagnie>\\r\\n\\t\\t\\t\\t  </kt-portlet-body>\\r\\n\\t\\t\\t\\t   -->\\r\\n\\t\\t\\t\\t  <!-- <div class=\\\"example-button-row\\\" style=\\\"text-align: center\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"kt-section\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"closeResult\\\" class=\\\"kt-section__sub\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <pre>{{closeResult}}</pre>\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"kt-section__content\\\">\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"modal-title\\\">Supprimer une compagnie</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t  <div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>Voulez-vous vraiment Supprimer</p>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t  <div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('Close click')\\\">Annulez</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"DeleteConfirm(companie.id)\\\">Ok</button>\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t\\t  </ng-template>\\r\\n\\t\\t\\t\\t\\t\\t  <button class=\\\"btn btn-primary\\\" (click)=\\\"UpdateCompanyButton(companie)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"material-icons\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcreate\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</i>Modifier</button>\\r\\n\\t\\t\\t\\t\\t\\t  <button class=\\\"btn btn-light\\\" (click)=\\\"DeleteCompanyButton(content,companie.id)\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <i class=\\\"material-icons\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tdelete_sweep\\r\\n\\t\\t\\t\\t\\t\\t\\t  </i>Supprimer</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t  </div> -->\\r\\n\\t\\t\\t\\t  <!-- </kt-portlet>\\r\\n\\t\\t\\t\\t</div>  -->\\r\\n\\t\\t \"","module.exports = \":host ::ng-deep ngb-tabset > .nav-tabs {\\n  display: none; }\\n\\n.card {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 0;\\n  word-wrap: break-word;\\n  background-color: white;\\n  background-clip: border-box;\\n  border: 0 solid rgba(0, 0, 0, 0.125);\\n  border-radius: 0.125rem; }\\n\\n.example-button-row button,\\n.example-button-row a {\\n  margin-right: 8px; }\\n\\ngridster {\\n  height: 100vh;\\n  margin: 0;\\n  padding: 0;\\n  background-color: #6788BF; }\\n\\n.mat-icon.mat-icon-logo {\\n  position: relative;\\n  top: -4px; }\\n\\n.td-search-box .td-search-icon.mat-icon-button {\\n  margin: 0;\\n  height: 30px; }\\n\\n.td-search-box .td-search-icon.mat-icon-button .mat-icon {\\n    margin-top: -10px; }\\n\\n.td-search-box td-search-input {\\n  margin-left: 0 !important;\\n  margin-bottom: 5px; }\\n\\n.td-search-box td-search-input .mat-form-field {\\n    width: auto; }\\n\\n.td-search-box td-search-input .mat-form-field-wrapper {\\n    padding-bottom: 0; }\\n\\n.td-search-box td-search-input .mat-input-infix {\\n    padding: 0; }\\n\\n.td-search-box td-search-input .mat-form-field-infix {\\n    border-top: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG93bmxvYWRzL0pJQkFZQS1QUk9KRUNULW1hc3RlciAyL3NyYy9hcHAvdmlld3MvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUdHLGFBQWEsRUFBQTs7QUFJaEI7RUFDQyxrQkFBa0I7RUFHZixhQUFhO0VBSWIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixxQkFBcUI7RUFDckIsdUJBQXVCO0VBQ3ZCLDJCQUEyQjtFQUMzQixvQ0FBb0M7RUFDcEMsdUJBQXVCLEVBQUE7O0FBRTNCOztFQUVFLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLGFBQWE7RUFDYixTQUFTO0VBQ1QsVUFBVTtFQUNWLHlCQUNGLEVBQUE7O0FBRUE7RUFFSSxrQkFBa0I7RUFDbEIsU0FBUyxFQUFBOztBQUtiO0VBRUUsU0FBUztFQUNULFlBQVksRUFBQTs7QUFIZDtJQUtJLGlCQUFpQixFQUFBOztBQUxyQjtFQVNFLHlCQUF5QjtFQUN6QixrQkFBa0IsRUFBQTs7QUFWcEI7SUFZSSxXQUFXLEVBQUE7O0FBWmY7SUFlSSxpQkFBaUIsRUFBQTs7QUFmckI7SUFrQkksVUFBVSxFQUFBOztBQWxCZDtJQXFCSSxhQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wYWdlcy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG5cdDo6bmctZGVlcCB7XHJcblx0XHRuZ2ItdGFic2V0ID4gLm5hdi10YWJzIHtcclxuXHRcdFx0ZGlzcGxheTogbm9uZTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuLmNhcmR7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcclxuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xyXG4gICAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG1pbi13aWR0aDogMDtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jbGlwOiBib3JkZXItYm94O1xyXG4gICAgYm9yZGVyOiAwIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMjUpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC4xMjVyZW07XHJcbn1cclxuLmV4YW1wbGUtYnV0dG9uLXJvdyBidXR0b24sXHJcbi5leGFtcGxlLWJ1dHRvbi1yb3cgYSB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbn1cclxuXHJcbmdyaWRzdGVyIHtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IzY3ODhCRlxyXG59XHJcbi8vIEFkanVzdCB5b3VyIGxvZ28gcG9zaXRpb25cclxuLm1hdC1pY29uIHtcclxuICAmLm1hdC1pY29uLWxvZ28ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAtNHB4O1xyXG4gIH1cclxufVxyXG5cclxuLy8gSGFjayBmb3Igc21hbGwgc2VhcmNoIGJveFxyXG4udGQtc2VhcmNoLWJveCB7XHJcbi50ZC1zZWFyY2gtaWNvbi5tYXQtaWNvbi1idXR0b24ge1xyXG4gIG1hcmdpbjogMDtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgLm1hdC1pY29uIHtcclxuICAgIG1hcmdpbi10b3A6IC0xMHB4O1xyXG4gIH1cclxufVxyXG50ZC1zZWFyY2gtaW5wdXQge1xyXG4gIG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICB9XHJcbiAgLm1hdC1mb3JtLWZpZWxkLXdyYXBwZXIge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgfVxyXG4gIC5tYXQtaW5wdXQtaW5maXgge1xyXG4gICAgcGFkZGluZzogMDtcclxuICB9XHJcbiAgLm1hdC1mb3JtLWZpZWxkLWluZml4IHtcclxuICAgIGJvcmRlci10b3A6IDA7XHJcbiAgfVxyXG59XHJcbn1cclxuIl19 */\"","import { Component, OnInit, Inject, Input, ViewChild, TemplateRef, ChangeDetectorRef } from '@angular/core';\r\nimport { Router,Params } from '@angular/router';\r\nimport { NgbModal,ModalDismissReasons, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n// import { DialogData } from '../../partials/layout/subheader/subheader1/subheader1.component';\r\nimport { CompaniesRestApiService } from '../../partials/content/widgets/shared/companies.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { DatePipe } from '@angular/common';\r\nimport { single, pie, multi, times } from './data';\r\nimport { GridsterConfig, GridsterItem }  from 'angular-gridster2';\r\n \r\nimport { TdMediaService, TdDigitsPipe, TdLayoutManageListComponent } from '@covalent/core';\r\nexport interface DialogData {\r\n  id: string;\r\n  company_country_id:string\r\n  company_title: string;\r\n\tshort_name: string;\r\n\tcompany_created_date:string;\r\n\tcompany_activity:string;\r\n\tcompany_juridical_form:string;\r\n\tcompany_IF:string;\r\n\tcompany_ICE:string;\r\n\tcompany_TP: string;\r\n\tcompany_RC:string;\r\n\tcompany_CNSS:string;\r\n}\r\n@Component({\r\n  selector: 'kt-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n  providers: [DatePipe]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n// data goes here\r\nname = 'UI Platform';\r\n@ViewChild('manageList') manageList: TdLayoutManageListComponent;\r\n  @ViewChild('dialogContent') template: TemplateRef<any>;\r\n  dateFrom: Date = new Date(new Date().getTime() - (2 * 60 * 60 * 24 * 1000));\r\n  dateTo: Date = new Date(new Date().getTime() - (1 * 60 * 60 * 24 * 1000));\r\n  config = {\r\n    width: '50%',\r\n    height: '50%',\r\n  };\r\n\r\npie: any[];\r\nsingle: any[];\r\nmulti: any[];\r\ntimes: any[];\r\nroutes = [{\r\n  title: 'Dashboards',\r\n  route: '/',\r\n  icon: 'dashboard',\r\n}, {\r\n  title: 'Reports',\r\n  route: '/',\r\n  icon: 'insert_chart',\r\n}, {\r\n  title: 'Sales',\r\n  route: '/',\r\n  icon: 'account_balance',\r\n}, {\r\n  title: 'Marketplace',\r\n  route: '/',\r\n  icon: 'store',\r\n},\r\n];\r\nusermenu = [{\r\n  title: 'Profile',\r\n  route: '/',\r\n  icon: 'account_box',\r\n}, {\r\n  title: 'Settings',\r\n  route: '/',\r\n  icon: 'settings',\r\n},\r\n];\r\n\r\ndata: any[] = [\r\n  {\r\n    'name': 'Frozen yogurt',\r\n    'type': 'Ice cream',\r\n    'calories': 159.0,\r\n    'fat': 6.0,\r\n    'carbs': 24.0,\r\n    'protein': 4.0,\r\n  }, {\r\n    'name': 'Ice cream sandwich',\r\n    'type': 'Ice cream',\r\n    'calories': 237.0,\r\n    'fat': 9.0,\r\n    'carbs': 37.0,\r\n    'protein': 4.3,\r\n  }, {\r\n    'name': 'Eclair',\r\n    'type': 'Pastry',\r\n    'calories':  262.0,\r\n    'fat': 16.0,\r\n    'carbs': 24.0,\r\n    'protein':  6.0,\r\n  }, {\r\n    'name': 'Cupcake',\r\n    'type': 'Pastry',\r\n    'calories':  305.0,\r\n    'fat': 3.7,\r\n    'carbs': 67.0,\r\n    'protein': 4.3,\r\n  }, {\r\n    'name': 'Jelly bean',\r\n    'type': 'Candy',\r\n    'calories':  375.0,\r\n    'fat': 0.0,\r\n    'carbs': 94.0,\r\n    'protein': 0.0,\r\n  }, {\r\n    'name': 'Lollipop',\r\n    'type': 'Candy',\r\n    'calories': 392.0,\r\n    'fat': 0.2,\r\n    'carbs': 98.0,\r\n    'protein': 0.0,\r\n  }, {\r\n    'name': 'Honeycomb',\r\n    'type': 'Other',\r\n    'calories': 408.0,\r\n    'fat': 3.2,\r\n    'carbs': 87.0,\r\n    'protein': 6.5,\r\n  }, {\r\n    'name': 'Donut',\r\n    'type': 'Pastry',\r\n    'calories': 452.0,\r\n    'fat': 25.0,\r\n    'carbs': 51.0,\r\n    'protein': 4.9,\r\n  }, {\r\n    'name': 'KitKat',\r\n    'type': 'Candy',\r\n    'calories': 518.0,\r\n    'fat': 26.0,\r\n    'carbs': 65.0,\r\n    'protein': 7.0,\r\n  }, {\r\n    'name': 'Chocolate',\r\n    'type': 'Candy',\r\n    'calories': 518.0,\r\n    'fat': 26.0,\r\n    'carbs': 65.0,\r\n    'protein': 7.0,\r\n  }, {\r\n    'name': 'Chamoy',\r\n    'type': 'Candy',\r\n    'calories': 518.0,\r\n    'fat': 26.0,\r\n    'carbs': 65.0,\r\n    'protein': 7.0,\r\n  },\r\n];\r\n\r\nminiNav: boolean = false;\r\noptions: GridsterConfig;\r\ndashboard: Array<GridsterItem>;\r\nstatic itemChange(item, itemComponent) {\r\n  console.info('itemChanged', item, itemComponent);\r\n}\r\nstatic itemResize(item, itemComponent) {\r\n  console.info('itemResized', item, itemComponent);\r\n}\r\n\r\n \r\nngAfterViewInit(): void {\r\n  // broadcast to all listener observables when loading the page\r\n  this.media.broadcast();\r\n  this._changeDetectorRef.detectChanges();\r\n}\r\n\r\ntoggleMiniNav(): void {\r\n  this.miniNav = !this.miniNav;\r\n  setTimeout(() => {\r\n    this.manageList.sidenav._animationStarted\r\n  });\r\n}\r\n\r\nopenTemplate() {\r\n  this.dialog.open(this.template, this.config);\r\n}\r\n\r\n// NGX Charts Axis\r\naxisDigits(val: any): any {\r\n  return new TdDigitsPipe().transform(val);\r\n}\r\n\r\naxisDate(val: string): string {\r\n  return new DatePipe('en').transform(val, 'hh a');\r\n}\r\nchangedOptions() {\r\n  this.options.api.optionsChanged();\r\n}\r\n\r\nremoveItem(item) {\r\n  this.dashboard.splice(this.dashboard.indexOf(item), 1);\r\n}\r\ncompagnielist() {\r\n  this.router.navigate(['/demo2/kt-company-list']);\r\n}\r\n\r\naddItem() {\r\n  this.dashboard.push();\r\n}\r\n// public single = [\r\n//   {\r\n//     \"name\": \"Germany\",\r\n//     \"value\": 8940000\r\n//   },\r\n//   {\r\n//     \"name\": \"USA\",\r\n//     \"value\": 5000000\r\n//   },\r\n//   {\r\n//     \"name\": \"France\",\r\n//     \"value\": 7200000\r\n//   }\r\n// ];\r\n\r\n// public multi = [\r\n//   {\r\n//     \"name\": \"Germany\",\r\n//     \"series\": [\r\n//       {\r\n//         \"name\": \"2010\",\r\n//         \"value\": 7300000\r\n//       },\r\n//       {\r\n//         \"name\": \"2011\",\r\n//         \"value\": 8940000\r\n//       }\r\n//     ]\r\n//   },\r\n\r\n//   {\r\n//     \"name\": \"USA\",\r\n//     \"series\": [\r\n//       {\r\n//         \"name\": \"2010\",\r\n//         \"value\": 7870000\r\n//       },\r\n//       {\r\n//         \"name\": \"2011\",\r\n//         \"value\": 8270000\r\n//       }\r\n//     ]\r\n//   },\r\n\r\n//   {\r\n//     \"name\": \"France\",\r\n//     \"series\": [\r\n//       {\r\n//         \"name\": \"2010\",\r\n//         \"value\": 5000002\r\n//       },\r\n//       {\r\n//         \"name\": \"2011\",\r\n//         \"value\": 5800000\r\n//       }\r\n//     ]\r\n//   }\r\n// ];\r\n\r\n\r\n  view: any[] = [500, 200];\r\n\r\n  // options for the chart\r\n  showXAxis = true;\r\n  showYAxis = true;\r\n  gradient = false;\r\n  showLegend = true;\r\n  showXAxisLabel = true;\r\n  xAxisLabel = 'Number';\r\n  showYAxisLabel = true;\r\n  yAxisLabel = 'Value';\r\n  timeline = true;\r\n\r\n  cardColor='string';\r\n  bandColor='string';\r\n  textColor='string';\r\n  emptyColor='string';\r\n  innerPadding='Number';\r\n  animations=true;\r\n  colorScheme = {\r\n    domain: ['#A8385C', '#6788BF', '#ADCCED', '#A95963']\r\n  };\r\n\r\n  // line, area\r\n  autoScale = true;\r\n\r\n  //pie\r\n  showLabels = true;\r\n  explodeSlices = false;\r\n  doughnut = false;\r\n\r\n  company_title: string;\r\n  company_country_id:string;\r\n\tshort_name: string;\r\n\tcompany_created_date:string;\r\n\tcompany_activity:string;\r\n  select;\r\n  cityOptions = [];\r\n  juridical_form = [\r\n    {value: '1', viewValue: 'SARL'},\r\n    {value: '2', viewValue: 'SA'},\r\n    {value: '3', viewValue: 'SNC'}\r\n  ];\r\n\tcompany_IF:string;\r\n\tcompany_ICE:string;\r\n  company_TP: string;\r\n  companies:any=[];\r\n\tcompany_RC:string;\r\n  company_CNSS:string;\r\n  popup_title:string;\r\n  selectedValue: string;\r\n \r\n  constructor(\r\n             public media: TdMediaService,\r\n              public dialog: MatDialog,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n        private datePipe: DatePipe,\r\n        public snackBar: MatSnackBar,\r\n        public router: Router,private modalService: NgbModal,\r\n       \r\n        public companiesrestApi:CompaniesRestApiService\r\n        ) {\r\n          Object.assign(this, {pie, single, multi, times})\r\n  }\r\n\tmodules(id) {\r\n    \r\n    this.router.navigate(['/demo2/kt-mesmodules/'+id]);\r\n    console.log(id)\r\n  }\r\n \r\n  // CreateCompanyButton(event): void {\r\n  //   const dialogRef = this.dialog.open(CompanyPopupComponent, {\r\n  //     data: {\r\n  //       company_country_id:'',\r\n  //       company_title:'',\r\n  //       short_name:'',\r\n  //       company_created_date:'',\r\n  //       company_activity:'', \r\n  //       company_juridical_form:'',\r\n  //       company_IF:'',\r\n  //       company_ICE:'',\r\n  //       company_TP:'',\r\n  //       company_RC:'',\r\n  //       company_CNSS:'',\r\n  //          }\r\n  //   });\r\n\r\n  //   dialogRef.afterClosed().subscribe(result => {\r\n  //     if(result){\r\n  //       console.log(result.company_created_date)\r\n  //       result.company_created_date = this.datePipe.transform(result.company_created_date , 'yyyy-MM-dd');\r\n  //       console.log(result.company_created_date)\r\n  //       console.log(result)\r\n  //       this.companiesrestApi.createCompagnie(result).subscribe((data: {}) => {\r\n  //         this.companies.push(data)\r\n  //         this.reset()\r\n  //         dialogRef.close()\r\n  //         this.router.navigate([''])\r\n  //         this.getCompanies() \r\n  //       }) \r\n  //       this.snackBar.openFromComponent(SuccesSnackComponent, {  \r\n  //         duration: 2000,\r\n  //         panelClass: ['blue-snackbar']\r\n  //         });\r\n  //     }\r\n  //     else( console.log('Nothing to do'))\r\n  \r\n  //   });\r\n    \r\n  // }\r\n  // reset (){\r\n  //   this.company_country_id=''\r\n  //   this.company_title=''\r\n  //   this.short_name=''\r\n  //   this.company_created_date=''\r\n  //   this.company_activity=''\r\n  //   this.juridical_form=null\r\n  //   this.company_IF=''\r\n  //   this.company_ICE=''\r\n  //   this.company_TP=''\r\n  //   this.company_RC=''\r\n  //   this.company_CNSS=''\r\n  // }\r\n  // UpdateCompanyButton(companie): void {\r\n  // //   companie.company_juridical_form\r\n  // //  this.cityOptions = this.juridical_form.filter(city => city.value ==   companie.company_juridical_form);\r\n  // //  console.log(this.cityOptions)\r\n  // //  this.cityOptions.map((t=>{\r\n  // //    console.log(t.viewValue)\r\n  // //    this.selectedValue=t.viewValue\r\n  // //  }))\r\n  //   const dialogRef = this.dialog.open(CompanyPopupComponent, {\r\n  //     data: {\r\n  //       company_country_id:companie.company_country_id,\r\n  //       company_title: companie.company_title,\r\n  //       short_name: companie.short_name, \r\n  //       company_created_date:new Date(companie.company_created_date),\r\n  //       company_activity: companie.company_activity, \r\n  //       company_juridical_form:companie.company_juridical_form,\r\n  //       company_IF:companie.company_IF, \r\n  //       company_ICE:companie.company_ICE,\r\n  //       company_TP:companie.company_TP, \r\n  //       company_RC:companie.company_RC,\r\n  //       company_CNSS:companie.company_CNSS,\r\n        \r\n  //     }\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe(result=> {\r\n  //    if(result==undefined){\r\n  //     console.log('nothing')\r\n  //    }\r\n  //    else{\r\n  //     result.company_created_date = this.datePipe.transform(new Date(), 'yyyy-MM-dd')\r\n  //     console.log(result.company_created_date)\r\n  //       this.companiesrestApi.updateCompany(companie.id, result).subscribe(res => {\r\n  //       this.companies.push(res)\r\n  //       this.reset()\r\n  //       this.router.navigate([''])\r\n  //       this.getCompanies() \r\n  //       })\r\n  //       result.company_created_date =new Date(companie.company_created_date),\r\n  //       this.snackBar.openFromComponent(SuccesSnackComponent, {  \r\n  //         duration: 2000,\r\n  //         panelClass: ['blue-snackbar']\r\n  //       });\r\n  //    }\r\n  \r\n  //   });\r\n  // }\r\n  ngOnInit() {\r\n    this.getCompanies()\r\n    this.options = {\r\n      itemChangeCallback: DashboardComponent.itemChange,\r\n      itemResizeCallback: DashboardComponent.itemResize,\r\n    };\r\n  \r\n    this.dashboard = [\r\n      {cols: 1, rows: 1, y: 0, x: 0},\r\n      {cols: 1, rows: 1, y: 0, x: 0},\r\n      {cols: 1, rows: 1, y: 0, x: 0},\r\n      {cols: 1, rows: 1, y: 0, x: 0},\r\n    ];\r\n  }\r\n  \r\n  getCompanies() {\r\n    return this.companiesrestApi.getCompany().subscribe((data: {}) => {\r\n      this.companies = data;\r\n      console.log(data)\r\n      })\r\n  \r\n    }\r\n  //   DeleteConfirm(id){\r\n  //     this.companiesrestApi.deleteCompagnies(id).subscribe(data => {\r\n  //     this.modalService.dismissAll();\r\n  //      this.router.navigate([''])\r\n  //     //  this.reset()\r\n  //      this.getCompanies()\r\n  //       })\r\n  //     this.snackBar.openFromComponent(SuccesSnackComponent, {  \r\n  //     duration: 2000,\r\n  //     panelClass: ['blue-snackbar']\r\n  //     });\r\n  //   this.getCompanies()\r\n  // }\r\n      DeleteCompanyButton(content) {\r\n       \r\n        this.modalService.open(content).result.then((result) => {\r\n        },);\r\n    }\r\n  \r\n  \r\n    private getDismissReason(reason: any): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return  `with: ${reason}`;\r\n        }\r\n    }\r\n\r\n}\r\n// @Component({\r\n//   selector: 'company-popup',\r\n//   template: `\r\n    \r\n  \r\n  \r\n//   <form class=\"example-form\"  #companypopup=\"ngForm\">\r\n//   <mat-toolbar color=\"primary\">\r\n//   <mat-toolbar-row>\r\n//   <h4 class=\"mat-dialog-title\"> \r\n//   <i class=\"material-icons orange600\">\r\n//       account_balance\r\n//   </i>\r\n//   {{description}}\r\n// </h4>\r\n//   </mat-toolbar-row>\r\n// </mat-toolbar>\r\n//       <div style='margin-left:2%;margin-top:5%'>\r\n//       <table class=\"example-full-width\" cellspacing=\"0\">\r\n     \r\n//       <tr>\r\n//       <td><mat-form-field class=\"example-full-width\">\r\n//       <input matInput placeholder=\"id pays\" [(ngModel)]=\"data.company_country_id\"\r\n//       name=\"company_country_id\"\r\n//       />\r\n//     </mat-form-field></td>\r\n//       <td><mat-form-field class=\"example-full-width\">\r\n//         <input matInput placeholder=\"Raison sociale\" [(ngModel)]=\"data.company_title\"\r\n//         name=\"raison\" required\r\n//         />\r\n//       </mat-form-field></td>\r\n//       <td><mat-form-field class=\"example-full-width\">\r\n//       <input matInput \r\n//       name=\"short\" required\r\n//       placeholder=\"Nom Abrégé\" [(ngModel)]=\"data.short_name\"/>\r\n//       </mat-form-field></td>\r\n//       </tr></table>\r\n//       <table class=\"example-full-width\" cellspacing=\"0\">\r\n//       <tr>\r\n//                 <td>\r\n//                   <mat-form-field class=\"example-full-width\">\r\n//                   <input matInput name=\"date_creation\"\r\n//                   [matDatepicker]=\"picker\" placeholder=\"Date de creation\" required\r\n//                   [(ngModel)]=\"data.company_created_date\"/>\r\n//                     <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n//                     <mat-datepicker #picker></mat-datepicker>\r\n//                   </mat-form-field>\r\n//                 </td>\r\n//                 <td>\r\n//                   <mat-form-field class=\"example-full-width\">\r\n//                   <textarea name=\"creation_Date\" \r\n//                   matInput placeholder=\"Secteur d’activité\" required\r\n//                   [(ngModel)]=\"data.company_activity\"></textarea>\r\n//                   </mat-form-field>\r\n//               </td>\r\n           \r\n//               <mat-form-field>\r\n//                         <mat-select\r\n//                         name=\"juridical_form\" [(ngModel)]=\"data.company_juridical_form\" required>\r\n//                         <mat-option *ngFor=\"let juridical of juridical_form\" [value]=\"juridical.value\">\r\n//                         {{juridical.viewValue}}\r\n//                       </mat-option>\r\n//                       </mat-select>\r\n//             </mat-form-field>\r\n//       </tr>\r\n//       </table>\r\n      \r\n//         <table class=\"example-full-width\" cellspacing=\"0\"><tr>\r\n//           <td><mat-form-field class=\"example-full-width\">\r\n//           <input matInput #IF maxlength=\"8\" name=\"postalCode\" placeholder=\"IF\" required\r\n//           [(ngModel)]=\"data.company_IF\"/>\r\n//             <mat-hint align=\"end\">{{IF.value.length}} / 8</mat-hint>\r\n//           </mat-form-field></td>\r\n//           <td><mat-form-field class=\"example-full-width\">\r\n//           <input matInput #ICE maxlength=\"15\"name=\"ice\" placeholder=\"ICE\" required\r\n//           [(ngModel)]=\"data.company_ICE\"/>\r\n//             <mat-hint align=\"end\">{{ICE.value.length}} / 15</mat-hint>\r\n//           </mat-form-field></td>\r\n//         </tr>\r\n//         </table>\r\n//         <table class=\"example-full-width\" cellspacing=\"0\"><tr>\r\n//           <td><mat-form-field class=\"example-full-width\">\r\n//           <input matInput #TP maxlength=\"8\" placeholder=\"TP\" name=\"TP\" required\r\n//           [(ngModel)]=\"data.company_TP\"/>\r\n//             <mat-hint align=\"end\">{{TP.value.length}} / 8</mat-hint>\r\n//           </mat-form-field></td>\r\n//           <td><mat-form-field class=\"example-full-width\">\r\n//             <input matInput #RC maxlength=\"8\" name=\"RC\" placeholder=\"RC\" required\r\n//             [(ngModel)]=\"data.company_RC\"/>\r\n//             <mat-hint align=\"end\">{{RC.value.length}} / 8</mat-hint>\r\n//           </mat-form-field></td>\r\n//           <td><mat-form-field class=\"example-full-width\">\r\n//           <input matInput #CNSS maxlength=\"8\" name=\"cnss\" placeholder=\"CNSS\" required\r\n//           [(ngModel)]=\"data.company_CNSS\"/>\r\n//             <mat-hint align=\"end\">{{CNSS.value.length}} / 8</mat-hint>\r\n//           </mat-form-field></td>\r\n\r\n//         </tr>\r\n//         <tr>\r\n//         <td><mat-form-field class=\"no-line\">\r\n//         <input matInput  [(ngModel)]=\"data.id\" \r\n//         name=\"id\" [hidden]=\"true\"/>\r\n//       </mat-form-field></td>\r\n//         </tr>\r\n    \r\n//         </table>\r\n//         <div class=\"example-button-row\" style='margin-left:40%;margin-top:5%'>\r\n//           <button mat-raised-button (click)=\"DismissButton()\">Annulez</button>\r\n//             <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"companypopup.invalid\"\r\n//                 [mat-dialog-close]=\"data\" cdkFocusInitial>\r\n//                 <i class=\"material-icons\">save</i>\r\n//                 Sauvegardez\r\n//             </button>\r\n \r\n            \r\n//         </div>\r\n//       </div>\r\n\r\n// </form>\r\n//                     <style>\r\n//                       .example-form {\r\n               \r\n//                       margin-bottom: 10%\r\n//                       }\r\n//                       .material-icons.orange600 { color: #FB8C00; }\r\n//                       .example-full-width {\r\n//                       width: 100%;\r\n//                       }\r\n//                       td {\r\n//                       padding-right:30px;\r\n//                       }\r\n//                       .mat-dialog-container {\r\n//                         padding-top: 0 !important;\r\n//                     }\r\n                    \r\n//                     dialog-overview-example-dialog.ng-star-inserted > div {\r\n//                         margin-right: -24px;\r\n//                         margin-left: -24px;\r\n//                     }\r\n                    \r\n//                     .mat-dialog-actions {\r\n//                         margin-right: 0 !important;\r\n//                         margin-left: 0 !important;\r\n//                     }\r\n//                     .example-icon {\r\n//                       padding: 0 14px;\r\n//                     }\r\n                    \r\n//                     .example-spacer {\r\n//                       flex: 1 1 auto;\r\n//                     }\r\n//                     ::ng-deep .no-line .mat-form-field-underline {\r\n//                       display: none;\r\n//                     }\r\n                    \r\n//                     </style>\r\n\r\n//    `,\r\n   \r\n// })\r\n// export class CompanyPopupComponent {\r\n\r\n//   description:any;\r\n//   company_country_id:any;\r\n//   company_title:any;\r\n//   short_name:any;\r\n//   company_created_date:any;\r\n//   company_activity:any;\r\n//   company_juridical_form:any;\r\n//   juridic:any\r\n//   company_IF:any;\r\n//   company_ICE:any;\r\n//   company_TP:any;\r\n//   company_RC:any;\r\n//   company_CNSS:any;\r\n//   companies:any=[];\r\n//   cityOptions = [];\r\n//   juridical_form = [\r\n//     {value: '1', viewValue: 'SARL'},\r\n//     {value: '2', viewValue: 'SA'},\r\n//     {value: '3', viewValue: 'SNC'}\r\n//   ];\r\n  \r\n//   constructor(\r\n \r\n//     public companiesrestApi:CompaniesRestApiService,\r\n//     public dialogRef: MatDialogRef<CompanyPopupComponent>,\r\n//     @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n//       if(data.id==null){\r\n//          this.description='Nouvelle une compagnie'\r\n\r\n//       }\r\n//       else(this.description='Modifier votre compagnie')\r\n//     }\r\n\r\n//   DismissButton(): void {\r\n//     this.dialogRef.close();\r\n//     this.getCompanies()\r\n//   }\r\n//   getCompanies() {\r\n//     return this.companiesrestApi.getCompany().subscribe((data: {}) => {\r\n//       this.companies = data;\r\n//       })\r\n//     }\r\n//   stateChanged(stateName: string) {\r\n//       console.log(stateName);\r\n//     }\r\n// }\r\n\r\n// @Component({\r\n//   selector: 'snack-bar-component-example-snack',\r\n//   template: `\r\n//     <span _ngcontent-c3=\"\" class=\"example-pizza-party\">\r\n//     Succès!!! 🎉\r\n//     </span>`,\r\n//   styles: [`.example-pizza-party { color: #0E9D58; }`],\r\n//   })\r\n//   export class SuccesSnackComponent {}","// Angular\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n// NgBootstrap\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n// Core Module\r\nimport { CoreModule } from '../../../core/core.module';\r\nimport { PartialsModule } from '../../partials/partials.module';\r\n \r\nimport { DashboardComponent} from './dashboard.component';\r\nimport { WidgetModule } from '../../partials/content/widgets/widget.module';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport {MatDialogModule, MatDialogRef} from '@angular/material/dialog';\r\nimport { MatToolbarModule, MatCardModule, MatButtonModule, MatIconModule, MatMenuModule, MatInputModule, MatSelectModule, MatButtonToggleModule, MatSlideToggleModule, MatProgressSpinnerModule, MatSnackBarModule, MatTabsModule, MatSidenavModule, MatTooltipModule, MatRippleModule, MatRadioModule, MatGridListModule, MatDatepickerModule, MatNativeDateModule, MatSliderModule, MatAutocompleteModule } from '@angular/material';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport { GridsterModule } from 'angular-gridster2';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport { CovalentLayoutModule } from '@covalent/core/layout';\r\nimport { CovalentDataTableModule } from '@covalent/core/data-table';\r\nimport { CovalentCommonModule, CovalentMediaModule, CovalentExpansionPanelModule, CovalentStepsModule, CovalentDialogsModule, CovalentLoadingModule, CovalentSearchModule, CovalentPagingModule, CovalentNotificationsModule, CovalentMenuModule, CovalentMessageModule } from '@covalent/core';\r\n// import { AsideLeftComponent } from '../themes/demo2/aside/aside-left.component';\r\n// import { BrandComponent } from '../themes/demo2/header/brand/brand.component';\r\n \r\n// import { NgxPermissionsModule } from 'ngx-permissions';\r\n// import { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tMatDialogModule,\r\n\t\tFormsModule,\r\n\t\tMatTableModule,\r\n\t\tNgxChartsModule,\r\n\t\tGridsterModule,\r\n\t\tMatListModule,\r\n\t\tMatDividerModule,\r\n\t\tMatCardModule,\r\n\t\tMatToolbarModule,\r\n\t\tReactiveFormsModule,\r\n\t\tPartialsModule,\r\n\t\tWidgetModule,\r\n\t\tCoreModule,\r\n\t\tNgbModule,\r\n\t\tMatButtonModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n\tMatMenuModule,\r\n\tCovalentDataTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatButtonToggleModule,\r\n    MatSlideToggleModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n\tMatTabsModule,\r\n\tMatButtonModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatButtonToggleModule,\r\n    MatSlideToggleModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    MatTabsModule,\r\n    MatSidenavModule,\r\n    MatTooltipModule,\r\n\tMatRippleModule,\r\n\t\r\n    MatRadioModule,\r\n    MatGridListModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSliderModule,\r\n    MatAutocompleteModule,\r\n    /** Covalent Modules */\r\n    CovalentCommonModule,\r\n    CovalentLayoutModule,\r\n    CovalentMediaModule,\r\n    CovalentExpansionPanelModule,\r\n    CovalentStepsModule,\r\n    CovalentDialogsModule,\r\n    CovalentLoadingModule,\r\n    CovalentSearchModule,\r\n    CovalentPagingModule,\r\n    CovalentNotificationsModule,\r\n    CovalentMenuModule,\r\n    CovalentDataTableModule,\r\n    CovalentMessageModule,\r\n    /** Additional **/\r\n    NgxChartsModule,\r\n\tCovalentLayoutModule,\r\n    MatSidenavModule,\r\n    MatTooltipModule,\r\n    MatRippleModule,\r\n    MatRadioModule,\r\n    MatGridListModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSliderModule,\r\n    MatAutocompleteModule,\r\n\t\tRouterModule.forChild([\r\n\t\t\t{\r\n\t\t\t\tpath: '',\r\n\t\t\t\tcomponent: DashboardComponent\r\n\t\t\t},\r\n\t\t]),\r\n\t],\r\n\tentryComponents: [],\r\n\tproviders: [],\r\n\tdeclarations: [\r\n        \r\n\t\tDashboardComponent,\r\n\t]\r\n})\r\nexport class DashboardModule {\r\n}\r\n","export var pie: any = [\n  {\n    \"name\": \"Candy\",\n    \"value\": 8940000\n  },\n  {\n    \"name\": \"Ice Cream\",\n    \"value\": 5000000\n  },\n  {\n    \"name\": \"Pastry\",\n    \"value\": 7200000\n  }\n];\nexport let single: any = [\n  {\n    'value': 87,\n    'name': '2017-06-28T03:13:02Z'\n  }, {\n    'value': 81,\n    'name': '2017-06-02T09:40:08Z'\n  }, {\n    'value': 73,\n    'name': '2017-06-06T08:26:45Z'\n  }, {\n    'value': 82,\n    'name': '2017-06-14T06:24:28Z'\n  }, {\n    'value': 84,\n    'name': '2017-06-14T05:18:34Z'\n  }, {\n    'value': 85,\n    'name': '2017-06-16T10:18:00Z'\n  }, {\n    'value': 80,\n    'name': '2017-06-11T05:22:44Z'\n  }, {\n    'value': 80,\n    'name': '2017-06-13T09:06:45Z'\n  }, {\n    'value': 82,\n    'name': '2017-06-12T12:25:03Z'\n  }, {\n    'value': 86,\n    'name': '2017-06-03T08:11:16Z'\n  }, {\n    'value': 81,\n    'name': '2017-06-05T05:18:25Z'\n  }, {\n    'value': 74,\n    'name': '2017-06-21T06:45:43Z'\n  }, {\n    'value': 76,\n    'name': '2017-06-06T09:32:01Z'\n  }, {\n    'value': 87,\n    'name': '2017-06-03T06:14:21Z'\n  }, {\n    'value': 94,\n    'name': '2017-06-28T08:49:56Z'\n  }, {\n    'value': 83,\n    'name': '2017-06-28T23:56:28Z'\n  }, {\n    'value': 96,\n    'name': '2017-06-09T00:37:40Z'\n  }, {\n    'value': 78,\n    'name': '2017-06-05T23:56:10Z'\n  }, {\n    'value': 73,\n    'name': '2017-06-01T20:20:02Z'\n  }, {\n    'value': 74,\n    'name': '2017-06-01T02:27:40Z'\n  }, {\n    'value': 87,\n    'name': '2017-06-01T08:59:09Z'\n  }, {\n    'value': 90,\n    'name': '2017-06-23T05:01:53Z'\n  }, {\n    'value': 84,\n    'name': '2017-06-20T21:48:24Z'\n  }, {\n    'value': 94,\n    'name': '2017-06-08T09:46:48Z'\n  }, {\n    'value': 87,\n    'name': '2017-06-01T08:07:57Z'\n  }, {\n    'value': 95,\n    'name': '2017-06-28T11:18:05Z'\n  }, {\n    'value': 92,\n    'name': '2017-06-20T01:41:47Z'\n  }, {\n    'value': 92,\n    'name': '2017-06-21T07:37:39Z'\n  }, {\n    'value': 85,\n    'name': '2017-06-28T20:00:59Z'\n  }, {\n    'value': 94,\n    'name': '2017-06-18T15:57:28Z'\n  }\n];\n\nexport var multi: any = [\n  {\n    'name': 'Candy',\n    'series': [\n      {\n        'name': '2016',\n        'value': 7300000\n      },\n      {\n        'name': '2017',\n        'value': 8940000\n      }\n    ]\n  },\n\n  {\n    'name': 'Ice Cream',\n    'series': [\n      {\n        'name': '2016',\n        'value': 7870000\n      },\n      {\n        'name': '2017',\n        'value': 8270000\n      }\n    ]\n  },\n\n  {\n    'name': 'Pastry',\n    'series': [\n      {\n        'name': '2016',\n        'value': 5000002\n      },\n      {\n        'name': '2017',\n        'value': 5800000\n      }\n    ]\n  }\n];\n\nexport var times: any = [\n  {\n    'name': 'Candy',\n    'series': [\n      {\n        'value': 69,\n        'name': '2016-09-15T19:25:07.773Z',\n      },\n      {\n        'value': 19,\n        'name': '2016-09-17T17:16:53.279Z',\n      },\n      {\n        'value': 85,\n        'name': '2016-09-15T10:34:32.344Z',\n      },\n      {\n        'value': 89,\n        'name': '2016-09-19T14:33:45.710Z',\n      },\n      {\n        'value': 33,\n        'name': '2016-09-12T18:48:58.925Z',\n      }\n    ]\n  },\n  {\n    'name': 'Ice Cream',\n    'series': [\n      {\n        'value': 52,\n        'name': '2016-09-15T19:25:07.773Z',\n      },\n      {\n        'value': 49,\n        'name': '2016-09-17T17:16:53.279Z',\n      },\n      {\n        'value': 41,\n        'name': '2016-09-15T10:34:32.344Z',\n      },\n      {\n        'value': 38,\n        'name': '2016-09-19T14:33:45.710Z',\n      },\n      {\n        'value': 72,\n        'name': '2016-09-12T18:48:58.925Z',\n      }\n    ]\n  },\n  {\n    'name': 'Pastry',\n    'series': [\n      {\n        'value': 40,\n        'name': '2016-09-15T19:25:07.773Z',\n      },\n      {\n        'value': 45,\n        'name': '2016-09-17T17:16:53.279Z',\n      },\n      {\n        'value': 51,\n        'name': '2016-09-15T10:34:32.344Z',\n      },\n      {\n        'value': 68,\n        'name': '2016-09-19T14:33:45.710Z',\n      },\n      {\n        'value': 54,\n        'name': '2016-09-12T18:48:58.925Z',\n      }\n    ]\n  },\n];"],"sourceRoot":""}
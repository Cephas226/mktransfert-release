{"version":3,"sources":["webpack:///./src/app/views/pages/user-management/companies/companies-list/companies-list.component.html","webpack:///./src/app/views/pages/user-management/companies/companies-list/companies-list.component.ts","webpack:///./src/app/views/pages/user-management/roles/role-edit/role-edit.dialog.component.html","webpack:///./src/app/views/pages/user-management/roles/role-edit/role-edit.dialog.component.ts","webpack:///./src/app/views/pages/user-management/roles/roles-list/roles-list.component.html","webpack:///./src/app/views/pages/user-management/roles/roles-list/roles-list.component.ts","webpack:///./src/app/views/pages/user-management/shared/companies.service.ts","webpack:///./src/app/views/pages/user-management/user-management.component.html","webpack:///./src/app/views/pages/user-management/user-management.component.ts","webpack:///./src/app/views/pages/user-management/user-management.module.ts","webpack:///./src/app/views/pages/user-management/users/_subs/address/address.component.html","webpack:///./src/app/views/pages/user-management/users/_subs/address/address.component.ts","webpack:///./src/app/views/pages/user-management/users/_subs/change-password/change-password.component.html","webpack:///./src/app/views/pages/user-management/users/_subs/change-password/change-password.component.ts","webpack:///./src/app/views/pages/user-management/users/_subs/social-networks/social-networks.component.html","webpack:///./src/app/views/pages/user-management/users/_subs/social-networks/social-networks.component.ts","webpack:///./src/app/views/pages/user-management/users/_subs/user-roles/user-roles-list.component.html","webpack:///./src/app/views/pages/user-management/users/_subs/user-roles/user-roles-list.component.ts","webpack:///./src/app/views/pages/user-management/users/user-edit/user-edit.component.html","webpack:///./src/app/views/pages/user-management/users/user-edit/user-edit.component.ts","webpack:///./src/app/views/pages/user-management/users/users-list/users-list.component.html","webpack:///./src/app/views/pages/user-management/users/users-list/users-list.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,y5DAAy5D,uCAAuC,8YAA8Y,6BAA6B,mgFAAmgF,SAAS,gPAAgP,YAAY,gUAAgU,oCAAoC,4GAA4G,6CAA6C,gEAAgE,ydAAyd,y8CAAy8C,wBAAwB,oWAAoW,qBAAqB,qhC;;;;;;;;;;;;;;;;;;;;;;;ACAn+P,UAAU;AACV,oGAA6G;AAC7G,WAAW;AACX,+HAA0D;AAC1D,uHAAkF;AAClF,OAAO;AACP,4GAA4F;AAC5F,mFAAsE;AAEtE,OAAO;AACP,kGAAoC;AAGpC,WAAW;AACX,6GAAiF;AACjF,SAAS;AACT,iGAAmG;AAEnG,6GAAkE;AAClE,sMAA2F;AAC3F,yJAAyE;AAEzE,aAAa;AAEb,gCAAgC;AAChC,+CAA+C;AAC/C,kEAAkE;AAClE,2DAA2D;AAC3D,0DAA0D;AAC1D,mEAAmE;AACnE,8CAA8C;AAM9C;IAgBC;;;;;;;OAOG;IACH,gCACQ,gBAAwC,EACvC,KAAsB,EACvB,MAAiB,EACjB,QAAqB,EACpB,kBAAsC;QAJvC,qBAAgB,GAAhB,gBAAgB,CAAwB;QACvC,UAAK,GAAL,KAAK,CAAiB;QACvB,WAAM,GAAN,MAAM,CAAW;QACjB,aAAQ,GAAR,QAAQ,CAAa;QACpB,uBAAkB,GAAlB,kBAAkB,CAAoB;QA5B/C,eAAe;QACf,cAAS,GAAK,EAAE,CAAC;QAEjB,qBAAgB,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAKxD,YAAY;QACZ,cAAS,GAAG,IAAI,4BAAc,CAAO,IAAI,EAAE,EAAE,CAAC,CAAC;QAC/C,gBAAW,GAAW,EAAE,CAAC;QAEzB,gBAAgB;QACR,kBAAa,GAAmB,EAAE,CAAC;IAeO,CAAC;IAEnD;;OAEG;IAEH;;OAEG;IACH,yCAAQ,GAAR;QAAA,iBA6CC;QA5CA,oEAAoE;QACpE,IAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAM,QAAC,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC9F,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE1C;;;WAGG;QACH,IAAM,sBAAsB,GAAG,YAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CACnF,eAAG,CAAC;YACH,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CACF;aACA,SAAS,EAAE,CAAC;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAEhD,kCAAkC;QAClC,IAAM,kBAAkB,GAAG,gBAAS,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,IAAI;QACjF,2CAA2C;QAC3C,wBAAY,CAAC,GAAG,CAAC,EAAE,+MAA+M;QAClO,gCAAoB,EAAE,EAAE,gDAAgD;QACxE,eAAG,CAAC;YACH,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CACF;aACA,SAAS,EAAE,CAAC;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAE5C,kBAAkB;QAClB,IAAI,CAAC,UAAU,GAAG,IAAI,sBAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,IAAM,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAC9D,gBAAI,CAAC,CAAC,CAAC,EACP,gCAAoB,EAAE,CACtB,CAAC,SAAS,CAAC,aAAG;YACd,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAE9C,aAAa;QACb,SAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,gBAAI,CAAC,CAAC,CAAC,EAAE,iBAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YAClD,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,EAAE;IACpB,CAAC;IAED;;OAEG;IACH,4CAAW,GAAX;QACC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAE,IAAI,SAAE,CAAC,WAAW,EAAE,EAAhB,CAAgB,CAAC,CAAC;IACpD,CAAC;IACD,6CAAY,GAAZ;QAAA,iBAKG;QAJF,OAAO,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,IAAQ;YAC5D,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC;IAEH,CAAC;IACH;;OAEG;IACH,8CAAa,GAAb;QACC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAM,WAAW,GAAG,IAAI,uBAAgB,CACvC,IAAI,CAAC,mBAAmB,EAAE,EAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,EACnB,IAAI,CAAC,IAAI,CAAC,MAAM,EAChB,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,CACvB,CAAC;QACF,2BAA2B;QAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yBAAkB,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED;;OAEG;IACH,oDAAmB,GAAnB;QACC,IAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,IAAM,UAAU,GAAW,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC;QAChE,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC;QAC1B,OAAO,MAAM,CAAC;IACf,CAAC;IAED,cAAc;IACd;;;;OAIG;IACH,2CAAU,GAAV,UAAW,KAAW;QAAtB,iBAgBC;QAfA,IAAM,MAAM,GAAW,kBAAkB,CAAC;QAC1C,IAAM,YAAY,GAAW,mCAAmC,CAAC;QACjE,IAAM,eAAe,GAAW,yBAAyB,CAAC;QAC1D,IAAM,cAAc,GAAG,4CAA6B,CAAC;QAErD,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QAC/F,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YACpC,IAAI,CAAC,GAAG,EAAE;gBACT,OAAO;aACP;YAED,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAW,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;YACtD,KAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,cAAc,EAAE,kBAAW,CAAC,MAAM,CAAC,CAAC;YACnF,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;IACZ;;OAEG;IACH,2CAAU,GAAV;QACC,IAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAI;YACnC,QAAQ,CAAC,IAAI,CAAC;gBACb,IAAI,EAAE,KAAG,IAAI,CAAC,KAAO;gBACrB,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;aAEtB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC;IAED;;OAEG;IACH,wCAAO,GAAP;QACC,IAAM,OAAO,GAAG,IAAI,WAAI,EAAE,CAAC;QAC3B,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,0BAA0B;QAC3C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACxB,CAAC;IAED;;;;OAIG;IACH,yCAAQ,GAAR,UAAS,IAAU;QAAnB,iBAYC;QAXA,IAAM,YAAY,GAAG,mCAAmC,CAAC;QACzD,IAAM,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,kBAAW,CAAC,MAAM,CAAC,CAAC,CAAC,kBAAW,CAAC,MAAM,CAAC;QACvE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oDAAuB,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3F,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YACpC,IAAI,CAAC,GAAG,EAAE;gBACT,OAAO;aACP;YAED,KAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,YAAY,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9F,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,8CAAa,GAAb;QACC,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACxC,OAAO,WAAW,KAAK,OAAO,CAAC;IAChC,CAAC;IAED;;OAEG;IACH,6CAAY,GAAZ;QAAA,iBAMC;QALA,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YAC/D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACvB;aAAM;YACN,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;SAC5D;IACF,CAAC;IA7MwB;QAAxB,gBAAS,CAAC,uBAAY,CAAC;kCAAY,uBAAY;6DAAC;IAC7B;QAAnB,gBAAS,CAAC,OAAO,CAAC;kCAAO,kBAAO;wDAAC;IAER;QAAzB,gBAAS,CAAC,aAAa,CAAC;kCAAc,iBAAU;+DAAC;IARtC,sBAAsB;QALlC,gBAAS,CAAC;YACV,QAAQ,EAAE,eAAe;YACzB,oKAA8C;YAC9C,eAAe,EAAE,8BAAuB,CAAC,MAAM;SAC/C,CAAC;yCA0BwB,2CAAuB;YAChC,aAAK;YACL,oBAAS;YACP,sBAAW;YACA,yBAAkB;OA7BnC,sBAAsB,CAmNlC;IAAD,6BAAC;CAAA;AAnNY,wDAAsB;;;;;;;;;;;;ACpCnC,yDAAyD,sGAAsG,4LAA4L,YAAY,8nEAA8nE,gEAAgE,8sBAA8sB,mBAAmB,wzBAAwzB,oBAAoB,62BAA62B,4c;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/7J,UAAU;AACV,oGAA8F;AAC9F,uHAAkE;AAGlE,OAAO;AACP,mFAAmD;AACnD,SAAS;AACT,oFAA0C;AAG1C,kGAA4C;AAG5C,sBAAsB;AACtB,iGASkC;AAClC,4GAAuC;AAOvC;IAYC;;;;;;OAMG;IACH,iCAAmB,SAAgD,EAClC,IAAS,EACjC,KAAsB;QAFZ,cAAS,GAAT,SAAS,CAAuC;QAClC,SAAI,GAAJ,IAAI,CAAK;QACjC,UAAK,GAAL,KAAK,CAAiB;QAjB/B,kBAAa,GAAY,KAAK,CAAC;QAC/B,gBAAW,GAAY,KAAK,CAAC;QAC7B,uBAAkB,GAAY,KAAK,CAAC;QAEpC,oBAAe,GAAiB,EAAE,CAAC;IAaA,CAAC;IAEpC;;OAEG;IAEH;;OAEG;IACH,0CAAQ,GAAR;QAAA,iBAkBC;QAjBA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAM,CAAC,qBAAc,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACvE;aAAM;YACN,IAAM,OAAO,GAAG,IAAI,WAAI,EAAE,CAAC;YAC3B,OAAO,CAAC,KAAK,EAAE,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,SAAE,CAAC,OAAO,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAG;YACvB,IAAI,CAAC,GAAG,EAAE;gBACT,OAAO;aACP;YAED,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAM,CAAC,2BAAoB,CAAC,CAAC,CAAC;YACrE,KAAI,CAAC,eAAe,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,6CAAW,GAAX;QACC,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAChC,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;SAC1C;IACF,CAAC;IAED;;OAEG;IACH,iDAAe,GAAf;QAAA,iBAiCC;QAhCA,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,yBAAe;YAC7C,IAAI,CAAC,eAAe,EAAE;gBACrB,OAAO;aACP;YAED,IAAM,eAAe,GAAG,eAAe,CAAC,MAAM,CAAC,YAAE,IAAI,QAAC,EAAE,CAAC,QAAQ,EAAZ,CAAY,CAAC,CAAC;YACnE,eAAe,CAAC,OAAO,CAAC,UAAC,OAAmB;gBAC3C,IAAM,iBAAiB,GAAG,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,KAAK,OAAO,CAAC,EAAE,EAAhB,CAAgB,CAAC,CAAC;gBAC5E,IAAM,cAAc,GAAG,IAAI,iBAAU,EAAE,CAAC;gBACxC,cAAc,CAAC,KAAK,EAAE,CAAC;gBACvB,cAAc,CAAC,UAAU,GAAG,iBAAiB,CAAC;gBAC9C,cAAc,CAAC,SAAS,GAAG,EAAE,CAAC;gBAC9B,cAAc,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;gBAC/B,cAAc,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;gBACrC,cAAc,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAC3C,cAAc,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;gBACrC,IAAM,QAAQ,GAAG,eAAe,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,KAAK,OAAO,CAAC,EAAE,EAAzC,CAAyC,CAAC,CAAC;gBACzF,QAAQ,CAAC,OAAO,CAAC,eAAK;oBACrB,IAAM,sBAAsB,GAAG,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,KAAK,KAAK,CAAC,EAAE,EAAd,CAAc,CAAC,CAAC;oBAC/E,IAAM,eAAe,GAAG,IAAI,iBAAU,EAAE,CAAC;oBACzC,eAAe,CAAC,KAAK,EAAE,CAAC;oBACxB,eAAe,CAAC,UAAU,GAAG,sBAAsB,CAAC;oBACpD,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC;oBAC/B,eAAe,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;oBAC9B,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;oBACpC,eAAe,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;oBAC1C,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;oBACpC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,cAAc;IACd;;OAEG;IACH,sDAAoB,GAApB;QACC,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,aAAI,CAAC,IAAI,CAAC,eAAe,EAAE,UAAC,KAAiB;YAC5C,IAAI,KAAK,CAAC,UAAU,EAAE;gBACrB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBACtB,aAAI,CAAC,KAAK,CAAC,SAAS,EAAE,UAAC,MAAkB;oBACxC,IAAI,MAAM,CAAC,UAAU,EAAE;wBACtB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;qBACvB;gBACF,CAAC,CAAC,CAAC;aACH;QACF,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IACf,CAAC;IAED;;OAEG;IACH,6CAAW,GAAX;QACC,IAAM,KAAK,GAAG,IAAI,WAAI,EAAE,CAAC;QACzB,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACxB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAChD,yEAAyE;QACzE,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9B,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO,KAAK,CAAC;IACd,CAAC;IAED;;OAEG;IACH,0CAAQ,GAAR;QACC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,iBAAiB;QACjB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE;YACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO;SACP;QAED,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,UAAU,CAAC,EAAE,GAAG,CAAC,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC5B;aAAM;YACN,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC5B;IACF,CAAC;IAED;;;;OAIG;IACH,4CAAU,GAAV,UAAW,KAAW;QAAtB,iBAmBC;QAlBA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,wDAAwD;QACxD,IAAM,UAAU,GAAiB;YAChC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,EAAE,KAAK;SACZ,CAAC;QACJ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAW,CAAC;YACnC,WAAW,EAAE,UAAU;YACvB,IAAI,EAAE,KAAK;SACX,CAAC,CAAC,CAAC;QACJ,SAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YACzC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBACpB,KAAK;gBACL,MAAM,EAAE,IAAI;aACZ,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC,CAAC,mBAAmB;IACxB,CAAC;IAED;;;;OAIG;IACH,4CAAU,GAAV,UAAW,KAAW;QAAtB,iBAkBC;QAjBA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0BAAmB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAC5C,iBAAK,CAAC,IAAI,CAAC,EAAE,mBAAmB;QAChC,cAAM,CAAC,8BAAuB,CAAC,CAC/B,CAAC,SAAS,CAAC,aAAG;YACd,IAAI,CAAC,GAAG,EAAE;gBACT,OAAO;aACP;YAED,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBACpB,KAAK;gBACL,MAAM,EAAE,KAAK;aACb,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,8CAAY,GAAZ,UAAa,MAAM;QAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED;;;;;OAKG;IACH,mDAAiB,GAAjB,UAAkB,MAAM,EAAE,UAAsB;QAC/C,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,UAAU,CAAC,UAAU,EAAE;YAC/D,IAAM,KAAK,GAAG,aAAI,CAAC,IAAI,CAAC,eAAe,EAAE,UAAC,IAAgB,IAAK,WAAI,CAAC,EAAE,KAAK,UAAU,CAAC,QAAQ,EAA/B,CAA+B,CAAC,CAAC;YAChG,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;gBAC/B,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;YACD,OAAO;SACP;QAED,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;YAChE,IAAM,KAAK,GAAG,aAAI,CAAC,IAAI,CAAC,eAAe,EAAE,UAAC,IAAgB,IAAK,WAAI,CAAC,EAAE,KAAK,UAAU,CAAC,QAAQ,EAA/B,CAA+B,CAAC,CAAC;YAChG,IAAI,KAAK,IAAI,KAAK,CAAC,UAAU,EAAE;gBAC9B,IAAI,CAAC,aAAI,CAAC,KAAK,CAAC,SAAS,EAAE,UAAC,IAAgB,IAAK,WAAI,CAAC,UAAU,KAAK,IAAI,EAAxB,CAAwB,CAAC,EAAE;oBAC3E,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;iBACzB;aACD;YACD,OAAO;SACP;QAED,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,UAAU,CAAC,UAAU,EAAE;YAC7D,aAAI,CAAC,UAAU,CAAC,SAAS,EAAE,UAAC,IAAgB,IAAK,WAAI,CAAC,UAAU,GAAG,IAAI,EAAtB,CAAsB,CAAC,CAAC;YACzE,OAAO;SACP;QAED,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;YAC9D,aAAI,CAAC,UAAU,CAAC,SAAS,EAAE,UAAC,IAAgB;gBAC3C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC,CAAC;YACH,OAAO;SACP;IACF,CAAC;IAED,SAAS;IACT;;OAEG;IACH,0CAAQ,GAAR;QACC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YAC9B,2CAA2C;YAC3C,OAAO,gBAAc,IAAI,CAAC,IAAI,CAAC,KAAK,MAAG,CAAC;SACxC;QAED,2CAA2C;QAC3C,OAAO,UAAU,CAAC;IACnB,CAAC;IAED;;OAEG;IACH,8CAAY,GAAZ;QACC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACrE,CAAC;IA1QW,uBAAuB;QALnC,gBAAS,CAAC;YACV,QAAQ,EAAE,qBAAqB;YAC/B,+JAAgD;YAChD,eAAe,EAAE,8BAAuB,CAAC,OAAO;SAChD,CAAC;QAqBC,wBAAM,CAAC,0BAAe,CAAC;yCADK,uBAAY,UAE1B,aAAK;OArBT,uBAAuB,CA2QnC;IAAD,8BAAC;CAAA;AA3QY,0DAAuB;;;;;;;;;;;;AChCpC,+4DAA+4D,uCAAuC,8YAA8Y,6BAA6B,mgFAAmgF,SAAS,gPAAgP,YAAY,gUAAgU,oCAAoC,4GAA4G,6CAA6C,gEAAgE,2fAA2f,okC;;;;;;;;;;;;;;;;;;;;;;;ACAjqM,UAAU;AACV,oGAA6G;AAC7G,WAAW;AACX,+HAA0D;AAC1D,uHAAkF;AAClF,OAAO;AACP,4GAA4F;AAC5F,mFAAsE;AAEtE,OAAO;AACP,kGAAoC;AAGpC,WAAW;AACX,6GAAiF;AACjF,SAAS;AACT,iGAAmG;AAEnG,6GAAkE;AAElE,aAAa;AACb,6LAAkF;AAElF,gCAAgC;AAChC,+CAA+C;AAC/C,kEAAkE;AAClE,2DAA2D;AAC3D,0DAA0D;AAC1D,mEAAmE;AACnE,8CAA8C;AAM9C;IAeC;;;;;;;OAOG;IACH,4BACS,KAAsB,EACvB,MAAiB,EACjB,QAAqB,EACpB,kBAAsC;QAHtC,UAAK,GAAL,KAAK,CAAiB;QACvB,WAAM,GAAN,MAAM,CAAW;QACjB,aAAQ,GAAR,QAAQ,CAAa;QACpB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAxB/C,qBAAgB,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAKxD,YAAY;QACZ,cAAS,GAAG,IAAI,4BAAc,CAAO,IAAI,EAAE,EAAE,CAAC,CAAC;QAC/C,gBAAW,GAAW,EAAE,CAAC;QAEzB,gBAAgB;QACR,kBAAa,GAAmB,EAAE,CAAC;IAcO,CAAC;IAEnD;;OAEG;IAEH;;OAEG;IACH,qCAAQ,GAAR;QAAA,iBA4CC;QA3CA,oEAAoE;QACpE,IAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAM,QAAC,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC9F,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE1C;;;WAGG;QACH,IAAM,sBAAsB,GAAG,YAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CACnF,eAAG,CAAC;YACH,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CACF;aACA,SAAS,EAAE,CAAC;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAEhD,kCAAkC;QAClC,IAAM,kBAAkB,GAAG,gBAAS,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,IAAI;QACjF,2CAA2C;QAC3C,wBAAY,CAAC,GAAG,CAAC,EAAE,+MAA+M;QAClO,gCAAoB,EAAE,EAAE,gDAAgD;QACxE,eAAG,CAAC;YACH,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CACF;aACA,SAAS,EAAE,CAAC;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAE5C,kBAAkB;QAClB,IAAI,CAAC,UAAU,GAAG,IAAI,sBAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,IAAM,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAC9D,gBAAI,CAAC,CAAC,CAAC,EACP,gCAAoB,EAAE,CACtB,CAAC,SAAS,CAAC,aAAG;YACd,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAE9C,aAAa;QACb,SAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,gBAAI,CAAC,CAAC,CAAC,EAAE,iBAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YAClD,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,wCAAW,GAAX;QACC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAE,IAAI,SAAE,CAAC,WAAW,EAAE,EAAhB,CAAgB,CAAC,CAAC;IACpD,CAAC;IAED;;OAEG;IACH,0CAAa,GAAb;QACC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAM,WAAW,GAAG,IAAI,uBAAgB,CACvC,IAAI,CAAC,mBAAmB,EAAE,EAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,EACnB,IAAI,CAAC,IAAI,CAAC,MAAM,EAChB,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,CACvB,CAAC;QACF,2BAA2B;QAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yBAAkB,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED;;OAEG;IACH,gDAAmB,GAAnB;QACC,IAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,IAAM,UAAU,GAAW,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC;QAChE,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC;QAC1B,OAAO,MAAM,CAAC;IACf,CAAC;IAED,cAAc;IACd;;;;OAIG;IACH,uCAAU,GAAV,UAAW,KAAW;QAAtB,iBAgBC;QAfA,IAAM,MAAM,GAAW,WAAW,CAAC;QACnC,IAAM,YAAY,GAAW,+CAA+C,CAAC;QAC7E,IAAM,eAAe,GAAW,qBAAqB,CAAC;QACtD,IAAM,cAAc,GAAG,uBAAuB,CAAC;QAE/C,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QAC/F,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YACpC,IAAI,CAAC,GAAG,EAAE;gBACT,OAAO;aACP;YAED,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAW,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;YACtD,KAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,cAAc,EAAE,kBAAW,CAAC,MAAM,CAAC,CAAC;YACnF,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;IACZ;;OAEG;IACH,uCAAU,GAAV;QACC,IAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAI;YACnC,QAAQ,CAAC,IAAI,CAAC;gBACb,IAAI,EAAE,KAAG,IAAI,CAAC,KAAO;gBACrB,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;aAEtB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC;IAED;;OAEG;IACH,oCAAO,GAAP;QACC,IAAM,OAAO,GAAG,IAAI,WAAI,EAAE,CAAC;QAC3B,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,0BAA0B;QAC3C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACxB,CAAC;IAED;;;;OAIG;IACH,qCAAQ,GAAR,UAAS,IAAU;QAAnB,iBAYC;QAXA,IAAM,YAAY,GAAG,mCAAmC,CAAC;QACzD,IAAM,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,kBAAW,CAAC,MAAM,CAAC,CAAC,CAAC,kBAAW,CAAC,MAAM,CAAC;QACvE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oDAAuB,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3F,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YACpC,IAAI,CAAC,GAAG,EAAE;gBACT,OAAO;aACP;YAED,KAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,YAAY,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9F,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,0CAAa,GAAb;QACC,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACxC,OAAO,WAAW,KAAK,OAAO,CAAC;IAChC,CAAC;IAED;;OAEG;IACH,yCAAY,GAAZ;QAAA,iBAMC;QALA,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YAC/D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACvB;aAAM;YACN,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;SAC5D;IACF,CAAC;IAtMwB;QAAxB,gBAAS,CAAC,uBAAY,CAAC;kCAAY,uBAAY;yDAAC;IAC7B;QAAnB,gBAAS,CAAC,OAAO,CAAC;kCAAO,kBAAO;oDAAC;IAER;QAAzB,gBAAS,CAAC,aAAa,CAAC;kCAAc,iBAAU;2DAAC;IAPtC,kBAAkB;QAL9B,gBAAS,CAAC;YACV,QAAQ,EAAE,eAAe;YACzB,oJAA0C;YAC1C,eAAe,EAAE,8BAAuB,CAAC,MAAM;SAC/C,CAAC;yCAyBe,aAAK;YACL,oBAAS;YACP,sBAAW;YACA,yBAAkB;OA3BnC,kBAAkB,CA2M9B;IAAD,yBAAC;CAAA;AA3MY,gDAAkB;;;;;;;;;;;;;;;;;;;;;;;;ACnC/B,oGAA2C;AAC3C,6GAA+D;AAE/D,mFAA8C;AAC9C,4GAAmD;AAMnD;IAKE,iCAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,aAAa;QACb,2DAA2D;QAC3D,WAAM,GAAG,uBAAuB;QAGhC;;mDAE2C;QAE3C,eAAe;QACf,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,kBAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH;IAXuC,CAAC;IAgB1C,uDAAuD;IACvD,4CAAU,GAAV;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;aACxD,IAAI,CACH,iBAAK,CAAC,CAAC,CAAC,EACR,sBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAE7B;IACH,CAAC;IACD,yCAAO,GAAP,UAAQ,EAAE;QACR,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;QACf,OAAO,EAAE;IACX,CAAC;IACD,4CAAU,GAAV,UAAW,OAAY;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAChE,CAAC;IACD,iDAAiD;IACjD,8CAAY,GAAZ,UAAa,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,MAAM,GAAG,aAAa,GAAG,EAAE,CAAC;aAC9D,IAAI,CACH,iBAAK,CAAC,CAAC,CAAC,EACR,sBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B;IACH,CAAC;IAED,mDAAmD;IACnD,iDAAe,GAAf,UAAgB,OAAO;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,MAAM,GAAG,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACpG,IAAI,CACH,iBAAK,CAAC,CAAC,CAAC,EACR,sBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B;IACH,CAAC;IAED,kDAAkD;IAClD,+CAAa,GAAb,UAAc,EAAE,EAAE,OAAO;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,MAAM,GAAG,aAAa,GAAG,EAAE,EAAG,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC;aAC1F,IAAI,CACH,iBAAK,CAAC,CAAC,CAAC,EACR,sBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B;IACH,CAAC;IAED,qDAAqD;IACrD,kDAAgB,GAAhB,UAAiB,EAAE;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,IAAI,CAAC,MAAM,GAAG,aAAa,GAAG,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC;aACnF,IAAI,CACH,iBAAK,CAAC,CAAC,CAAC,EACR,sBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B;IACH,CAAC;IAED,kBAAkB;IAClB,6CAAW,GAAX,UAAY,KAAkE;QAC3E,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAG,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACpC,wBAAwB;YACxB,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;SACpC;aAAM;YACL,wBAAwB;YACxB,YAAY,GAAG,iBAAe,KAAK,CAAC,MAAM,mBAAc,KAAK,CAAC,OAAS,CAAC;SACzE;QACD,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC3B,OAAO,iBAAU,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IArFY,uBAAuB;QAJnC,iBAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAO0B,iBAAU;OALzB,uBAAuB,CAsKnC;IAAD,8BAAC;CAAA;AAtKY,0DAAuB;;;;;;;;;;;;ACVpC,iL;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAU;AACV,oGAAsF;AACtF,4GAAyC;AAGzC,OAAO;AACP,kGAA4C;AAM5C,IAAM,0BAA0B,GAAW,CAAC,CAAC;AAM7C;IAKC;;;;;OAKG;IACH,iCAAoB,KAAsB,EAAU,MAAc;QAA9C,UAAK,GAAL,KAAK,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAClE,CAAC;IAED;;OAEG;IAEH;;OAEG;IACH,0CAAQ,GAAR;QACC,iFAAiF;QACjF,yDAAyD;QACzD,gDAAgD;QAChD,0BAA0B;QAC1B,kFAAkF;QAClF,2CAA2C;QAC3C,iBAAiB;QACjB,+CAA+C;QAC/C,OAAO;QACP,QAAQ;QACR,KAAK;QACL,MAAM;IACP,CAAC;IAlCW,uBAAuB;QALnC,gBAAS,CAAC;YACV,QAAQ,EAAE,oBAAoB;YAC9B,6IAA+C;YAC/C,eAAe,EAAE,8BAAuB,CAAC,MAAM;SAC/C,CAAC;yCAY0B,aAAK,EAA4B,eAAM;OAXtD,uBAAuB,CAmCnC;IAAD,8BAAC;CAAA;AAnCY,0DAAuB;;;;;;;;;;;;;;;;;;;;;AClBpC,UAAU;AACV,oGAAyC;AACzC,4GAA+C;AAC/C,4GAAuD;AACvD,wGAAkE;AAClE,6GAA2E;AAC3E,OAAO;AACP,kGAA0C;AAC1C,0GAA8C;AAC9C,YAAY;AACZ,8HAAsD;AACtD,iIAAgE;AAChE,WAAW;AACX,uGAAoH;AACpH,SAAS;AACT,sHAA0E;AAC1E,aAAa;AACb,+JAAsE;AACtE,kLAA6E;AAC7E,6KAA0E;AAC1E,kLAA6E;AAC7E,kMAAuF;AACvF,6MAA4F;AAC5F,uNAAkG;AAClG,+KAA2E;AAC3E,uNAAkG;AAElG,WAAW;AACX,uHAuB2B;AAC3B,2FAG4B;AAC5B,8MAA6F;AAC7F,qLAAkG;AAElG,IAAM,MAAM,GAAW;IACtB;QACC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAuB;QAClC,QAAQ,EAAE;YACT;gBACC,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,OAAO;gBACnB,SAAS,EAAE,MAAM;aACjB;YACD;gBACC,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,yCAAkB;aAC7B;YACD;gBACC,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,iDAAsB;aACjC;YACD;gBACC,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,yCAAkB;aAC7B;YACD;gBACC,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,yCAAkB;aAC7B;YACD;gBACC,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,uCAAiB;aAC5B;YACD;gBACC,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,uCAAiB;aAC5B;YACD;gBACC,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,uCAAiB;aAC5B;YACD;gBACC,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,uCAAiB;aAC5B;SACD;KACD;CACD,CAAC;AAyEF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAvEhC,eAAQ,CAAC;YACT,OAAO,EAAE;gBACR,qBAAY;gBACZ,uBAAgB;gBAChB,gCAAc;gBACd,qBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,mBAAW,CAAC,UAAU,CAAC,OAAO,EAAE,mBAAY,CAAC;gBACvC,uBAAa,CAAC,UAAU,CAAC,CAAC,kBAAW,CAAC,CAAC;gBAC7C,mBAAW;gBACX,2BAAmB;gBACnB,sBAAe,CAAC,QAAQ,EAAE;gBAC1B,0BAAe;gBACf,wBAAa;gBACb,0BAAe;gBACT,yBAAc;gBACpB,yBAAc;gBACd,gCAAqB;gBACrB,yBAAc;gBACd,wBAAa;gBACb,8BAAmB;gBACnB,+BAAoB;gBACpB,8BAAmB;gBACnB,wBAAa;gBACb,6BAAkB;gBAClB,wBAAa;gBACb,4BAAiB;gBACjB,mCAAwB;gBACxB,4BAAiB;gBACjB,6BAAkB;gBAClB,wBAAa;gBACb,2BAAgB;gBAChB,0BAAe;aACf;YACD,SAAS,EAAE;gBACV,uBAAgB;gBAChB;oBACO,OAAO,EAAE,wBAAiB;oBACzB,QAAQ,EAAE,uBAAgB;oBACjC,KAAK,EAAE,IAAI;iBACX;gBACD;oBACC,OAAO,EAAE,qCAA0B;oBACnC,QAAQ,EAAE;wBACT,WAAW,EAAE,IAAI;wBACjB,UAAU,EAAE,kCAAkC;wBAC9C,MAAM,EAAE,MAAM;wBACd,KAAK,EAAE,OAAO;qBACd;iBACD;gBACD,uBAAgB;gBAChB,wBAAiB;gBACjB,yBAAkB;gBAClB,2CAAuB;aACvB;YACD,eAAe,EAAE;gBAChB,kCAA2B;gBAC3B,oDAAuB;aACvB;YACD,YAAY,EAAE;gBACb,mDAAuB;gBACvB,yCAAkB;gBAClB,uCAAiB;gBACjB,yCAAkB;gBAClB,iDAAsB;gBACtB,oDAAuB;gBACvB,kDAAsB;gBACtB,mDAAuB;gBACvB,oCAAgB;gBAChB,mDAAuB;aACvB;SACD,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAvB,oDAAoB;;;;;;;;;;;;AChLjC,s7E;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAU;AACV,oGAAkF;AAClF,wGAAoE;AACpE,OAAO;AACP,mFAAkD;AAClD,OAAO;AACP,kGAAoC;AACpC,4GAAyE;AACzE,OAAO;AACP,oGAAmE;AAGnE,SAAS;AACT,gHAAuE;AAOvE;IAOC;;;;;;;OAOG;IACH,0BAAoB,EAAe,EAC1B,IAAiB,EACjB,KAAsB,EACtB,kBAAsC;QAH3B,OAAE,GAAF,EAAE,CAAa;QAC1B,SAAI,GAAJ,IAAI,CAAa;QACjB,UAAK,GAAL,KAAK,CAAiB;QACtB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAd/C,kBAAa,GAAY,KAAK,CAAC;IAcmB,CAAC;IAEnD;;OAEG;IAEH;;OAEG;IACH,mCAAQ,GAAR;QAAA,iBAkBC;QAjBA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;YAC/B,IAAM,UAAU,GAAG,IAAI,cAAO,EAAE,CAAC;YACjC,UAAU,CAAC,KAAK,EAAE,CAAC;YACnB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,YAAY;aAC3B,IAAI;QACJ,2CAA2C;QAC3C,wBAAY,CAAC,GAAG,CAAC,EAAE,+MAA+M;QAClO,gCAAoB,EAAE,EAAE,gDAAgD;QACxE,eAAG,CAAC;YACH,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CACF;aACA,SAAS,EAAE,CAAC;IACf,CAAC;IAED;;OAEG;IACH,qCAAU,GAAV;QACC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,WAAW,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACzE,IAAI,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC3D,KAAK,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC7D,QAAQ,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,EAAE,kBAAU,CAAC,QAAQ,CAAC;SACnE,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,wCAAa,GAAb;QACC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC3C,iBAAiB;QACjB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,qBAAW;gBACxC,eAAQ,CAAC,WAAW,CAAC,CAAC,aAAa,EAAE;YAArC,CAAqC,CACrC,CAAC;YACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,OAAO;SACP;QAED,IAAM,UAAU,GAAG,IAAI,cAAO,EAAE,CAAC;QACjC,UAAU,CAAC,KAAK,EAAE,CAAC;QACnB,UAAU,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QACvD,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QACzC,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACjD,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;;OAIG;IACH,uCAAY,GAAZ,UAAa,MAAM;QAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC5B,CAAC;IAxFQ;QAAR,YAAK,EAAE;kCAAiB,sBAAe;4DAAU;IAHtC,gBAAgB;QAL5B,gBAAS,CAAC;YACV,QAAQ,EAAE,YAAY;YACtB,iJAAuC;YACvC,eAAe,EAAE,8BAAuB,CAAC,MAAM;SAC/C,CAAC;yCAgBuB,mBAAW;YACpB,kBAAW;YACV,aAAK;YACQ,yBAAkB;OAlBnC,gBAAgB,CA4F5B;IAAD,uBAAC;CAAA;AA5FY,4CAAgB;;;;;;;;;;;;ACpB7B,ykE;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAU;AACV,oGAAkF;AAClF,wGAA0E;AAE1E,OAAO;AACP,mFAAuC;AACvC,OAAO;AACP,kGAAoC;AAEpC,OAAO;AACP,qGAA8E;AAG9E,SAAS;AACT,gHAAoF;AAEpF;IAAA;IAeA,CAAC;IAdA;;;;OAIG;IACK,gCAAa,GAApB,UAAqB,EAAmB;QACtC,IAAM,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,4BAA4B;QACvE,IAAM,eAAe,GAAG,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,4BAA4B;QACrF,IAAI,QAAQ,KAAK,eAAe,EAAE;YACnC,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAE,EAAC,aAAa,EAAE,IAAI,EAAC,CAAE,CAAC;SAC3D;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IACH,yBAAC;AAAD,CAAC;AAfY,gDAAkB;AAsB/B;IAQC;;;;;;;OAOG;IACH,iCAAoB,EAAe,EAAU,IAAiB,EAAU,KAAsB;IAC7F,iCAAiC;IACzB,kBAAsC;QAF3B,OAAE,GAAF,EAAE,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,UAAK,GAAL,KAAK,CAAiB;QAErF,uBAAkB,GAAlB,kBAAkB,CAAoB;QAftC,mBAAc,GAAG,IAAI,sBAAe,CAAU,KAAK,CAAC,CAAC;QAC9D,kBAAa,GAAY,KAAK,CAAC;IAe/B,CAAC;IAED;;OAEG;IAEH;;OAEG;IACH,0CAAQ,GAAR;QACC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,0CAAQ,GAAR;QAAA,iBAKC;QAJA,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/C,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,KAAI,CAAC,UAAU,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,4CAAU,GAAV;QACC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnC,eAAe,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SAC1C,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,uCAAK,GAAL;QACC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;QAC1C,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,EAAE,CAAC;IACpD,CAAC;IAED;;OAEG;IACH,0CAAQ,GAAR;QACC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAClD,iBAAiB;QACjB,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE;YACpC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,qBAAW;gBACxC,eAAQ,CAAC,WAAW,CAAC,CAAC,aAAa,EAAE;YAArC,CAAqC,CACrC,CAAC;YACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEhC,OAAO;SACP;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAChD,IAAM,WAAW,GAAiB;YACjC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,EAAE,IAAI,CAAC,IAAI;SAClB,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAW,CAAC;YACnC,WAAW,EAAE,WAAW;YACxB,IAAI,EAAE,IAAI,CAAC,IAAI;SACf,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,IAAM,OAAO,GAAG,8CAA8C,CAAC;QAC/D,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,OAAO,EAAE,kBAAW,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC/F,IAAI,CAAC,KAAK,EAAE,CAAC;IACd,CAAC;IAED;;;;OAIG;IACH,8CAAY,GAAZ,UAAa,MAAM;QAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC5B,CAAC;IAxGQ;QAAR,YAAK,EAAE;;2DAAgB;IACf;QAAR,YAAK,EAAE;;mEAAsD;IAHlD,uBAAuB;QALnC,gBAAS,CAAC;YACV,QAAQ,EAAE,oBAAoB;YAC9B,yKAA+C;SAE/C,CAAC;yCAiBuB,mBAAW,EAAgB,kBAAW,EAAiB,aAAK;YAEvD,yBAAkB;OAlBnC,uBAAuB,CA2GnC;IAAD,8BAAC;CAAA;AA3GY,0DAAuB;;;;;;;;;;;;ACtCpC,inE;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAU;AACV,oGAAkF;AAClF,wGAAoE;AACpE,kGAAoC;AACpC,OAAO;AACP,mFAAuC;AACvC,4GAAyE;AAGzE,OAAO;AACP,oGAA0E;AAC1E,OAAO;AACP,gHAAuE;AAQvE;IAQC;;;;;;;OAOG;IACH,iCAAoB,EAAe,EAC1B,IAAiB,EACjB,KAAsB,EACtB,kBAAsC;QAH3B,OAAE,GAAF,EAAE,CAAa;QAC1B,SAAI,GAAJ,IAAI,CAAa;QACjB,UAAK,GAAL,KAAK,CAAiB;QACtB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAlB/C,oBAAoB;QACpB,gBAAgB;QACP,mBAAc,GAAG,IAAI,sBAAe,CAAU,KAAK,CAAC,CAAC;QAE9D,kBAAa,GAAY,KAAK,CAAC;IAcmB,CAAC;IAEnD;;OAEG;IAEH;;OAEG;IACH,0CAAQ,GAAR;QAAA,iBAkBC;QAjBA,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE;YACtC,IAAM,iBAAiB,GAAG,IAAI,qBAAc,EAAE,CAAC;YAC/C,iBAAiB,CAAC,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SACnD;QAED,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,kBAAkB,CAAC,YAAY;aAClC,IAAI;QACJ,2CAA2C;QAC3C,wBAAY,CAAC,GAAG,CAAC,EAAE,+MAA+M;QAClO,gCAAoB,EAAE,EAAE,gDAAgD;QACxE,eAAG,CAAC;YACH,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAC7B,CAAC,CAAC,CACF;aACA,SAAS,EAAE,CAAC;IACf,CAAC;IAED,cAAc;IACd,4CAAU,GAAV;QACC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvC,QAAQ,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ,CAAC;YACrD,QAAQ,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ,CAAC;YACrD,OAAO,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC;YACnD,SAAS,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,SAAS,CAAC;SACvD,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,sDAAoB,GAApB;QACC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAClD,iBAAiB;QACjB,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE;YACpC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,qBAAW;gBACxC,eAAQ,CAAC,WAAW,CAAC,CAAC,aAAa,EAAE;YAArC,CAAqC,CACrC,CAAC;YACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEhC,OAAO;SACP;QAED,IAAM,iBAAiB,GAAG,IAAI,qBAAc,EAAE,CAAC;QAC/C,iBAAiB,CAAC,KAAK,EAAE,CAAC;QAC1B,iBAAiB,CAAC,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACxD,iBAAiB,CAAC,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACxD,iBAAiB,CAAC,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACtD,iBAAiB,CAAC,SAAS,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACH,8CAAY,GAAZ,UAAa,MAAM;QAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC5B,CAAC;IA1FQ;QAAR,YAAK,EAAE;;mEAAsD;IACrD;QAAR,YAAK,EAAE;kCAAwB,sBAAe;0EAAiB;IAJpD,uBAAuB;QALnC,gBAAS,CAAC;YACV,QAAQ,EAAE,oBAAoB;YAC9B,yKAA+C;YAC/C,eAAe,EAAE,8BAAuB,CAAC,MAAM;SAC/C,CAAC;yCAiBuB,mBAAW;YACpB,kBAAW;YACV,aAAK;YACQ,yBAAkB;OAnBnC,uBAAuB,CA8FnC;IAAD,8BAAC;CAAA;AA9FY,0DAAuB;;;;;;;;;;;;ACpBpC,kYAAkY,WAAW,KAAK,YAAY,wlCAAwlC,eAAe,kY;;;;;;;;;;;;;;;;;;;;;;;ACArgD,UAAU;AACV,oGAAyD;AACzD,OAAO;AACP,mFAAmD;AACnD,OAAO;AACP,kGAA4C;AAC5C,SAAS;AACT,oFAA4C;AAG5C,OAAO;AACP,oGAAmE;AAMnE;IAaC;;;;OAIG;IACH,gCAAoB,KAAsB;QAAtB,UAAK,GAAL,KAAK,CAAiB;QAjB1C,oBAAoB;QACpB,gBAAgB;QACP,mBAAc,GAAG,IAAI,sBAAe,CAAU,KAAK,CAAC,CAAC;QAK9D,aAAQ,GAAW,EAAE,CAAC;QACtB,oBAAe,GAAW,EAAE,CAAC;QAC7B,kBAAa,GAAW,EAAE,CAAC;IAQkB,CAAC;IAE9C;;OAEG;IAEH;;OAEG;IACH,yCAAQ,GAAR;QAAA,iBAmBC;QAlBA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAM,CAAC,qBAAc,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,GAAW;YACxC,aAAI,CAAC,GAAG,EAAE,UAAC,KAAW;gBACrB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,aAAI,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,UAAC,MAAc;gBAC5C,IAAM,IAAI,GAAG,aAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,UAAC,KAAW;oBAC5C,OAAO,KAAK,CAAC,EAAE,KAAK,MAAM,CAAC;gBAC5B,CAAC,CAAC,CAAC;gBAEH,IAAI,IAAI,EAAE;oBACT,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC9B,eAAM,CAAC,KAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;iBACnC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,2CAAU,GAAV;QAAA,iBAgBC;QAdA,IAAI,IAAI,CAAC,eAAe,KAAK,CAAC,EAAE;YAC/B,OAAO;SACP;QAED,IAAM,IAAI,GAAG,aAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,KAAW;YAC5C,OAAO,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,eAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,WAAW,EAAE,CAAC;SACnB;IACF,CAAC;IAED;;;;OAIG;IACH,6CAAY,GAAZ,UAAa,IAAU;QACtB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,eAAM,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAED;;OAEG;IACH,4CAAW,GAAX;QACC,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,aAAI,CAAC,IAAI,CAAC,aAAa,EAAE,cAAI,IAAI,aAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAApB,CAAoB,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IArFQ;QAAR,YAAK,EAAE;;kEAAsD;IACrD;QAAR,YAAK,EAAE;kCAAe,sBAAe;gEAAW;IAJrC,sBAAsB;QAJlC,gBAAS,CAAC;YACV,QAAQ,EAAE,oBAAoB;YAC9B,oKAA+C;SAC/C,CAAC;yCAmB0B,aAAK;OAlBpB,sBAAsB,CAyFlC;IAAD,6BAAC;CAAA;AAzFY,wDAAsB;;;;;;;;;;;;ACjBnC,2dAA2d,gSAAgS,slN;;;;;;;;;;;;;;;;;;;;;;;ACA3vB,UAAU;AACV,oGAA6D;AAC7D,4GAAyD;AACzD,wGAAoE;AACpE,OAAO;AACP,mFAAqE;AACrE,OAAO;AACP,kGAA4C;AAG5C,SAAS;AACT,mHAAyF;AACzF,6GAAiF;AACjF,sBAAsB;AACtB,iGAUkC;AAMlC;IAeC;;;;;;;;;;OAUG;IACH,2BAAoB,cAA8B,EACzC,MAAc,EACd,MAAmB,EACnB,gBAAkC,EAClC,kBAAsC,EACtC,KAAsB,EACtB,mBAAwC;QAN7B,mBAAc,GAAd,cAAc,CAAgB;QACzC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAa;QACnB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAiB;QACtB,wBAAmB,GAAnB,mBAAmB,CAAqB;QA3BjD,gBAAW,GAAW,CAAC,CAAC;QAExB,iBAAY,GAAG,IAAI,sBAAe,CAAW,EAAE,CAAC,CAAC;QACjD,mBAAc,GAAG,IAAI,sBAAe,CAAU,IAAI,cAAO,EAAE,CAAC,CAAC;QAC7D,2BAAsB,GAAG,IAAI,sBAAe,CAAiB,IAAI,qBAAc,EAAE,CAAC,CAAC;QAEnF,kBAAa,GAAY,KAAK,CAAC;QAC/B,qBAAqB;QACb,kBAAa,GAAmB,EAAE,CAAC;IAmBU,CAAC;IAEtD;;OAEG;IAEH;;OAEG;IACH,oCAAQ,GAAR;QAAA,iBA2BC;QA1BA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAM,CAAC,+BAAwB,CAAC,CAAC,CAAC;QAElE,IAAM,iBAAiB,GAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACrE,IAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE;gBACjB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAM,CAAC,qBAAc,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;oBACxD,IAAI,GAAG,EAAE;wBACR,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;wBAChB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACxC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC5C,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAC3D,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;wBAC5C,KAAI,CAAC,QAAQ,EAAE,CAAC;qBAChB;gBACF,CAAC,CAAC,CAAC;aACH;iBAAM;gBACN,KAAI,CAAC,IAAI,GAAG,IAAI,WAAI,EAAE,CAAC;gBACvB,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAClB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC5C,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC3D,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;gBAC5C,KAAI,CAAC,QAAQ,EAAE,CAAC;aAChB;QACF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC5C,CAAC;IAED,uCAAW,GAAX;QACC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAE,IAAI,SAAE,CAAC,WAAW,EAAE,EAAhB,CAAgB,CAAC,CAAC;IACpD,CAAC;IAED;;OAEG;IACH,oCAAQ,GAAR;QACC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC9C,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;gBACpC,EAAE,KAAK,EAAE,iBAAiB,EAAE,IAAI,EAAE,iBAAiB,EAAE;gBACrD,EAAE,KAAK,EAAE,OAAO,EAAG,IAAI,EAAE,uBAAuB,EAAE;gBAClD,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,2BAA2B,EAAE;aAC3D,CAAC,CAAC;YACH,OAAO;SACP;QACD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;YACpC,EAAE,KAAK,EAAE,iBAAiB,EAAE,IAAI,EAAE,iBAAiB,EAAE;YACrD,EAAE,KAAK,EAAE,OAAO,EAAG,IAAI,EAAE,uBAAuB,EAAE;YAClD,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,4BAA4B,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE;SAC7F,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,sCAAU,GAAV;QACC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnD,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnD,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,kBAAU,CAAC,KAAK,CAAC;YAC1C,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACxB,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;YACpC,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;SAClC,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,wCAAY,GAAZ;QACC,IAAM,GAAG,GAAM,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,2BAAwB,CAAC;QACtF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IACrE,CAAC;IAED;;;;;OAKG;IACH,uCAAW,GAAX,UAAY,KAAsB,EAAE,EAAM;QAA9B,qCAAsB;QAAE,2BAAM;QACzC,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,KAAK,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;YACjE,OAAO;SACP;QAED,GAAG,GAAM,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,oCAA+B,EAAI,CAAC;QAC3F,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IACrE,CAAC;IAED;;OAEG;IACH,iCAAK,GAAL;QACC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;QAChC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC;IAC9C,CAAC;IAED;;;;OAIG;IACH,oCAAQ,GAAR,UAAS,QAAyB;QAAzB,2CAAyB;QACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACxC,iBAAiB;QACjB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YAC1B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,qBAAW;gBACxC,eAAQ,CAAC,WAAW,CAAC,CAAC,aAAa,EAAE;YAArC,CAAqC,CACrC,CAAC;YAEF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,OAAO;SACP;QAED,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAEtC,IAAI,UAAU,CAAC,EAAE,GAAG,CAAC,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YACtC,OAAO;SACP;QAED,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACpC,CAAC;IAED;;OAEG;IACH,uCAAW,GAAX;QACC,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACxC,IAAM,KAAK,GAAG,IAAI,WAAI,EAAE,CAAC;QACzB,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QACtC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QAC1C,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;QACzD,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1C,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAC5C,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QAC1B,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACxB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAC5C,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACtC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAC5C,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAChD,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACtC,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAClD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QACpC,OAAO,KAAK,CAAC;IACd,CAAC;IAED;;;;;OAKG;IACH,mCAAO,GAAP,UAAQ,KAAW,EAAE,QAAyB;QAA9C,iBAcC;QAdoB,2CAAyB;QAC7C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0BAAmB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9D,IAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAM,CAAC,8BAAuB,CAAC,CAAC,CAAC,SAAS,CAAC,eAAK;YACvF,IAAM,OAAO,GAAG,uCAAuC,CAAC;YACxD,KAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,OAAO,EAAE,kBAAW,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9F,IAAI,KAAK,EAAE;gBACV,IAAI,QAAQ,EAAE;oBACb,KAAI,CAAC,YAAY,EAAE,CAAC;iBACpB;qBAAM;oBACN,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;iBAC9B;aACD;QACF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACH,sCAAU,GAAV,UAAW,KAAW,EAAE,QAAyB;QAChD,cAAc;QACd,wCAAwC;QAFjB,2CAAyB;QAIhD,IAAM,WAAW,GAAiB;YACjC,EAAE,EAAE,KAAK,CAAC,EAAE;YACZ,OAAO,EAAE,KAAK;SACd,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAW,CAAE,EAAE,WAAW,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACjF,IAAM,OAAO,GAAG,mCAAmC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,OAAO,EAAE,kBAAW,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC9F,IAAI,QAAQ,EAAE;YACb,IAAI,CAAC,YAAY,EAAE,CAAC;SACpB;aAAM;YACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACxB;IACF,CAAC;IAED;;OAEG;IACH,6CAAiB,GAAjB;QACC,IAAI,MAAM,GAAG,aAAa,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YAChC,OAAO,MAAM,CAAC;SACd;QAED,MAAM,GAAG,iBAAe,IAAI,CAAC,IAAI,CAAC,QAAU,CAAC;QAC7C,OAAO,MAAM,CAAC;IACf,CAAC;IAED;;;;OAIG;IACH,wCAAY,GAAZ,UAAa,MAAM;QAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC5B,CAAC;IA3QW,iBAAiB;QAJ7B,gBAAS,CAAC;YACV,QAAQ,EAAE,cAAc;YACxB,iJAAyC;SACzC,CAAC;yCA2BmC,uBAAc;YACjC,eAAM;YACN,mBAAW;YACD,yBAAgB;YACd,yBAAkB;YAC/B,aAAK;YACS,4BAAmB;OAhCrC,iBAAiB,CA4Q7B;IAAD,wBAAC;CAAA;AA5QY,8CAAiB;;;;;;;;;;;;AC9B9B,20DAA20D,uCAAuC,oYAAoY,6BAA6B,+5EAA+5E,SAAS,4OAA4O,eAAe,qVAAqV,YAAY,+PAA+P,eAAe,6OAA6O,yBAAyB,0aAA0a,8XAA8X,ghC;;;;;;;;;;;;;;;;;;;;;;;ACCnlN,UAAU;AACV,oGAAgI;AAChI,4GAAyD;AACzD,WAAW;AACX,+HAA0D;AAC1D,uHAAuE;AACvE,OAAO;AACP,4GAA4F;AAC5F,mFAAsE;AACtE,SAAS;AACT,oFAAoC;AACpC,OAAO;AACP,kGAA4C;AAG5C,WAAW;AACX,6GAAmG;AACnG,SAAS;AACT,iGAQkC;AAClC,mHAAoE;AAEpE,gCAAgC;AAChC,+CAA+C;AAC/C,kEAAkE;AAClE,2DAA2D;AAC3D,0DAA0D;AAC1D,mEAAmE;AACnE,8CAA8C;AAM9C;IAiBC;;;;;;;OAOG;IACH,4BACS,cAA8B,EAC9B,KAAsB,EACtB,MAAc,EACd,kBAAsC,EACtC,gBAAkC,EAClC,GAAsB;QALtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAiB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,QAAG,GAAH,GAAG,CAAmB;QA5B/B,qBAAgB,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QAM1F,YAAY;QACZ,cAAS,GAAG,IAAI,4BAAc,CAAO,IAAI,EAAE,EAAE,CAAC,CAAC;QAC/C,gBAAW,GAAW,EAAE,CAAC;QACzB,aAAQ,GAAW,EAAE,CAAC;QAEtB,gBAAgB;QACR,kBAAa,GAAmB,EAAE,CAAC;IAgBT,CAAC;IAEnC;;OAEG;IAEH;;OAEG;IACH,qCAAQ,GAAR;QAAA,iBAoDC;QAnDA,kBAAkB;QAClB,IAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAM,CAAC,qBAAc,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,QAAQ,GAAG,GAAG,EAAnB,CAAmB,CAAC,CAAC;QACxG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE3C,oEAAoE;QACpE,IAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAM,QAAC,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC9F,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE1C;;;WAGG;QACH,IAAM,sBAAsB,GAAG,YAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CACnF,eAAG,CAAC;YACH,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CACF;aACA,SAAS,EAAE,CAAC;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAGhD,kCAAkC;QAClC,IAAM,kBAAkB,GAAG,gBAAS,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,IAAI;QACjF,2CAA2C;QAC3C,wBAAY,CAAC,GAAG,CAAC,EAAE,+MAA+M;QAClO,gCAAoB,EAAE,EAAE,gDAAgD;QACxE,eAAG,CAAC;YACH,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CACF;aACA,SAAS,EAAE,CAAC;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAE5C,gCAAgC;QAChC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAElD,kBAAkB;QAClB,IAAI,CAAC,UAAU,GAAG,IAAI,sBAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,IAAM,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAC9D,gBAAI,CAAC,CAAC,CAAC,EACP,gCAAoB,EAAE,CACtB,CAAC,SAAS,CAAC,aAAG;YACd,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAE9C,aAAa;QACb,SAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,gBAAI,CAAC,CAAC,CAAC,EAAE,iBAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YAClD,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,wCAAW,GAAX;QACC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAE,IAAI,SAAE,CAAC,WAAW,EAAE,EAAhB,CAAgB,CAAC,CAAC;IACpD,CAAC;IAED;;OAEG;IACH,0CAAa,GAAb;QACC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAM,WAAW,GAAG,IAAI,uBAAgB,CACvC,IAAI,CAAC,mBAAmB,EAAE,EAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,EACnB,IAAI,CAAC,IAAI,CAAC,MAAM,EAChB,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,CACvB,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yBAAkB,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,iBAAiB;IACjB,gDAAmB,GAAnB;QACC,IAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,IAAM,UAAU,GAAW,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC;QAEhE,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC;QAE7B,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC7B,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC;QAC1B,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC7B,OAAO,MAAM,CAAC;IACf,CAAC;IAED,cAAc;IACd;;;;OAIG;IACH,uCAAU,GAAV,UAAW,KAAW;QAAtB,iBAeC;QAdA,IAAM,MAAM,GAAW,aAAa,CAAC;QACrC,IAAM,YAAY,GAAW,+CAA+C,CAAC;QAC7E,IAAM,eAAe,GAAW,qBAAqB,CAAC;QACtD,IAAM,cAAc,GAAG,uBAAuB,CAAC;QAE/C,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QAC/F,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YACpC,IAAI,CAAC,GAAG,EAAE;gBACT,OAAO;aACP;YAED,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAW,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACvD,KAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,cAAc,EAAE,kBAAW,CAAC,MAAM,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,uCAAU,GAAV;QACC,IAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAI;YACnC,QAAQ,CAAC,IAAI,CAAC;gBACb,IAAI,EAAK,IAAI,CAAC,QAAQ,UAAK,IAAI,CAAC,KAAO;gBACvC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;gBACtB,MAAM,EAAE,IAAI,CAAC,QAAQ;aACrB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC;IAED;;OAEG;IACH,0CAAa,GAAb;QACC,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACxC,OAAO,WAAW,KAAK,OAAO,CAAC;IAChC,CAAC;IAED;;OAEG;IACH,yCAAY,GAAZ;QAAA,iBAMC;QALA,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YAC/D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACvB;aAAM;YACN,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;SAC5D;IACF,CAAC;IAED,QAAQ;IACR;;;;OAIG;IACH,4CAAe,GAAf,UAAgB,IAAU;QAA1B,iBASC;QARA,IAAM,MAAM,GAAa,EAAE,CAAC;QAC5B,aAAI,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,MAAc;YAC/B,IAAM,KAAK,GAAG,aAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,UAAC,IAAU,IAAK,WAAI,CAAC,EAAE,KAAK,MAAM,EAAlB,CAAkB,CAAC,CAAC;YACtE,IAAI,KAAK,EAAE;gBACV,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACzB;QACF,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACH,qCAAQ,GAAR,UAAS,EAAE;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IAClF,CAAC;IAhNwB;QAAxB,gBAAS,CAAC,uBAAY,CAAC;kCAAY,uBAAY;yDAAC;IAC7B;QAAnB,gBAAS,CAAC,OAAO,CAAC;kCAAO,kBAAO;oDAAC;IAER;QAAzB,gBAAS,CAAC,aAAa,CAAC;kCAAc,iBAAU;2DAAC;IAPtC,kBAAkB;QAL9B,gBAAS,CAAC;YACV,QAAQ,EAAE,eAAe;YACzB,oJAA0C;YAC1C,eAAe,EAAE,8BAAuB,CAAC,MAAM;SAC/C,CAAC;yCA2BwB,uBAAc;YACvB,aAAK;YACJ,eAAM;YACM,yBAAkB;YACpB,yBAAgB;YAC7B,wBAAiB;OA/BnB,kBAAkB,CAqN9B;IAAD,yBAAC;CAAA;AArNY,gDAAkB","file":"app-views-pages-user-management-user-management-module.js","sourcesContent":["module.exports = \"<kt-portlet>\\r\\n\\t\\t<!-- PORTLET LOADING | Binded to TABLE Datasource -->\\r\\n\\t\\t<!-- See prop => '~/core/_crud/models/data-sources/_base.datasource.ts' (loading$) -->\\r\\n\\t\\t<kt-portlet-header [title]=\\\"'Roles list'\\\" [class]=\\\"'kt-portlet__head--lg'\\\" [viewLoading$]=\\\"dataSource.loading$\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<ng-container ktPortletTools>\\r\\n\\t\\t\\t\\t<button (click)=\\\"addRole()\\\" mat-raised-button matTooltip=\\\"Create new role\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n\\t\\t\\t\\t\\t<span>Nouvelle compagnie</span>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<!-- Buttons (Material Angular) | See off.documenations 'https://material.angular.io/components/button/overview' -->\\r\\n\\t\\t\\t\\t<!-- mat-raised-button | Rectangular contained button w/ elevation  -->\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</kt-portlet-header>\\r\\n\\t\\t<!-- end::Header -->\\r\\n\\t\\r\\n\\t\\t<kt-portlet-body>\\r\\n\\t\\t\\t<!-- start::FILTERS & GROUP ACTIONS -->\\r\\n\\t\\t\\t<div class=\\\"kt-form\\\">\\r\\n\\t\\t\\t\\t<!-- start::FILTERS -->\\r\\n\\t\\t\\t\\t<div class=\\\"kt-form__filtration\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row align-items-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2 kt-margin-bottom-10-mobile\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Search user\\\" #searchInput placeholder=\\\"Search\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Search</strong> in all fields\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- end::FILTERS -->\\r\\n\\t\\r\\n\\t\\t\\t\\t<!-- start::GROUP ACTIONS -->\\r\\n\\t\\t\\t\\t<!-- Group actions list: 'Delete selected' | 'Fetch selected' | 'Update status for selected' -->\\r\\n\\t\\t\\t\\t<!-- Group actions are shared for all LISTS -->\\r\\n\\t\\t\\t\\t<div class=\\\"row align-items-center collapse kt-form__group-actions kt-margin-top-20 kt-margin-bottom-20\\\"\\r\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{'show' : selection.selected.length > 0}\\\"><!-- We show 'Group Actions' div if smth are selected -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-xl-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"kt-form__group kt-form__group--inline\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"kt-form__label kt-form__label-no-wrap\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"kt--font-bold kt-font-danger-\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span translate=\\\"ECOMMERCE.COMMON.SELECTED_RECORDS_COUNT\\\"></span> {{ selection.selected.length }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- selectedCountsTitle => function from codeBehind (roles-list.component.ts file) -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- selectedCountsTitle => just returns title of selected items count -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- for example: Selected records count: 4 -->\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"kt-form__control kt-form__group--inline\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"fetchRoles()\\\" mat-raised-button matTooltip=\\\"Fetch selected roles\\\"  class=\\\"mat-button-mt-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>clear_all</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFetch Selected\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- end::GROUP ACTIONS -->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- end::FILTERS & GROUP ACTIONS -->\\r\\n\\t\\r\\n\\t\\t\\t<!-- MATERIAL TABLE | Binded to datasources -->\\r\\n\\t\\t\\t<!-- See off.documentations 'https://material.angular.io/components/table/overview' -->\\r\\n\\t\\t\\t<div class=\\\"mat-table__wrapper\\\">\\r\\n\\t\\t\\t\\t<mat-table class=\\\"lmat-elevation-z8\\\"\\r\\n\\t\\t\\t\\t\\t#table\\r\\n\\t\\t\\t\\t\\t[dataSource]=\\\"dataSource\\\"\\r\\n\\t\\t\\t\\t\\tmatSort\\r\\n\\t\\t\\t\\t\\t#sort1=\\\"matSort\\\"\\r\\n\\t\\t\\t\\t\\tmatSortActive=\\\"id\\\"\\r\\n\\t\\t\\t\\t\\tmatSortDirection=\\\"asc\\\"\\r\\n\\t\\t\\t\\t\\tmatSortDisableClear>\\r\\n\\t\\t\\t\\t\\t<!-- Checkbox Column -->\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<!-- Table with selection -->\\r\\n\\t\\t\\t\\t\\t<!-- https://run.stackblitz.com/api/angular/v1?file=app%2Ftable-selection-example.ts -->\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"select\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef class=\\\"mat-column-checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-checkbox>\\r\\n\\t\\t\\t\\t\\t\\t</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\" class=\\\"mat-column-checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\" [checked]=\\\"selection.isSelected(row)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-checkbox>\\r\\n\\t\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"id\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!-- ATTRIBUTE mat-sort-header  for sorting | https://material.angular.io/components/sort/overview -->\\r\\n\\t\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let role\\\">{{role.id}}</mat-cell>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Title</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let role\\\">{{role.title}}</mat-cell>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"actions\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef>Actions</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let role\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"{{ role.isCoreRole ? 'View' : 'Edit'}} role\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"editRole(role)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ role.isCoreRole ? 'visibility' : 'create' }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button color=\\\"warn\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Delete role\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"button\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteRole(role)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n\\t\\t\\t\\t</mat-table>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"mat-table__message\\\" *ngIf=\\\"!dataSource.hasItems\\\">No records found</div><!-- Message for empty data  -->\\r\\n\\t\\t\\t\\t<div class=\\\"mat-table__message\\\" *ngIf=\\\"dataSource.isPreloadTextViewed$ | async\\\">Please wait....</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t<!-- start: BOTTOM -->\\r\\n\\t\\t\\t<div class=\\\"mat-table__bottom\\\">\\r\\n\\t\\t\\t\\t<!-- MATERIAL SPINNER | Url: 'https://material.angular.io/components/progress-spinner/overview' -->\\r\\n\\t\\t\\t\\t<mat-spinner [diameter]=\\\"20\\\" *ngIf=\\\"dataSource.loading$ | async\\\"></mat-spinner>\\r\\n\\t\\t\\t\\t<!-- MATERIAL PAGINATOR | Binded to dasources -->\\r\\n\\t\\t\\t\\t<!-- See off.documentations 'https://material.angular.io/components/paginator/overview' -->\\r\\n\\t\\t\\t\\t<mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[3, 5, 10]\\\" [length]=\\\"dataSource.paginatorTotal$ | async\\\" [showFirstLastButtons]=\\\"true\\\"></mat-paginator>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- end: BOTTOM -->\\r\\n\\t\\t</kt-portlet-body>\\r\\n\\t\\t<!-- end::Body -->\\r\\n\\t</kt-portlet>\\r\\n\\t\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-xl-6\\\">\\r\\n\\t\\t\\t  <div class=\\\"row row-full-height\\\">\\r\\n\\t\\t\\t   \\r\\n\\t\\t\\t\\t<div *ngFor=\\\"let companie of companies\\\"class=\\\"col-sm-12 col-md-12 col-lg-4\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<kt-portlet [class]=\\\"'kt-portlet'\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t  <kt-portlet-header>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<ng-container ktPortletTools>\\r\\n\\t\\t\\t\\t\\t\\t<p> {{companie.company_title}}</p>\\r\\n\\t\\t\\t\\t\\t<kt-context-menu2></kt-context-menu2>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t  </kt-portlet-header>\\r\\n\\t\\t\\t\\t  <kt-portlet-body (click)=\\\"modules()\\\">\\r\\n\\t\\t\\t\\t\\t<ul class=\\\"navbar-nav ml-auto\\\">\\r\\n\\t\\t\\t\\t\\t  <li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"kt-widget12__desc\\\" routerLink=\\\"/demo2/kt-mesmodules\\\">{{companie.short_name}}<span class=\\\"sr-only\\\">(current)</span></a>\\r\\n\\t\\t\\t\\t\\t  </li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t<kt-compagnie></kt-compagnie>\\r\\n\\t\\t\\t\\t  </kt-portlet-body>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <div class=\\\"example-button-row\\\" style=\\\"text-align: center\\\">\\r\\n\\t\\t\\t\\t\\t<span (click)=\\\"DeleteCompaniesButton(companie.id)\\\">\\r\\n\\t\\t\\t\\t\\t  <i class=\\\"material-icons\\\">\\r\\n\\t\\t\\t\\t\\t\\tdelete_sweep\\r\\n\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t  Supprimer</span>\\r\\n\\t\\t\\t\\t\\t  <span (click)=\\\"UpdatePopupButton(companie)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"material-icons\\\">\\r\\n\\t\\t\\t\\t\\t\\t  create\\r\\n\\t\\t\\t\\t\\t\\t  </i>\\r\\n\\t\\t\\t\\t\\t\\tModifier</span>\\r\\n\\t\\t\\t\\t\\t\\t<button mat-icon-button color=\\\"warn\\\"\\r\\n\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Delete role\\\"\\r\\n\\t\\t\\t\\t\\t\\ttype=\\\"button\\\"\\r\\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"role.isCoreRole\\\"\\r\\n\\t\\t\\t\\t\\t\\t(click)=\\\"deleteRole(role)\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-icon>delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t  </kt-portlet>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  \\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t</div> \\r\\n\\t\\t\"","// Angular\r\nimport { Component, OnInit, ElementRef, ViewChild, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\n// Material\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatPaginator, MatSort, MatSnackBar, MatDialog } from '@angular/material';\r\n// RXJS\r\nimport { debounceTime, distinctUntilChanged, tap, skip, take, delay } from 'rxjs/operators';\r\nimport { fromEvent, merge, Observable, of, Subscription } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n// NGRX\r\nimport { Store } from '@ngrx/store';\r\n// LODASH\r\nimport _ from 'lodash';\r\n// Services\r\nimport { LayoutUtilsService, MessageType } from '../../../../../core/_base/crud';\r\n// Models\r\nimport { Role, RolesDataSource, RoleDeleted, RolesPageRequested  } from '../../../../../core/auth';\r\nimport { AppState } from '../../../../../core/reducers';\r\nimport { QueryParamsModel } from '../../../../../core/_base/crud';\r\nimport { RoleEditDialogComponent } from '../../roles/role-edit/role-edit.dialog.component';\r\nimport { CompaniesRestApiService } from '../../shared/companies.service';\r\n\r\n// Components\r\n\r\n// Table with EDIT item in MODAL\r\n// ARTICLE for table with sort/filter/paginator\r\n// https://blog.angular-university.io/angular-material-data-table/\r\n// https://v5.material.angular.io/components/table/overview\r\n// https://v5.material.angular.io/components/sort/overview\r\n// https://v5.material.angular.io/components/table/overview#sorting\r\n// https://www.youtube.com/watch?v=NSt9CI3BXv4\r\n@Component({\r\n\tselector: 'kt-roles-list',\r\n\ttemplateUrl: './companies-list.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CompaniesListComponent implements OnInit, OnDestroy {\r\n\t// Table fields\r\n\tcompanies:any=[];\r\n\tdataSource: RolesDataSource;\r\n\tdisplayedColumns = ['select', 'id', 'title', 'actions'];\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild('sort1') sort: MatSort;\r\n\t// Filter fields\r\n\t@ViewChild('searchInput') searchInput: ElementRef;\r\n\t// Selection\r\n\tselection = new SelectionModel<Role>(true, []);\r\n\trolesResult: Role[] = [];\r\n\r\n\t// Subscriptions\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param store: Store<AppState>\r\n\t * @param dialog: MatDialog\r\n\t * @param snackBar: MatSnackBar\r\n\t * @param layoutUtilsService: LayoutUtilsService\r\n\t */\r\n\tconstructor(\r\n\t\tpublic companiesrestApi:CompaniesRestApiService,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tpublic dialog: MatDialog,\r\n\t\tpublic snackBar: MatSnackBar,\r\n\t\tprivate layoutUtilsService: LayoutUtilsService) {}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\t// If the user changes the sort order, reset back to the first page.\r\n\t\tconst sortSubscription = this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n\t\tthis.subscriptions.push(sortSubscription);\r\n\r\n\t\t/* Data load will be triggered in two cases:\r\n\t\t- when a pagination event occurs => this.paginator.page\r\n\t\t- when a sort event occurs => this.sort.sortChange\r\n\t\t**/\r\n\t\tconst paginatorSubscriptions = merge(this.sort.sortChange, this.paginator.page).pipe(\r\n\t\t\ttap(() => {\r\n\t\t\t\tthis.loadRolesList();\r\n\t\t\t})\r\n\t\t)\r\n\t\t.subscribe();\r\n\t\tthis.subscriptions.push(paginatorSubscriptions);\r\n\r\n\t\t// Filtration, bind to searchInput\r\n\t\tconst searchSubscription = fromEvent(this.searchInput.nativeElement, 'keyup').pipe(\r\n\t\t\t// tslint:disable-next-line:max-line-length\r\n\t\t\tdebounceTime(150), // The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator, we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n\t\t\tdistinctUntilChanged(), // This operator will eliminate duplicate values\r\n\t\t\ttap(() => {\r\n\t\t\t\tthis.paginator.pageIndex = 0;\r\n\t\t\t\tthis.loadRolesList();\r\n\t\t\t})\r\n\t\t)\r\n\t\t.subscribe();\r\n\t\tthis.subscriptions.push(searchSubscription);\r\n\r\n\t\t// Init DataSource\r\n\t\tthis.dataSource = new RolesDataSource(this.store);\r\n\t\tconst entitiesSubscription = this.dataSource.entitySubject.pipe(\r\n\t\t\tskip(1),\r\n\t\t\tdistinctUntilChanged()\r\n\t\t).subscribe(res => {\r\n\t\t\tthis.rolesResult = res;\r\n\t\t});\r\n\t\tthis.subscriptions.push(entitiesSubscription);\r\n\r\n\t\t// First load\r\n\t\tof(undefined).pipe(take(1), delay(1000)).subscribe(() => { // Remove this line, just loading imitation\r\n\t\t\tthis.loadRolesList();\r\n\t\t});\r\n\t\tthis.getCompanies()\r\n\t}\r\n\r\n\t/**\r\n\t * On Destroy\r\n\t */\r\n\tngOnDestroy() {\r\n\t\tthis.subscriptions.forEach(el => el.unsubscribe());\r\n\t}\r\n\tgetCompanies() {\r\n\t\treturn this.companiesrestApi.getCompany().subscribe((data: {}) => {\r\n\t\t\tthis.companies = data;\r\n\t\t  })\r\n\r\n\t  }\r\n\t/**\r\n\t * Load Roles List\r\n\t */\r\n\tloadRolesList() {\r\n\t\tthis.selection.clear();\r\n\t\tconst queryParams = new QueryParamsModel(\r\n\t\t\tthis.filterConfiguration(),\r\n\t\t\tthis.sort.direction,\r\n\t\t\tthis.sort.active,\r\n\t\t\tthis.paginator.pageIndex,\r\n\t\t\tthis.paginator.pageSize\r\n\t\t);\r\n\t\t// Call request from server\r\n\t\tthis.store.dispatch(new RolesPageRequested({ page: queryParams }));\r\n\t\tthis.selection.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns object for filter\r\n\t */\r\n\tfilterConfiguration(): any {\r\n\t\tconst filter: any = {};\r\n\t\tconst searchText: string = this.searchInput.nativeElement.value;\r\n\t\tfilter.title = searchText;\r\n\t\treturn filter;\r\n\t}\r\n\r\n\t/** ACTIONS */\r\n\t/**\r\n\t * Delete role\r\n\t *\r\n\t * @param _item: Role\r\n\t */\r\n\tdeleteRole(_item: Role) {\r\n\t\tconst _title: string = 'Nom de compagnie';\r\n\t\tconst _description: string = 'Voulez vous vraiment supprimer ? ';\r\n\t\tconst _waitDesciption: string = 'Suppression en cours...';\r\n\t\tconst _deleteMessage = `La compagnie a été supprimé`;\r\n\r\n\t\tconst dialogRef = this.layoutUtilsService.deleteElement(_title, _description, _waitDesciption);\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.store.dispatch(new RoleDeleted({ id: _item.id}));\r\n\t\t\tthis.layoutUtilsService.showActionNotification(_deleteMessage, MessageType.Delete);\r\n\t\t\tthis.loadRolesList();\r\n\t\t});\r\n\t}\r\n\r\n\t/** Fetch */\r\n\t/**\r\n\t * Fetch selected rows\r\n\t */\r\n\tfetchRoles() {\r\n\t\tconst messages = [];\r\n\t\tthis.selection.selected.forEach(elem => {\r\n\t\t\tmessages.push({\r\n\t\t\t\ttext: `${elem.title}`,\r\n\t\t\t\tid: elem.id.toString(),\r\n\t\t\t\t// status: elem.username\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.layoutUtilsService.fetchElements(messages);\r\n\t}\r\n\r\n\t/**\r\n\t * Add role\r\n\t */\r\n\taddRole() {\r\n\t\tconst newRole = new Role();\r\n\t\tnewRole.clear(); // Set all defaults fields\r\n\t\tthis.editRole(newRole);\r\n\t}\r\n\r\n\t/**\r\n\t * Edit role\r\n\t *\r\n\t * @param role: Role\r\n\t */\r\n\teditRole(role: Role) {\r\n\t\tconst _saveMessage = `Role successfully has been saved.`;\r\n\t\tconst _messageType = role.id ? MessageType.Update : MessageType.Create;\r\n\t\tconst dialogRef = this.dialog.open(RoleEditDialogComponent, { data: { roleId: role.id } });\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.layoutUtilsService.showActionNotification(_saveMessage, _messageType, 10000, true, true);\r\n\t\t\tthis.loadRolesList();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Check all rows are selected\r\n\t */\r\n\tisAllSelected(): boolean {\r\n\t\tconst numSelected = this.selection.selected.length;\r\n\t\tconst numRows = this.rolesResult.length;\r\n\t\treturn numSelected === numRows;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle selection\r\n\t */\r\n\tmasterToggle() {\r\n\t\tif (this.selection.selected.length === this.rolesResult.length) {\r\n\t\t\tthis.selection.clear();\r\n\t\t} else {\r\n\t\t\tthis.rolesResult.forEach(row => this.selection.select(row));\r\n\t\t}\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"kt-portlet\\\" [ngClass]=\\\"{ 'kt-portlet--body-progress' : viewLoading, 'kt-portlet--body-progress-overlay' : loadingAfterSubmit }\\\">\\r\\n    <div class=\\\"kt-portlet__head kt-portlet__head__custom\\\" *ngIf=\\\"role\\\">\\r\\n        <div class=\\\"kt-portlet__head-label\\\">\\r\\n            <h3 class=\\\"kt-portlet__head-title\\\">{{getTitle()}}</h3>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"role\\\">\\r\\n        <div class=\\\"kt-form\\\">\\r\\n            <div class=\\\"kt-portlet__body\\\">\\r\\n\\r\\n                <div class=\\\"kt-portlet__body-progress\\\">\\r\\n                    <mat-spinner [diameter]=\\\"20\\\"></mat-spinner>\\r\\n                </div>\\r\\n\\r\\n                <kt-alert *ngIf=\\\"hasFormErrors\\\" type=\\\"warn\\\" [duration]=\\\"30000\\\" [showCloseButton]=\\\"true\\\" (close)=\\\"onAlertClose($event)\\\">\\r\\n                    Oh snap! Change a few things up and try submitting again.\\r\\n                </kt-alert>\\r\\n\\r\\n                <div class=\\\"form-group kt-form__group row d-block\\\">\\r\\n                    <div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n                        <mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n                            <input matInput \\r\\n                                [disabled]=\\\"role.isCoreRole\\\"\\r\\n                                placeholder=\\\"Enter Title\\\"  \\r\\n                                [(ngModel)]=\\\"role.title\\\" />\\r\\n                            <mat-error>Title is\\r\\n                                <strong>required</strong>\\r\\n                            </mat-error>\\r\\n                            <mat-hint align=\\\"start\\\">Please enter\\r\\n                                <strong>Title</strong>\\r\\n                            </mat-hint>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"kt-separator kt-separator--dashed\\\"></div>\\r\\n                <h6 class=\\\"kt-section__heading\\\">\\r\\n                    Permissions:\\r\\n                </h6>\\r\\n                <div class=\\\"form-group kt-form__group row\\\">\\r\\n                    <div class=\\\"col-lg-12 kt-margin-bottom-20-mobile\\\">\\r\\n                        <div class=\\\"kt-timeline-3 mb-5\\\">\\r\\n                            <div class=\\\"kt-timeline-3__items kt-timeline-3__items--rolePermissions\\\">\\r\\n                                <div *ngFor=\\\"let _rootRole of rolePermissions\\\" class=\\\"kt-timeline-3__inner\\\">\\r\\n                                    \\r\\n                                    <!-- {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}} -->\\r\\n                                    <!-- <button mat-icon-button>\\r\\n                                        <mat-icon class=\\\"mat-icon-rtl-mirror\\\">expand_more</mat-icon>\\r\\n                                    </button> -->\\r\\n                                    <div class=\\\"kt-timeline-3__item kt-border-bottom-grey kt-py-15 kt-bg-grey\\\">\\r\\n                                        <span class=\\\"kt-timeline-3__item-time\\\">\\r\\n                                            <mat-checkbox [(ngModel)]=\\\"_rootRole.isSelected\\\"\\r\\n                                                (change)=\\\"isSelectedChanged($event, _rootRole)\\\"\\r\\n                                                [disabled]=\\\"role.isCoreRole\\\">{{ _rootRole.title }}</mat-checkbox> \\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"d-flex align-items-center kt-border-bottom-grey kt-py-15 kt-bg-grey\\\">\\r\\n                                        <div class=\\\"kt-timeline-3__item kt-timeline-3__item-child\\\"\\r\\n                                            *ngFor=\\\"let _childRole of _rootRole._children\\\">\\r\\n                                            <span class=\\\"kt-timeline-3__item-time\\\">\\r\\n                                                <mat-checkbox [(ngModel)]=\\\"_childRole.isSelected\\\"\\r\\n                                                    (change)=\\\"isSelectedChanged($event, _childRole)\\\"\\r\\n                                                    [disabled]=\\\"role.isCoreRole\\\">{{ _childRole.title }}</mat-checkbox>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"kt-portlet__foot kt-portlet__foot--fit kt-portlet__no-border\\\">\\r\\n                <div class=\\\"kt-form__actions kt-form__actions--solid\\\">\\r\\n                    <div class=\\\"row text-right\\\">\\r\\n                        <div class=\\\"col-lg-12\\\">\\r\\n                            <button type=\\\"button\\\" mat-raised-button [mat-dialog-close]=\\\"data.animal\\\" cdkFocusInitial matTooltip=\\\"Cancel changes\\\">\\r\\n                                Cancel\\r\\n                            </button>&nbsp;\\r\\n                            <button type=\\\"button\\\" [disabled]=\\\"!isTitleValid() || role.isCoreRole\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"viewLoading\\\" matTooltip=\\\"Save changes\\\">\\r\\n                                Save\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","// Angular\r\nimport { Component, OnInit, Inject, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n// Lodash\r\nimport * as _lodash from 'lodash';\r\n// RxJS\r\nimport { Observable, of, Subscription} from 'rxjs';\r\n// Lodash\r\nimport { each, find, some } from 'lodash';\r\n// NGRX\r\nimport { Update } from '@ngrx/entity';\r\nimport { Store, select } from '@ngrx/store';\r\n// State\r\nimport { AppState } from '../../../../../core/reducers';\r\n// Services and Models\r\nimport {\r\n\tRole,\r\n\tPermission,\r\n\tselectRoleById,\r\n\tRoleUpdated,\r\n\tselectAllPermissions,\r\n\tselectAllRoles,\r\n\tselectLastCreatedRoleId,\r\n\tRoleOnServerCreated\r\n} from '../../../../../core/auth';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Component({\r\n\tselector: 'kt-role-edit-dialog',\r\n\ttemplateUrl: './role-edit.dialog.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class RoleEditDialogComponent implements OnInit, OnDestroy {\r\n\t// Public properties\r\n\trole: Role;\r\n\trole$: Observable<Role>;\r\n\thasFormErrors: boolean = false;\r\n\tviewLoading: boolean = false;\r\n\tloadingAfterSubmit: boolean = false;\r\n\tallPermissions$: Observable<Permission[]>;\r\n\trolePermissions: Permission[] = [];\r\n\t// Private properties\r\n\tprivate componentSubscriptions: Subscription;\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param dialogRef: MatDialogRef<RoleEditDialogComponent>\r\n\t * @param data: any\r\n\t * @param store: Store<AppState>\r\n\t */\r\n\tconstructor(public dialogRef: MatDialogRef<RoleEditDialogComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n\t\tprivate store: Store<AppState>) { }\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tif (this.data.roleId) {\r\n\t\t\tthis.role$ = this.store.pipe(select(selectRoleById(this.data.roleId)));\r\n\t\t} else {\r\n\t\t\tconst newRole = new Role();\r\n\t\t\tnewRole.clear();\r\n\t\t\tthis.role$ = of(newRole);\r\n\t\t}\r\n\r\n\t\tthis.role$.subscribe(res => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.role = res;\r\n\t\t\tthis.allPermissions$ = this.store.pipe(select(selectAllPermissions));\r\n\t\t\tthis.loadPermissions();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * On destroy\r\n\t */\r\n\tngOnDestroy() {\r\n\t\tif (this.componentSubscriptions) {\r\n\t\t\tthis.componentSubscriptions.unsubscribe();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Load permissions\r\n\t */\r\n\tloadPermissions() {\r\n\t\tthis.allPermissions$.subscribe(_allPermissions => {\r\n\t\t\tif (!_allPermissions) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst mainPermissions = _allPermissions.filter(el => !el.parentId);\r\n\t\t\tmainPermissions.forEach((element: Permission) => {\r\n\t\t\t\tconst hasUserPermission = this.role.permissions.some(t => t === element.id);\r\n\t\t\t\tconst rootPermission = new Permission();\r\n\t\t\t\trootPermission.clear();\r\n\t\t\t\trootPermission.isSelected = hasUserPermission;\r\n\t\t\t\trootPermission._children = [];\r\n\t\t\t\trootPermission.id = element.id;\r\n\t\t\t\trootPermission.level = element.level;\r\n\t\t\t\trootPermission.parentId = element.parentId;\r\n\t\t\t\trootPermission.title = element.title;\r\n\t\t\t\tconst children = _allPermissions.filter(el => el.parentId && el.parentId === element.id);\r\n\t\t\t\tchildren.forEach(child => {\r\n\t\t\t\t\tconst hasUserChildPermission = this.role.permissions.some(t => t === child.id);\r\n\t\t\t\t\tconst childPermission = new Permission();\r\n\t\t\t\t\tchildPermission.clear();\r\n\t\t\t\t\tchildPermission.isSelected = hasUserChildPermission;\r\n\t\t\t\t\tchildPermission._children = [];\r\n\t\t\t\t\tchildPermission.id = child.id;\r\n\t\t\t\t\tchildPermission.level = child.level;\r\n\t\t\t\t\tchildPermission.parentId = child.parentId;\r\n\t\t\t\t\tchildPermission.title = child.title;\r\n\t\t\t\t\trootPermission._children.push(childPermission);\r\n\t\t\t\t});\r\n\t\t\t\tthis.rolePermissions.push(rootPermission);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/** ACTIONS */\r\n\t/**\r\n\t * Returns permissions ids\r\n\t */\r\n\tpreparePermissionIds(): number[] {\r\n\t\tconst result = [];\r\n\t\teach(this.rolePermissions, (_root: Permission) => {\r\n\t\t\tif (_root.isSelected) {\r\n\t\t\t\tresult.push(_root.id);\r\n\t\t\t\teach(_root._children, (_child: Permission) => {\r\n\t\t\t\t\tif (_child.isSelected) {\r\n\t\t\t\t\t\tresult.push(_child.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns role for save\r\n\t */\r\n\tprepareRole(): Role {\r\n\t\tconst _role = new Role();\r\n\t\t_role.id = this.role.id;\r\n\t\t_role.permissions = this.preparePermissionIds();\r\n\t\t// each(this.assignedRoles, (_role: Role) => _user.roles.push(_role.id));\r\n\t\t_role.title = this.role.title;\r\n\t\t_role.isCoreRole = this.role.isCoreRole;\r\n\t\treturn _role;\r\n\t}\r\n\r\n\t/**\r\n\t * Save data\r\n\t */\r\n\tonSubmit() {\r\n\t\tthis.hasFormErrors = false;\r\n\t\tthis.loadingAfterSubmit = false;\r\n\t\t/** check form */\r\n\t\tif (!this.isTitleValid()) {\r\n\t\t\tthis.hasFormErrors = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst editedRole = this.prepareRole();\r\n\t\tif (editedRole.id > 0) {\r\n\t\t\tthis.updateRole(editedRole);\r\n\t\t} else {\r\n\t\t\tthis.createRole(editedRole);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update role\r\n\t *\r\n\t * @param _role: Role\r\n\t */\r\n\tupdateRole(_role: Role) {\r\n\t\tthis.loadingAfterSubmit = true;\r\n\t\tthis.viewLoading = true;\r\n\t\t/* Server loading imitation. Remove this on real code */\r\n\t\tconst updateRole: Update<Role> = {\r\n\t\t\tid: this.role.id,\r\n\t\t\tchanges: _role\r\n\t\t  };\r\n\t\tthis.store.dispatch(new RoleUpdated({\r\n\t\t\tpartialrole: updateRole,\r\n\t\t\trole: _role\r\n\t\t}));\r\n\t\tof(undefined).pipe(delay(1000)).subscribe(() => { // Remove this line\r\n\t\t\tthis.viewLoading = false;\r\n\t\t\tthis.dialogRef.close({\r\n\t\t\t\t_role,\r\n\t\t\t\tisEdit: true\r\n\t\t\t});\r\n\t\t}); // Remove this line\r\n\t}\r\n\r\n\t/**\r\n\t * Create role\r\n\t *\r\n\t * @param _role: Role\r\n\t */\r\n\tcreateRole(_role: Role) {\r\n\t\tthis.loadingAfterSubmit = true;\r\n\t\tthis.viewLoading = true;\r\n\t\tthis.store.dispatch(new RoleOnServerCreated({ role: _role }));\r\n\t\tthis.componentSubscriptions = this.store.pipe(\r\n\t\t\tdelay(1000), // Remove this line\r\n\t\t\tselect(selectLastCreatedRoleId)\r\n\t\t).subscribe(res => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewLoading = false;\r\n\t\t\tthis.dialogRef.close({\r\n\t\t\t\t_role,\r\n\t\t\t\tisEdit: false\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Close alert\r\n\t *\r\n\t * @param $event: Event\r\n\t */\r\n\tonAlertClose($event) {\r\n\t\tthis.hasFormErrors = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check is selected changes\r\n\t *\r\n\t * @param $event: Event\r\n\t * @param permission: Permission\r\n\t */\r\n\tisSelectedChanged($event, permission: Permission) {\r\n\t\tif (permission._children.length === 0 && permission.isSelected) {\r\n\t\t\tconst _root = find(this.rolePermissions, (item: Permission) => item.id === permission.parentId);\r\n\t\t\tif (_root && !_root.isSelected) {\r\n\t\t\t\t_root.isSelected = true;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (permission._children.length === 0 && !permission.isSelected) {\r\n\t\t\tconst _root = find(this.rolePermissions, (item: Permission) => item.id === permission.parentId);\r\n\t\t\tif (_root && _root.isSelected) {\r\n\t\t\t\tif (!some(_root._children, (item: Permission) => item.isSelected === true)) {\r\n\t\t\t\t\t_root.isSelected = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (permission._children.length > 0 && permission.isSelected) {\r\n\t\t\teach(permission._children, (item: Permission) => item.isSelected = true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (permission._children.length > 0 && !permission.isSelected) {\r\n\t\t\teach(permission._children, (item: Permission) => {\r\n\t\t\t\titem.isSelected = false;\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/** UI */\r\n\t/**\r\n\t * Returns component title\r\n\t */\r\n\tgetTitle(): string {\r\n\t\tif (this.role && this.role.id) {\r\n\t\t\t// tslint:disable-next-line:no-string-throw\r\n\t\t\treturn `Edit role '${this.role.title}'`;\r\n\t\t}\r\n\r\n\t\t// tslint:disable-next-line:no-string-throw\r\n\t\treturn 'New role';\r\n\t}\r\n\r\n\t/**\r\n\t * Returns is title valid\r\n\t */\r\n\tisTitleValid(): boolean {\r\n\t\treturn (this.role && this.role.title && this.role.title.length > 0);\r\n\t}\r\n}\r\n","module.exports = \"<kt-portlet>\\r\\n\\t\\t<!-- PORTLET LOADING | Binded to TABLE Datasource -->\\r\\n\\t\\t<!-- See prop => '~/core/_crud/models/data-sources/_base.datasource.ts' (loading$) -->\\r\\n\\t\\t<kt-portlet-header [title]=\\\"'Roles list'\\\" [class]=\\\"'kt-portlet__head--lg'\\\" [viewLoading$]=\\\"dataSource.loading$\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<ng-container ktPortletTools>\\r\\n\\t\\t\\t\\t<button (click)=\\\"addRole()\\\" mat-raised-button matTooltip=\\\"Create new role\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n\\t\\t\\t\\t\\t<span>New Role</span>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<!-- Buttons (Material Angular) | See off.documenations 'https://material.angular.io/components/button/overview' -->\\r\\n\\t\\t\\t\\t<!-- mat-raised-button | Rectangular contained button w/ elevation  -->\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</kt-portlet-header>\\r\\n\\t\\t<!-- end::Header -->\\r\\n\\t\\r\\n\\t\\t<kt-portlet-body>\\r\\n\\t\\t\\t<!-- start::FILTERS & GROUP ACTIONS -->\\r\\n\\t\\t\\t<div class=\\\"kt-form\\\">\\r\\n\\t\\t\\t\\t<!-- start::FILTERS -->\\r\\n\\t\\t\\t\\t<div class=\\\"kt-form__filtration\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row align-items-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2 kt-margin-bottom-10-mobile\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Search user\\\" #searchInput placeholder=\\\"Search\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Search</strong> in all fields\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- end::FILTERS -->\\r\\n\\t\\r\\n\\t\\t\\t\\t<!-- start::GROUP ACTIONS -->\\r\\n\\t\\t\\t\\t<!-- Group actions list: 'Delete selected' | 'Fetch selected' | 'Update status for selected' -->\\r\\n\\t\\t\\t\\t<!-- Group actions are shared for all LISTS -->\\r\\n\\t\\t\\t\\t<div class=\\\"row align-items-center collapse kt-form__group-actions kt-margin-top-20 kt-margin-bottom-20\\\"\\r\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{'show' : selection.selected.length > 0}\\\"><!-- We show 'Group Actions' div if smth are selected -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-xl-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"kt-form__group kt-form__group--inline\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"kt-form__label kt-form__label-no-wrap\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"kt--font-bold kt-font-danger-\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span translate=\\\"ECOMMERCE.COMMON.SELECTED_RECORDS_COUNT\\\"></span> {{ selection.selected.length }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- selectedCountsTitle => function from codeBehind (roles-list.component.ts file) -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- selectedCountsTitle => just returns title of selected items count -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- for example: Selected records count: 4 -->\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"kt-form__control kt-form__group--inline\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"fetchRoles()\\\" mat-raised-button matTooltip=\\\"Fetch selected roles\\\"  class=\\\"mat-button-mt-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>clear_all</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFetch Selected\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- end::GROUP ACTIONS -->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- end::FILTERS & GROUP ACTIONS -->\\r\\n\\t\\r\\n\\t\\t\\t<!-- MATERIAL TABLE | Binded to datasources -->\\r\\n\\t\\t\\t<!-- See off.documentations 'https://material.angular.io/components/table/overview' -->\\r\\n\\t\\t\\t<div class=\\\"mat-table__wrapper\\\">\\r\\n\\t\\t\\t\\t<mat-table class=\\\"lmat-elevation-z8\\\"\\r\\n\\t\\t\\t\\t\\t#table\\r\\n\\t\\t\\t\\t\\t[dataSource]=\\\"dataSource\\\"\\r\\n\\t\\t\\t\\t\\tmatSort\\r\\n\\t\\t\\t\\t\\t#sort1=\\\"matSort\\\"\\r\\n\\t\\t\\t\\t\\tmatSortActive=\\\"id\\\"\\r\\n\\t\\t\\t\\t\\tmatSortDirection=\\\"asc\\\"\\r\\n\\t\\t\\t\\t\\tmatSortDisableClear>\\r\\n\\t\\t\\t\\t\\t<!-- Checkbox Column -->\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<!-- Table with selection -->\\r\\n\\t\\t\\t\\t\\t<!-- https://run.stackblitz.com/api/angular/v1?file=app%2Ftable-selection-example.ts -->\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"select\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef class=\\\"mat-column-checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-checkbox>\\r\\n\\t\\t\\t\\t\\t\\t</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\" class=\\\"mat-column-checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\" [checked]=\\\"selection.isSelected(row)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-checkbox>\\r\\n\\t\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"id\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!-- ATTRIBUTE mat-sort-header  for sorting | https://material.angular.io/components/sort/overview -->\\r\\n\\t\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let role\\\">{{role.id}}</mat-cell>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Title</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let role\\\">{{role.title}}</mat-cell>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"actions\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef>Actions</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let role\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button color=\\\"primary\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"{{ role.isCoreRole ? 'View' : 'Edit'}} role\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"editRole(role)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ role.isCoreRole ? 'visibility' : 'create' }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button color=\\\"warn\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Delete role\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"button\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"role.isCoreRole\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteRole(role)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n\\t\\t\\t\\t</mat-table>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"mat-table__message\\\" *ngIf=\\\"!dataSource.hasItems\\\">No records found</div><!-- Message for empty data  -->\\r\\n\\t\\t\\t\\t<div class=\\\"mat-table__message\\\" *ngIf=\\\"dataSource.isPreloadTextViewed$ | async\\\">Please wait....</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t<!-- start: BOTTOM -->\\r\\n\\t\\t\\t<div class=\\\"mat-table__bottom\\\">\\r\\n\\t\\t\\t\\t<!-- MATERIAL SPINNER | Url: 'https://material.angular.io/components/progress-spinner/overview' -->\\r\\n\\t\\t\\t\\t<mat-spinner [diameter]=\\\"20\\\" *ngIf=\\\"dataSource.loading$ | async\\\"></mat-spinner>\\r\\n\\t\\t\\t\\t<!-- MATERIAL PAGINATOR | Binded to dasources -->\\r\\n\\t\\t\\t\\t<!-- See off.documentations 'https://material.angular.io/components/paginator/overview' -->\\r\\n\\t\\t\\t\\t<mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[3, 5, 10]\\\" [length]=\\\"dataSource.paginatorTotal$ | async\\\" [showFirstLastButtons]=\\\"true\\\"></mat-paginator>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- end: BOTTOM -->\\r\\n\\t\\t</kt-portlet-body>\\r\\n\\t\\t<!-- end::Body -->\\r\\n\\t</kt-portlet>\\r\\n\\t\\r\\n\"","// Angular\r\nimport { Component, OnInit, ElementRef, ViewChild, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\n// Material\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatPaginator, MatSort, MatSnackBar, MatDialog } from '@angular/material';\r\n// RXJS\r\nimport { debounceTime, distinctUntilChanged, tap, skip, take, delay } from 'rxjs/operators';\r\nimport { fromEvent, merge, Observable, of, Subscription } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n// NGRX\r\nimport { Store } from '@ngrx/store';\r\n// LODASH\r\nimport _ from 'lodash';\r\n// Services\r\nimport { LayoutUtilsService, MessageType } from '../../../../../core/_base/crud';\r\n// Models\r\nimport { Role, RolesDataSource, RoleDeleted, RolesPageRequested  } from '../../../../../core/auth';\r\nimport { AppState } from '../../../../../core/reducers';\r\nimport { QueryParamsModel } from '../../../../../core/_base/crud';\r\n\r\n// Components\r\nimport { RoleEditDialogComponent } from '../role-edit/role-edit.dialog.component';\r\n\r\n// Table with EDIT item in MODAL\r\n// ARTICLE for table with sort/filter/paginator\r\n// https://blog.angular-university.io/angular-material-data-table/\r\n// https://v5.material.angular.io/components/table/overview\r\n// https://v5.material.angular.io/components/sort/overview\r\n// https://v5.material.angular.io/components/table/overview#sorting\r\n// https://www.youtube.com/watch?v=NSt9CI3BXv4\r\n@Component({\r\n\tselector: 'kt-roles-list',\r\n\ttemplateUrl: './roles-list.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RolesListComponent implements OnInit, OnDestroy {\r\n\t// Table fields\r\n\tdataSource: RolesDataSource;\r\n\tdisplayedColumns = ['select', 'id', 'title', 'actions'];\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild('sort1') sort: MatSort;\r\n\t// Filter fields\r\n\t@ViewChild('searchInput') searchInput: ElementRef;\r\n\t// Selection\r\n\tselection = new SelectionModel<Role>(true, []);\r\n\trolesResult: Role[] = [];\r\n\r\n\t// Subscriptions\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param store: Store<AppState>\r\n\t * @param dialog: MatDialog\r\n\t * @param snackBar: MatSnackBar\r\n\t * @param layoutUtilsService: LayoutUtilsService\r\n\t */\r\n\tconstructor(\r\n\t\tprivate store: Store<AppState>,\r\n\t\tpublic dialog: MatDialog,\r\n\t\tpublic snackBar: MatSnackBar,\r\n\t\tprivate layoutUtilsService: LayoutUtilsService) {}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\t// If the user changes the sort order, reset back to the first page.\r\n\t\tconst sortSubscription = this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n\t\tthis.subscriptions.push(sortSubscription);\r\n\r\n\t\t/* Data load will be triggered in two cases:\r\n\t\t- when a pagination event occurs => this.paginator.page\r\n\t\t- when a sort event occurs => this.sort.sortChange\r\n\t\t**/\r\n\t\tconst paginatorSubscriptions = merge(this.sort.sortChange, this.paginator.page).pipe(\r\n\t\t\ttap(() => {\r\n\t\t\t\tthis.loadRolesList();\r\n\t\t\t})\r\n\t\t)\r\n\t\t.subscribe();\r\n\t\tthis.subscriptions.push(paginatorSubscriptions);\r\n\r\n\t\t// Filtration, bind to searchInput\r\n\t\tconst searchSubscription = fromEvent(this.searchInput.nativeElement, 'keyup').pipe(\r\n\t\t\t// tslint:disable-next-line:max-line-length\r\n\t\t\tdebounceTime(150), // The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator, we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n\t\t\tdistinctUntilChanged(), // This operator will eliminate duplicate values\r\n\t\t\ttap(() => {\r\n\t\t\t\tthis.paginator.pageIndex = 0;\r\n\t\t\t\tthis.loadRolesList();\r\n\t\t\t})\r\n\t\t)\r\n\t\t.subscribe();\r\n\t\tthis.subscriptions.push(searchSubscription);\r\n\r\n\t\t// Init DataSource\r\n\t\tthis.dataSource = new RolesDataSource(this.store);\r\n\t\tconst entitiesSubscription = this.dataSource.entitySubject.pipe(\r\n\t\t\tskip(1),\r\n\t\t\tdistinctUntilChanged()\r\n\t\t).subscribe(res => {\r\n\t\t\tthis.rolesResult = res;\r\n\t\t});\r\n\t\tthis.subscriptions.push(entitiesSubscription);\r\n\r\n\t\t// First load\r\n\t\tof(undefined).pipe(take(1), delay(1000)).subscribe(() => { // Remove this line, just loading imitation\r\n\t\t\tthis.loadRolesList();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * On Destroy\r\n\t */\r\n\tngOnDestroy() {\r\n\t\tthis.subscriptions.forEach(el => el.unsubscribe());\r\n\t}\r\n\r\n\t/**\r\n\t * Load Roles List\r\n\t */\r\n\tloadRolesList() {\r\n\t\tthis.selection.clear();\r\n\t\tconst queryParams = new QueryParamsModel(\r\n\t\t\tthis.filterConfiguration(),\r\n\t\t\tthis.sort.direction,\r\n\t\t\tthis.sort.active,\r\n\t\t\tthis.paginator.pageIndex,\r\n\t\t\tthis.paginator.pageSize\r\n\t\t);\r\n\t\t// Call request from server\r\n\t\tthis.store.dispatch(new RolesPageRequested({ page: queryParams }));\r\n\t\tthis.selection.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns object for filter\r\n\t */\r\n\tfilterConfiguration(): any {\r\n\t\tconst filter: any = {};\r\n\t\tconst searchText: string = this.searchInput.nativeElement.value;\r\n\t\tfilter.title = searchText;\r\n\t\treturn filter;\r\n\t}\r\n\r\n\t/** ACTIONS */\r\n\t/**\r\n\t * Delete role\r\n\t *\r\n\t * @param _item: Role\r\n\t */\r\n\tdeleteRole(_item: Role) {\r\n\t\tconst _title: string = 'User Role';\r\n\t\tconst _description: string = 'Are you sure to permanently delete this role?';\r\n\t\tconst _waitDesciption: string = 'Role is deleting...';\r\n\t\tconst _deleteMessage = `Role has been deleted`;\r\n\r\n\t\tconst dialogRef = this.layoutUtilsService.deleteElement(_title, _description, _waitDesciption);\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.store.dispatch(new RoleDeleted({ id: _item.id}));\r\n\t\t\tthis.layoutUtilsService.showActionNotification(_deleteMessage, MessageType.Delete);\r\n\t\t\tthis.loadRolesList();\r\n\t\t});\r\n\t}\r\n\r\n\t/** Fetch */\r\n\t/**\r\n\t * Fetch selected rows\r\n\t */\r\n\tfetchRoles() {\r\n\t\tconst messages = [];\r\n\t\tthis.selection.selected.forEach(elem => {\r\n\t\t\tmessages.push({\r\n\t\t\t\ttext: `${elem.title}`,\r\n\t\t\t\tid: elem.id.toString(),\r\n\t\t\t\t// status: elem.username\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.layoutUtilsService.fetchElements(messages);\r\n\t}\r\n\r\n\t/**\r\n\t * Add role\r\n\t */\r\n\taddRole() {\r\n\t\tconst newRole = new Role();\r\n\t\tnewRole.clear(); // Set all defaults fields\r\n\t\tthis.editRole(newRole);\r\n\t}\r\n\r\n\t/**\r\n\t * Edit role\r\n\t *\r\n\t * @param role: Role\r\n\t */\r\n\teditRole(role: Role) {\r\n\t\tconst _saveMessage = `Role successfully has been saved.`;\r\n\t\tconst _messageType = role.id ? MessageType.Update : MessageType.Create;\r\n\t\tconst dialogRef = this.dialog.open(RoleEditDialogComponent, { data: { roleId: role.id } });\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.layoutUtilsService.showActionNotification(_saveMessage, _messageType, 10000, true, true);\r\n\t\t\tthis.loadRolesList();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Check all rows are selected\r\n\t */\r\n\tisAllSelected(): boolean {\r\n\t\tconst numSelected = this.selection.selected.length;\r\n\t\tconst numRows = this.rolesResult.length;\r\n\t\treturn numSelected === numRows;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle selection\r\n\t */\r\n\tmasterToggle() {\r\n\t\tif (this.selection.selected.length === this.rolesResult.length) {\r\n\t\t\tthis.selection.clear();\r\n\t\t} else {\r\n\t\t\tthis.rolesResult.forEach(row => this.selection.select(row));\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Company } from './companie.model';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CompaniesRestApiService {\n  \n  // Define API\n  // apiURL = 'http://192.168.1.119:8484/companies/company/';\n  apiURL = 'http://localhost:3000'\n  constructor(private http: HttpClient) { }\n\n  /*========================================\n    CRUD Methods for consuming RESTful API\n  =========================================*/\n\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }  \n\n\n\n\n // HttpClient API get() method => Fetch Compagnies list\n getCompany(): Observable<Company> {\n  return this.http.get<Company>(this.apiURL + '/Companies')\n  .pipe(\n    retry(1),\n    catchError(this.handleError)\n    \n  )\n}\ndisplay(id) {\n  console.log(id)\n  return id\n} \nupdateUser(company: any) {\n  return this.http.put(this.apiURL + '/' + company.id, company);\n}\n// HttpClient API get() method => Fetch Compagnie\ngetCompanies(id: string): Observable<Company> {\n  return this.http.get<Company>(this.apiURL + '/Companies/' + id)\n  .pipe(\n    retry(1),\n    catchError(this.handleError)\n  )\n}  \n\n// HttpClient API post() method => Create Compagnie\ncreateCompagnie(Company): Observable<Company> {\n  return this.http.post<Company>(this.apiURL + '/Companies', JSON.stringify(Company), this.httpOptions)\n  .pipe(\n    retry(1),\n    catchError(this.handleError)\n  )\n}   \n\n// HttpClient API put() method => Update Compagnie\nupdateCompany(id, Company): Observable<Company> {\n  return this.http.put<Company>(this.apiURL + '/Companies/' + id,  Company, this.httpOptions)\n  .pipe(\n    retry(1),\n    catchError(this.handleError)\n  )\n}\n\n// HttpClient API delete() method => Delete Compagnie\ndeleteCompagnies(id){\n  return this.http.delete<Company>(this.apiURL + '/Companies/' + id, this.httpOptions)\n  .pipe(\n    retry(1),\n    catchError(this.handleError)\n  )\n}\n\n// Error handling \nhandleError(error: { error: { message: string; }; status: any; message: any; }) {\n   let errorMessage = '';\n   if(error.error instanceof ErrorEvent) {\n     // Get client-side error\n     errorMessage = error.error.message;\n   } else {\n     // Get server-side error\n     errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n   }\n   window.alert(errorMessage);\n   return throwError(errorMessage);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // // HttpClient API get() method => Fetch Compagnies list\n  // getCompany(): Observable<Compagnie> {\n  //   return this.http.get<Compagnie>(this.apiURL)\n  //   .pipe(\n  //     retry(1),\n  //     catchError(this.handleError)\n      \n  //   )\n  // }\n\n  // // HttpClient API get() method => Fetch Compagnie\n  // getCompagny(id: string): Observable<Compagnie> {\n  //   return this.http.get<Compagnie>(this.apiURL + id+'/')\n  //   .pipe(\n  //     retry(1),\n  //     catchError(this.handleError)\n  //   )\n  // }  \n\n  // // HttpClient API post() method => Create Compagnie\n  // createCompagnie(Compagnie: { \"company_title\": string; \"short_name\": string; \"company_activity\": string; \"company_juridical_form\": string; \"company_IF\": string; \"company_ICE\": string; \"company_TP\": string; \"company_RC\": string; \"company_CNSS\": string; }): Observable<Compagnie> {\n  //   return this.http.post<Compagnie>(this.apiURL , JSON.stringify(Compagnie), this.httpOptions)\n  //   .pipe(\n  //     retry(1),\n  //     catchError(this.handleError)\n  //   )\n  // }   \n\n  // // HttpClient API put() method => Update Compagnie\n  // updateCompagnie(id: string, Compagnie: any): Observable<Compagnie> {\n  //   return this.http.put<Compagnie>(this.apiURL  + id+'/', JSON.stringify(Compagnie), this.httpOptions)\n  //   .pipe(\n  //     retry(1),\n  //     catchError(this.handleError)\n  //   )\n  // }\n\n  // // HttpClient API delete() method => Delete Compagnie\n  // deleteCompagnie(id: string){\n  //   return this.http.delete<Compagnie>(this.apiURL + id+'/', this.httpOptions)\n  //   .pipe(\n  //     retry(1),\n  //     catchError(this.handleError)\n  //   )\n  // }\n\n  // // Error handling \n  // handleError(error: { error: { message: string; }; status: any; message: any; }) {\n  //    let errorMessage = '';\n  //    if(error.error instanceof ErrorEvent) {\n  //      // Get client-side error\n  //      errorMessage = error.error.message;\n  //    } else {\n  //      // Get server-side error\n  //      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n  //    }\n  //    window.alert(errorMessage);\n  //    return throwError(errorMessage);\n  // }\n\n}","module.exports = \"<!-- <div *ngIf=\\\"hasUserAccess$ | async\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div> -->\\r\\n<div>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","// Angular\r\nimport { Component, ChangeDetectionStrategy, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// RxJS\r\nimport { Observable } from 'rxjs';\r\n// NGRX\r\nimport { Store, select } from '@ngrx/store';\r\n// AppState\r\nimport { AppState } from '../../../core/reducers';\r\n// Auth\r\nimport { Permission } from '../../../core/auth';\r\n\r\nconst userManagementPermissionId: number = 2;\r\n@Component({\r\n\tselector: 'kt-user-management',\r\n\ttemplateUrl: './user-management.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n\t// Public properties\r\n\t// hasUserAccess$: Observable<boolean>;\r\n\tcurrentUserPermission$: Observable<Permission[]>;\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param store: Store<AppState>\r\n\t * @param router: Router\r\n\t */\r\n\tconstructor(private store: Store<AppState>, private router: Router) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\t// this.currentUserPermission$ = this.store.pipe(select(currentUserPermissions));\r\n\t\t// this.currentUserPermission$.subscribe(permissions => {\r\n\t\t// \tif (permissions && permissions.length > 0) {\r\n\t\t// \t\tthis.hasUserAccess$ =\r\n\t\t// \t\t\tthis.store.pipe(select(checkHasUserPermission(userManagementPermissionId)));\r\n\t\t// \t\tthis.hasUserAccess$.subscribe(res => {\r\n\t\t// \t\t\tif (!res) {\r\n\t\t// \t\t\t\tthis.router.navigateByUrl('/error/403');\r\n\t\t// \t\t\t}\r\n\t\t// \t\t});\r\n\t\t// \t}\r\n\t\t// });\r\n\t}\r\n}\r\n","// Angular\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// NGRX\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n// Translate\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { PartialsModule } from '../../partials/partials.module';\r\n// Services\r\nimport { HttpUtilsService, TypesUtilsService, InterceptService, LayoutUtilsService} from '../../../core/_base/crud';\r\n// Shared\r\nimport { ActionNotificationComponent } from '../../partials/content/crud';\r\n// Components\r\nimport { UserManagementComponent } from './user-management.component';\r\nimport { UsersListComponent } from './users/users-list/users-list.component';\r\nimport { UserEditComponent } from './users/user-edit/user-edit.component';\r\nimport { RolesListComponent } from './roles/roles-list/roles-list.component';\r\nimport { RoleEditDialogComponent } from './roles/role-edit/role-edit.dialog.component';\r\nimport { UserRolesListComponent } from './users/_subs/user-roles/user-roles-list.component';\r\nimport { ChangePasswordComponent } from './users/_subs/change-password/change-password.component';\r\nimport { AddressComponent } from './users/_subs/address/address.component';\r\nimport { SocialNetworksComponent } from './users/_subs/social-networks/social-networks.component';\r\n\r\n// Material\r\nimport {\r\n\tMatInputModule,\r\n\tMatPaginatorModule,\r\n\tMatProgressSpinnerModule,\r\n\tMatSortModule,\r\n\tMatTableModule,\r\n\tMatSelectModule,\r\n\tMatMenuModule,\r\n\tMatProgressBarModule,\r\n\tMatButtonModule,\r\n\tMatCheckboxModule,\r\n\tMatDialogModule,\r\n\tMatTabsModule,\r\n\tMatNativeDateModule,\r\n\tMatCardModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tMatDatepickerModule,\r\n\tMatExpansionModule,\r\n\tMatAutocompleteModule,\r\n\tMAT_DIALOG_DEFAULT_OPTIONS,\r\n\tMatSnackBarModule,\r\n\tMatTooltipModule\r\n} from '@angular/material';\r\nimport {\r\n\tusersReducer,\r\n\tUserEffects\r\n} from '../../../core/auth';\r\nimport { CompaniesListComponent } from './companies/companies-list/companies-list.component';\r\nimport { CompaniesRestApiService } from '../../partials/content/widgets/shared/companies.service';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: UserManagementComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: '',\r\n\t\t\t\tredirectTo: 'roles',\r\n\t\t\t\tpathMatch: 'full'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'roles',\r\n\t\t\t\tcomponent: RolesListComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'companies',\r\n\t\t\t\tcomponent: CompaniesListComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'users',\r\n\t\t\t\tcomponent: UsersListComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'users:id',\r\n\t\t\t\tcomponent: UsersListComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'users/add',\r\n\t\t\t\tcomponent: UserEditComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'users/add:id',\r\n\t\t\t\tcomponent: UserEditComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'users/edit',\r\n\t\t\t\tcomponent: UserEditComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'users/edit/:id',\r\n\t\t\t\tcomponent: UserEditComponent\r\n\t\t\t},\r\n\t\t]\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tPartialsModule,\r\n\t\tRouterModule.forChild(routes),\r\n\t\tStoreModule.forFeature('users', usersReducer),\r\n        EffectsModule.forFeature([UserEffects]),\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tTranslateModule.forChild(),\r\n\t\tMatButtonModule,\r\n\t\tMatMenuModule,\r\n\t\tMatSelectModule,\r\n        MatInputModule,\r\n\t\tMatTableModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tMatRadioModule,\r\n\t\tMatIconModule,\r\n\t\tMatNativeDateModule,\r\n\t\tMatProgressBarModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatCardModule,\r\n\t\tMatPaginatorModule,\r\n\t\tMatSortModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatTabsModule,\r\n\t\tMatTooltipModule,\r\n\t\tMatDialogModule\r\n\t],\r\n\tproviders: [\r\n\t\tInterceptService,\r\n\t\t{\r\n        \tprovide: HTTP_INTERCEPTORS,\r\n       \t \tuseClass: InterceptService,\r\n\t\t\tmulti: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tprovide: MAT_DIALOG_DEFAULT_OPTIONS,\r\n\t\t\tuseValue: {\r\n\t\t\t\thasBackdrop: true,\r\n\t\t\t\tpanelClass: 'kt-mat-dialog-container__wrapper',\r\n\t\t\t\theight: 'auto',\r\n\t\t\t\twidth: '900px'\r\n\t\t\t}\r\n\t\t},\r\n\t\tHttpUtilsService,\r\n\t\tTypesUtilsService,\r\n\t\tLayoutUtilsService,\r\n\t\tCompaniesRestApiService\r\n\t],\r\n\tentryComponents: [\r\n\t\tActionNotificationComponent,\r\n\t\tRoleEditDialogComponent\r\n\t],\r\n\tdeclarations: [\r\n\t\tUserManagementComponent,\r\n\t\tUsersListComponent,\r\n\t\tUserEditComponent,\r\n\t\tRolesListComponent,\r\n\t\tCompaniesListComponent,\r\n\t\tRoleEditDialogComponent,\r\n\t\tUserRolesListComponent,\r\n\t\tChangePasswordComponent,\r\n\t\tAddressComponent,\r\n\t\tSocialNetworksComponent\r\n\t]\r\n})\r\nexport class UserManagementModule {}\r\n","module.exports = \"<!--begin::Form-->\\r\\n<form [formGroup]=\\\"addressForm\\\" class=\\\"kt-form kt-form--group-seperator-dashed\\\">\\r\\n\\r\\n\\t<kt-alert *ngIf=\\\"hasFormErrors\\\" type=\\\"warn\\\" [showCloseButton]=\\\"true\\\" [duration]=\\\"10000\\\" (close)=\\\"onAlertClose($event)\\\">\\r\\n\\t\\tOh snap! Change a few things up and try submitting again.\\r\\n\\t</kt-alert>\\r\\n\\t<div class=\\\"kt-form__section kt-form__section--first\\\">\\r\\n\\t\\t<div class=\\\"form-group kt-form__group row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter Address Line\\\" formControlName=\\\"addressLine\\\" />\\r\\n\\t\\t\\t\\t\\t<mat-error>Address Line is\\r\\n\\t\\t\\t\\t\\t\\t<strong>required</strong>\\r\\n\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t<strong>Address Line</strong>\\r\\n\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" />\\r\\n\\t\\t\\t\\t\\t<mat-error>City is\\r\\n\\t\\t\\t\\t\\t\\t<strong>required</strong>\\r\\n\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t<strong>City</strong>\\r\\n\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group kt-form__group row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter State Line\\\" formControlName=\\\"state\\\" />\\r\\n\\t\\t\\t\\t\\t<mat-error>State is\\r\\n\\t\\t\\t\\t\\t\\t<strong>required</strong>\\r\\n\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t<strong>State</strong>\\r\\n\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter Postode\\\" formControlName=\\\"postCode\\\" />\\r\\n\\t\\t\\t\\t\\t<mat-error>Postcode is\\r\\n\\t\\t\\t\\t\\t\\t<strong>required</strong>\\r\\n\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t<strong>Postcode</strong>\\r\\n\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</form>\\r\\n<!--end::Form-->\\r\\n\"","// Angular\r\nimport { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// RxJS\r\nimport { BehaviorSubject, fromEvent } from 'rxjs';\r\n// NGRX\r\nimport { Store } from '@ngrx/store';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\n// Auth\r\nimport { Address, AuthService } from '../../../../../../core/auth';\r\n// State\r\nimport { AppState } from '../../../../../../core/reducers';\r\n// Layout\r\nimport { LayoutUtilsService } from '../../../../../../core/_base/crud';\r\n\r\n@Component({\r\n\tselector: 'kt-address',\r\n\ttemplateUrl: './address.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddressComponent implements OnInit {\r\n\t// Public properties\r\n\t// Incoming data\r\n\t@Input() addressSubject: BehaviorSubject<Address>;\r\n\thasFormErrors: boolean = false;\r\n\taddressForm: FormGroup;\r\n\r\n\t/**\r\n\t * Component Costructor\r\n\t *\r\n\t * @param fb: FormBuilder\r\n\t * @param auth: AuthService\r\n\t * @param store: Store<AppState>\r\n\t * @param layoutUtilsService: LayoutUtilsService\r\n\t */\r\n\tconstructor(private fb: FormBuilder,\r\n\t\tprivate auth: AuthService,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate layoutUtilsService: LayoutUtilsService) {}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tif (!this.addressSubject.value) {\r\n\t\t\tconst newAddress = new Address();\r\n\t\t\tnewAddress.clear();\r\n\t\t\tthis.addressSubject.next(newAddress);\r\n\t\t}\r\n\r\n\t\tthis.createForm();\r\n\t\tthis.addressForm.valueChanges\r\n\t\t\t.pipe(\r\n\t\t\t\t// tslint:disable-next-line:max-line-length\r\n\t\t\t\tdebounceTime(150), // The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator, we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n\t\t\t\tdistinctUntilChanged(), // This operator will eliminate duplicate values\r\n\t\t\t\ttap(() => {\r\n\t\t\t\t\tthis.updateAddress();\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t}\r\n\r\n\t/**\r\n\t * Init form\r\n\t */\r\n\tcreateForm() {\r\n\t\tthis.addressForm = this.fb.group({\r\n\t\t\taddressLine: [this.addressSubject.value.addressLine, Validators.required],\r\n\t\t\tcity: [this.addressSubject.value.city, Validators.required],\r\n\t\t\tstate: [this.addressSubject.value.state, Validators.required],\r\n\t\t\tpostCode: [this.addressSubject.value.postCode, Validators.required]\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update address\r\n\t */\r\n\tupdateAddress() {\r\n\t\tthis.hasFormErrors = false;\r\n\t\tconst controls = this.addressForm.controls;\r\n\t\t/** check form */\r\n\t\tif (this.addressForm.invalid) {\r\n\t\t\tObject.keys(controls).forEach(controlName =>\r\n\t\t\t\tcontrols[controlName].markAsTouched()\r\n\t\t\t);\r\n\t\t\tthis.hasFormErrors = true;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst newAddress = new Address();\r\n\t\tnewAddress.clear();\r\n\t\tnewAddress.addressLine = controls['addressLine'].value;\r\n\t\tnewAddress.city = controls['city'].value;\r\n\t\tnewAddress.postCode = controls['postCode'].value;\r\n\t\tnewAddress.state = controls['state'].value;\r\n\t\tthis.addressSubject.next(newAddress);\r\n\t}\r\n\r\n\t/**\r\n\t * Close alert\r\n\t *\r\n\t * @param $event: Event\r\n\t */\r\n\tonAlertClose($event) {\r\n\t\tthis.hasFormErrors = false;\r\n\t}\r\n}\r\n","module.exports = \"<!--begin::Form-->\\r\\n\\t<form *ngIf=\\\"user\\\" [formGroup]=\\\"changePasswordForm\\\" class=\\\"kt-form kt-form--group-seperator-dashed\\\">\\r\\n\\r\\n\\t\\t<kt-alert *ngIf=\\\"hasFormErrors\\\" type=\\\"warn\\\" [showCloseButton]=\\\"true\\\" [duration]=\\\"10000\\\" (close)=\\\"onAlertClose($event)\\\">\\r\\n\\t\\t\\tOh snap! Password not match.\\r\\n\\t\\t</kt-alert>\\r\\n\\t\\t<div class=\\\"kt-form__section kt-form__section--first\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group kt-form__group row mb-0\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-lg-8 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input matInput type=\\\"password\\\" id=\\\"password\\\" autocomplete=\\\"off\\\" placeholder=\\\"Enter Password\\\" formControlName=\\\"password\\\" />\\r\\n\\t\\t\\t\\t\\t\\t<mat-error>Password is\\r\\n\\t\\t\\t\\t\\t\\t\\t<strong>required</strong>\\r\\n\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t\\t<strong>Password</strong>\\r\\n\\t\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-group kt-form__group row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-lg-8 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input matInput type=\\\"password\\\" id=\\\"confirmPassword\\\" autocomplete=\\\"off\\\" placeholder=\\\"Confirm password\\\" formControlName=\\\"confirmPassword\\\" />\\r\\n\\t\\t\\t\\t\\t\\t<mat-error>Confirm password is\\r\\n\\t\\t\\t\\t\\t\\t\\t<strong>required</strong>\\r\\n\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please conirm\\r\\n\\t\\t\\t\\t\\t\\t\\t<strong>Password</strong>\\r\\n\\t\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"kt-separator kt-separator--dashed\\\"></div>\\r\\n\\t\\t<div class=\\\"kt-form__actions kt-form__actions--solid\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" [disabled]=\\\"changePasswordForm.invalid\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"viewLoading\\\" matTooltip=\\\"Save changes\\\">\\r\\n\\t\\t\\t\\tChange password\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n<!--end::Form-->\\r\\n\"","// Angular\r\nimport { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { AbstractControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { FormGroup } from '@angular/forms';\r\n// RxJS\r\nimport { BehaviorSubject } from 'rxjs';\r\n// NGRX\r\nimport { Store } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n// Auth\r\nimport { AuthService, UserUpdated, User } from '../../../../../../core/auth/';\r\n// State\r\nimport { AppState } from '../../../../../../core/reducers';\r\n// Layout\r\nimport { LayoutUtilsService, MessageType } from '../../../../../../core/_base/crud';\r\n\r\nexport class PasswordValidation {\r\n\t/**\r\n\t * MatchPassword\r\n\t *\r\n\t * @param AC: AbstractControl\r\n\t */\r\n\t\tstatic MatchPassword(AC: AbstractControl) {\r\n\t\t\t\tconst password = AC.get('password').value; // to get value in input tag\r\n\t\t\t\tconst confirmPassword = AC.get('confirmPassword').value; // to get value in input tag\r\n\t\t\t\tif (password !== confirmPassword) {\r\n\t\t\tAC.get('confirmPassword').setErrors( {MatchPassword: true} );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'kt-change-password',\r\n\ttemplateUrl: './change-password.component.html',\r\n\t// changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\t// Public properties\r\n\t@Input() userId: number;\r\n\t@Input() loadingSubject = new BehaviorSubject<boolean>(false);\r\n\thasFormErrors: boolean = false;\r\n\tuser: User;\r\n\tchangePasswordForm: FormGroup;\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param fb: FormBuilder\r\n\t * @param auth: AuthService\r\n\t * @param store: Store<AppState>\r\n\t * @param layoutUtilsService: LayoutUtilsService\r\n\t */\r\n\tconstructor(private fb: FormBuilder, private auth: AuthService, private store: Store<AppState>,\r\n\t\t// tslint:disable-next-line:align\r\n\t\tprivate layoutUtilsService: LayoutUtilsService) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\t/**\r\n\t * Load data\r\n\t */\r\n\tloadData() {\r\n\t\tthis.auth.getUserById(this.userId).subscribe(res => {\r\n\t\t\tthis.user = res;\r\n\t\t\tthis.createForm();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Init form\r\n\t */\r\n\tcreateForm() {\r\n\t\tthis.changePasswordForm = this.fb.group({\r\n\t\t\tpassword: ['', Validators.required],\r\n\t\t\tconfirmPassword: ['', Validators.required]\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Reset\r\n\t */\r\n\treset() {\r\n\t\tthis.hasFormErrors = false;\r\n\t\tthis.loadingSubject.next(false);\r\n\t\tthis.changePasswordForm.markAsPristine();\r\n\t\t\t\tthis.changePasswordForm.markAsUntouched();\r\n\t\t\t\tthis.changePasswordForm.updateValueAndValidity();\r\n\t}\r\n\r\n\t/**\r\n\t * Save data\r\n\t */\r\n\tonSubmit() {\r\n\t\tthis.loadingSubject.next(true);\r\n\t\tthis.hasFormErrors = false;\r\n\t\tconst controls = this.changePasswordForm.controls;\r\n\t\t/** check form */\r\n\t\tif (this.changePasswordForm.invalid) {\r\n\t\t\tObject.keys(controls).forEach(controlName =>\r\n\t\t\t\tcontrols[controlName].markAsTouched()\r\n\t\t\t);\r\n\t\t\tthis.hasFormErrors = true;\r\n\t\t\tthis.loadingSubject.next(false);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.user.password = controls['password'].value;\r\n\t\tconst updatedUser: Update<User> = {\r\n\t\t\tid: this.user.id,\r\n\t\t\tchanges: this.user\r\n\t\t};\r\n\r\n\t\tthis.store.dispatch(new UserUpdated({\r\n\t\t\tpartialUser: updatedUser,\r\n\t\t\tuser: this.user\r\n\t\t}));\r\n\r\n\t\tthis.loadData();\r\n\t\tthis.loadingSubject.next(false);\r\n\t\tconst message = `User password successfully has been changed.`;\r\n\t\tthis.layoutUtilsService.showActionNotification(message, MessageType.Update, 5000, true, false);\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * Close alert\r\n\t *\r\n\t * @param $event: Event\r\n\t */\r\n\tonAlertClose($event) {\r\n\t\tthis.hasFormErrors = false;\r\n\t}\r\n}\r\n","module.exports = \"<!--begin::Form-->\\r\\n<form [formGroup]=\\\"socialNetworksForm\\\" class=\\\"kt-form kt-form--group-seperator-dashed\\\">\\r\\n\\r\\n\\t<kt-alert *ngIf=\\\"hasFormErrors\\\" type=\\\"warn\\\" [showCloseButton]=\\\"true\\\" [duration]=\\\"10000\\\" (close)=\\\"onAlertClose($event)\\\">\\r\\n\\t\\tOh snap! Change a few things up and try submitting again.\\r\\n\\t</kt-alert>\\r\\n\\t<div class=\\\"kt-form__section kt-form__section--first\\\">\\r\\n\\t\\t<div class=\\\"form-group kt-form__group row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter LinkedIn address\\\" formControlName=\\\"linkedIn\\\" />\\r\\n\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t<strong>Linked In</strong> address\\r\\n\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter Facebook address\\\" formControlName=\\\"facebook\\\" />\\r\\n\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t<strong>Facebook</strong> address\\r\\n\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group kt-form__group row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter Twitter address\\\" formControlName=\\\"twitter\\\" />\\r\\n\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t<strong>Twitter</strong> address\\r\\n\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter Instagram address\\\" formControlName=\\\"instagram\\\" />\\r\\n\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t<strong>Instagram</strong> address\\r\\n\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</form>\\r\\n<!--end::Form-->\\r\\n\"","// Angular\r\nimport { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\n// RxJS\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\n// State\r\nimport { AppState } from '../../../../../../core/reducers';\r\n// Auth\r\nimport { SocialNetworks, AuthService } from '../../../../../../core/auth';\r\n// CRUD\r\nimport { LayoutUtilsService } from '../../../../../../core/_base/crud';\r\n\r\n\r\n@Component({\r\n\tselector: 'kt-social-networks',\r\n\ttemplateUrl: './social-networks.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SocialNetworksComponent implements OnInit {\r\n\t// Public properties\r\n\t// Incoming data\r\n\t@Input() loadingSubject = new BehaviorSubject<boolean>(false);\r\n\t@Input() socialNetworksSubject: BehaviorSubject<SocialNetworks>;\r\n\thasFormErrors: boolean = false;\r\n\tsocialNetworksForm: FormGroup;\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param fb: FormBuilser\r\n\t * @param auth: AuthService\r\n\t * @param store: Store<AppState>\r\n\t * @param layoutUtilsService: LayoutUtilsService\r\n\t */\r\n\tconstructor(private fb: FormBuilder,\r\n\t\tprivate auth: AuthService,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate layoutUtilsService: LayoutUtilsService) {}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tif (!this.socialNetworksSubject.value) {\r\n\t\t\tconst newSocialNetworks = new SocialNetworks();\r\n\t\t\tnewSocialNetworks.clear();\r\n\t\t\tthis.socialNetworksSubject.next(newSocialNetworks);\r\n\t\t}\r\n\r\n\t\tthis.createForm();\r\n\t\tthis.socialNetworksForm.valueChanges\r\n\t\t\t.pipe(\r\n\t\t\t\t// tslint:disable-next-line:max-line-length\r\n\t\t\t\tdebounceTime(150), // The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator, we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n\t\t\t\tdistinctUntilChanged(), // This operator will eliminate duplicate values\r\n\t\t\t\ttap(() => {\r\n\t\t\t\t\tthis.updateSocialNetworks();\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe();\r\n\t}\r\n\r\n\t// Create form\r\n\tcreateForm() {\r\n\t\tthis.socialNetworksForm = this.fb.group({\r\n\t\t\tlinkedIn: [this.socialNetworksSubject.value.linkedIn],\r\n\t\t\tfacebook: [this.socialNetworksSubject.value.facebook],\r\n\t\t\ttwitter: [this.socialNetworksSubject.value.twitter],\r\n\t\t\tinstagram: [this.socialNetworksSubject.value.instagram]\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Update social networks\r\n\t */\r\n\tupdateSocialNetworks() {\r\n\t\tthis.loadingSubject.next(true);\r\n\t\tthis.hasFormErrors = false;\r\n\t\tconst controls = this.socialNetworksForm.controls;\r\n\t\t/** check form */\r\n\t\tif (this.socialNetworksForm.invalid) {\r\n\t\t\tObject.keys(controls).forEach(controlName =>\r\n\t\t\t\tcontrols[controlName].markAsTouched()\r\n\t\t\t);\r\n\t\t\tthis.hasFormErrors = true;\r\n\t\t\tthis.loadingSubject.next(false);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst newSocialNetworks = new SocialNetworks();\r\n\t\tnewSocialNetworks.clear();\r\n\t\tnewSocialNetworks.linkedIn = controls['linkedIn'].value;\r\n\t\tnewSocialNetworks.facebook = controls['facebook'].value;\r\n\t\tnewSocialNetworks.twitter = controls['twitter'].value;\r\n\t\tnewSocialNetworks.instagram = controls['instagram'].value;\r\n\t\tthis.socialNetworksSubject.next(newSocialNetworks);\r\n\t\tthis.loadingSubject.next(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Close alert\r\n\t *\r\n\t * @param $event: Event\r\n\t */\r\n\tonAlertClose($event) {\r\n\t\tthis.hasFormErrors = false;\r\n\t}\r\n}\r\n","module.exports = \"<div>\\r\\n\\t<div class=\\\"form-group kt-form__group row\\\" *ngIf=\\\"unassignedRoles.length > 0\\\">\\r\\n\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t<mat-select placeholder=\\\"Select Role\\\" [(ngModel)]=\\\"roleIdForAdding\\\">\\r\\n\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let role of unassignedRoles\\\" value=\\\"{{ role.id }}\\\">{{role.title}}</mat-option>\\r\\n\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t<mat-hint align=\\\"start\\\">\\r\\n\\t\\t\\t\\t\\t<strong>Select Role</strong>\\r\\n\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" mat-raised-button matTooltip=\\\"Assign role\\\" (click)=\\\"assignRole()\\\" color=\\\"accent\\\">\\r\\n\\t\\t\\t\\tAssign\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"kt-separator kt-separator--dashed\\\"></div>\\r\\n\\t<h6 class=\\\"kt-section__heading\\\" *ngIf=\\\"assignedRoles.length > 0\\\">\\r\\n\\t\\tAssigned roles:\\r\\n\\t</h6>\\r\\n\\t<div class=\\\"form-group kt-form__group row\\\" *ngIf=\\\"assignedRoles.length > 0\\\">\\r\\n\\t\\t<div class=\\\"col-lg-8 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t<div class=\\\"kt-list-timeline kt-list-timeline--user-role\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"kt-list-timeline__items\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"kt-list-timeline__item m-0 p-0\\\" *ngFor=\\\"let _role of assignedRoles\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"kt-list-timeline__badge kt-list-timeline__badge--primary\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"kt-list-timeline__text\\\">{{ _role.title }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"kt-list-timeline__time\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button color=\\\"warn\\\" matTooltip=\\\"Remove role\\\" type=\\\"button\\\" (click)=\\\"unassingRole(_role)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","// Angular\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n// RxJS\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n// NGRX\r\nimport { Store, select } from '@ngrx/store';\r\n// Lodash\r\nimport { each, find, remove } from 'lodash';\r\n// State\r\nimport { AppState } from '../../../../../../core/reducers';\r\n// Auth\r\nimport { Role, selectAllRoles } from '../../../../../../core/auth';\r\n\r\n@Component({\r\n\tselector: 'kt-user-roles-list',\r\n\ttemplateUrl: './user-roles-list.component.html'\r\n})\r\nexport class UserRolesListComponent implements OnInit {\r\n\t// Public properties\r\n\t// Incoming data\r\n\t@Input() loadingSubject = new BehaviorSubject<boolean>(false);\r\n\t@Input() rolesSubject: BehaviorSubject<number[]>;\r\n\r\n\t// Roles\r\n\tallUserRoles$: Observable<Role[]>;\r\n\tallRoles: Role[] = [];\r\n\tunassignedRoles: Role[] = [];\r\n\tassignedRoles: Role[] = [];\r\n\troleIdForAdding: number;\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param store: Store<AppState>\r\n\t */\r\n\tconstructor(private store: Store<AppState>) {}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tthis.allUserRoles$ = this.store.pipe(select(selectAllRoles));\r\n\t\tthis.allUserRoles$.subscribe((res: Role[]) => {\r\n\t\t\teach(res, (_role: Role) => {\r\n\t\t\t\tthis.allRoles.push(_role);\r\n\t\t\t\tthis.unassignedRoles.push(_role);\r\n\t\t\t});\r\n\r\n\t\t\teach(this.rolesSubject.value, (roleId: number) => {\r\n\t\t\t\tconst role = find(this.allRoles, (_role: Role) => {\r\n\t\t\t\t\treturn _role.id === roleId;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (role) {\r\n\t\t\t\t\tthis.assignedRoles.push(role);\r\n\t\t\t\t\tremove(this.unassignedRoles, role);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Assign role\r\n\t */\r\n\tassignRole() {\r\n\r\n\t\tif (this.roleIdForAdding === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst role = find(this.allRoles, (_role: Role) => {\r\n\t\t\treturn _role.id === (+this.roleIdForAdding);\r\n\t\t});\r\n\r\n\t\tif (role) {\r\n\t\t\tthis.assignedRoles.push(role);\r\n\t\t\tremove(this.unassignedRoles, role);\r\n\t\t\tthis.roleIdForAdding = 0;\r\n\t\t\tthis.updateRoles();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unassign role\r\n\t *\r\n\t * @param role: Role\r\n\t */\r\n\tunassingRole(role: Role) {\r\n\t\tthis.roleIdForAdding = 0;\r\n\t\tthis.unassignedRoles.push(role);\r\n\t\tremove(this.assignedRoles, role);\r\n\t\tthis.updateRoles();\r\n\t}\r\n\r\n\t/**\r\n\t * Update roles\r\n\t */\r\n\tupdateRoles() {\r\n\t\tconst _roles = [];\r\n\t\teach(this.assignedRoles, elem => _roles.push(elem.id));\r\n\t\tthis.rolesSubject.next(_roles);\r\n\t}\r\n}\r\n","module.exports = \"<kt-portlet>\\r\\n\\t<kt-portlet-header [title]=\\\"getComponentTitle()\\\" [class]=\\\"'kt-portlet__head--lg'\\\" [viewLoading$]=\\\"loading$\\\">\\r\\n\\t\\t<ng-container ktPortletTools>\\r\\n\\t\\t\\t<a [routerLink]=\\\"['../../']\\\" class=\\\"btn btn-secondary kt-margin-r-10\\\" mat-raised-button matTooltip=\\\"Back to the users list\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"la la-arrow-left\\\"></i>\\r\\n\\t\\t\\t\\t<span class=\\\"kt-hidden-mobile\\\">Back</span>\\r\\n\\t\\t\\t</a>\\r\\n\\t\\t\\t<a href=\\\"javascript:;\\\" class=\\\"btn btn-secondary kt-margin-r-10\\\" (click)=\\\"reset()\\\" [disabled]=\\\"selectedTab !== 0\\\" mat-raised-button matTooltip=\\\"Reset changes\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"la la-cog\\\"></i>\\r\\n\\t\\t\\t\\t<span class=\\\"kt-hidden-mobile\\\">Reset</span>\\r\\n\\t\\t\\t</a>\\r\\n\\t\\t\\t<a href=\\\"javascript:;\\\" class=\\\"btn btn-primary kt-margin-r-10\\\" color=\\\"primary\\\" (click)=\\\"onSumbit(false)\\\" mat-raised-button matTooltip=\\\"Save & Continue\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"kt-hidden-mobile\\\">Save</span>\\r\\n\\t\\t\\t</a>\\r\\n\\t\\t\\t<button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" color=\\\"primary\\\">\\r\\n\\t\\t\\t\\t<mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<mat-menu #menu=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t<button mat-menu-item color=\\\"primary\\\" (click)=\\\"onSumbit(true)\\\">Save & Exit</button>\\r\\n\\t\\t\\t\\t<button mat-menu-item color=\\\"primary\\\">Save & Duplicate</button>\\r\\n\\t\\t\\t\\t<button mat-menu-item color=\\\"primary\\\" (click)=\\\"onSumbit(false)\\\">Save & Continue</button>\\r\\n\\t\\t\\t</mat-menu>\\r\\n\\t\\t</ng-container>\\r\\n\\t</kt-portlet-header>\\r\\n\\r\\n\\t<kt-portlet-body>\\r\\n\\t\\t<mat-tab-group [(selectedIndex)]=\\\"selectedTab\\\">\\r\\n\\t\\t\\t<mat-tab>\\r\\n\\t\\t\\t\\t<ng-template mat-tab-label>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"mat-tab-label-icon fa fa-user\\\"></i>\\r\\n\\t\\t\\t\\t\\tBasic info\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t<ng-template matTabContent>\\r\\n\\t\\t\\t\\t\\t<!--begin::Form-->\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"user\\\">\\r\\n\\t\\t\\t\\t\\t\\t<form [formGroup]=\\\"userForm\\\" class=\\\"kt-form kt-form--group-seperator-dashed\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<kt-alert *ngIf=\\\"hasFormErrors\\\" type=\\\"warn\\\" [showCloseButton]=\\\"true\\\" [duration]=\\\"10000\\\" (close)=\\\"onAlertClose($event)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tOh snap! Change a few things up and try submitting again.\\r\\n\\t\\t\\t\\t\\t\\t\\t</kt-alert>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"kt-form__section kt-form__section--first\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group kt-form__group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter Username\\\" formControlName=\\\"username\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error>Username is\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>required</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Username</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter Full Name\\\" formControlName=\\\"fullname\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error>Full Name is\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>required</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Full Name</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"email\\\" matInput placeholder=\\\"Enter Email\\\" formControlName=\\\"email\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-error>Email is\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>required</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Email</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group kt-form__group row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter Occupation\\\" formControlName=\\\"occupation\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Occupation</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter Company Name\\\" formControlName=\\\"companyName\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Company Name</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-4 kt-margin-bottom-20-mobile\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Enter Phone\\\" formControlName=\\\"phone\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Please enter\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Phone</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<!--end::Form-->\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t<mat-tab [disabled]=\\\"!user || !user.id\\\">\\r\\n\\t\\t\\t\\t<ng-template mat-tab-label>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"mat-tab-label-icon fa fa-address-book\\\"></i>\\r\\n\\t\\t\\t\\t\\tUser address\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t<ng-template matTabContent>\\r\\n\\t\\t\\t\\t\\t<kt-address [(addressSubject)]=\\\"addressSubject\\\"></kt-address>\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t<mat-tab [disabled]=\\\"!user || !user.id\\\">\\r\\n\\t\\t\\t\\t<ng-template mat-tab-label>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"mat-tab-label-icon fab fa-facebook\\\"></i>\\r\\n\\t\\t\\t\\t\\tSocial Nerworks\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t<ng-template matTabContent>\\r\\n\\t\\t\\t\\t\\t<kt-social-networks [(socialNetworksSubject)]=\\\"soicialNetworksSubject\\\"></kt-social-networks>\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t<mat-tab *ngIf=\\\"user\\\" [disabled]=\\\"!user || !user.id\\\">\\r\\n\\t\\t\\t\\t<ng-template mat-tab-label>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"mat-tab-label-icon fa fa-unlock\\\"></i>\\r\\n\\t\\t\\t\\t\\tUser roles\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t<ng-template matTabContent>\\r\\n\\t\\t\\t\\t\\t<kt-user-roles-list [(rolesSubject)]=\\\"rolesSubject\\\"></kt-user-roles-list>\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t<mat-tab *ngIf=\\\"user\\\" [disabled]=\\\"!user || !user.id\\\">\\r\\n\\t\\t\\t\\t<ng-template mat-tab-label>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"mat-tab-label-icon fa fa-exchange-alt\\\"></i>\\r\\n\\t\\t\\t\\t\\tChange password\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t<ng-template matTabContent>\\r\\n\\t\\t\\t\\t\\t<kt-change-password [userId]=\\\"user.id\\\"></kt-change-password>\\r\\n\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t</mat-tab>\\r\\n\\t\\t</mat-tab-group>\\r\\n\\t</kt-portlet-body>\\r\\n</kt-portlet>\\r\\n\"","// Angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// RxJS\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\n// NGRX\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\nimport { AppState } from '../../../../../core/reducers';\r\n// Layout\r\nimport { SubheaderService, LayoutConfigService } from '../../../../../core/_base/layout';\r\nimport { LayoutUtilsService, MessageType } from '../../../../../core/_base/crud';\r\n// Services and Models\r\nimport {\r\n\tUser,\r\n\tUserUpdated,\r\n\tAddress,\r\n\tSocialNetworks,\r\n\tselectHasUsersInStore,\r\n\tselectUserById,\r\n\tUserOnServerCreated,\r\n\tselectLastCreatedUserId,\r\n\tselectUsersActionLoading\r\n} from '../../../../../core/auth';\r\n\r\n@Component({\r\n\tselector: 'kt-user-edit',\r\n\ttemplateUrl: './user-edit.component.html',\r\n})\r\nexport class UserEditComponent implements OnInit, OnDestroy {\r\n\t// Public properties\r\n\tuser: User;\r\n\tuserId$: Observable<number>;\r\n\toldUser: User;\r\n\tselectedTab: number = 0;\r\n\tloading$: Observable<boolean>;\r\n\trolesSubject = new BehaviorSubject<number[]>([]);\r\n\taddressSubject = new BehaviorSubject<Address>(new Address());\r\n\tsoicialNetworksSubject = new BehaviorSubject<SocialNetworks>(new SocialNetworks());\r\n\tuserForm: FormGroup;\r\n\thasFormErrors: boolean = false;\r\n\t// Private properties\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param activatedRoute: ActivatedRoute\r\n\t * @param router: Router\r\n\t * @param userFB: FormBuilder\r\n\t * @param subheaderService: SubheaderService\r\n\t * @param layoutUtilsService: LayoutUtilsService\r\n\t * @param store: Store<AppState>\r\n\t * @param layoutConfigService: LayoutConfigService\r\n\t */\r\n\tconstructor(private activatedRoute: ActivatedRoute,\r\n\t\tprivate router: Router,\r\n\t\tprivate userFB: FormBuilder,\r\n\t\tprivate subheaderService: SubheaderService,\r\n\t\tprivate layoutUtilsService: LayoutUtilsService,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate layoutConfigService: LayoutConfigService) { }\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tthis.loading$ = this.store.pipe(select(selectUsersActionLoading));\r\n\r\n\t\tconst routeSubscription =  this.activatedRoute.params.subscribe(params => {\r\n\t\t\tconst id = params['id'];\r\n\t\t\tif (id && id > 0) {\r\n\t\t\t\tthis.store.pipe(select(selectUserById(id))).subscribe(res => {\r\n\t\t\t\t\tif (res) {\r\n\t\t\t\t\t\tthis.user = res;\r\n\t\t\t\t\t\tthis.rolesSubject.next(this.user.roles);\r\n\t\t\t\t\t\tthis.addressSubject.next(this.user.address);\r\n\t\t\t\t\t\tthis.soicialNetworksSubject.next(this.user.socialNetworks);\r\n\t\t\t\t\t\tthis.oldUser = Object.assign({}, this.user);\r\n\t\t\t\t\t\tthis.initUser();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.user = new User();\r\n\t\t\t\tthis.user.clear();\r\n\t\t\t\tthis.rolesSubject.next(this.user.roles);\r\n\t\t\t\tthis.addressSubject.next(this.user.address);\r\n\t\t\t\tthis.soicialNetworksSubject.next(this.user.socialNetworks);\r\n\t\t\t\tthis.oldUser = Object.assign({}, this.user);\r\n\t\t\t\tthis.initUser();\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.subscriptions.push(routeSubscription);\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.subscriptions.forEach(sb => sb.unsubscribe());\r\n\t}\r\n\r\n\t/**\r\n\t * Init user\r\n\t */\r\n\tinitUser() {\r\n\t\tthis.createForm();\r\n\t\tif (!this.user.id) {\r\n\t\t\tthis.subheaderService.setTitle('Create user');\r\n\t\t\tthis.subheaderService.setBreadcrumbs([\r\n\t\t\t\t{ title: 'User Management', page: `user-management` },\r\n\t\t\t\t{ title: 'Users',  page: `user-management/users` },\r\n\t\t\t\t{ title: 'Create user', page: `user-management/users/add` }\r\n\t\t\t]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.subheaderService.setTitle('Edit user');\r\n\t\tthis.subheaderService.setBreadcrumbs([\r\n\t\t\t{ title: 'User Management', page: `user-management` },\r\n\t\t\t{ title: 'Users',  page: `user-management/users` },\r\n\t\t\t{ title: 'Edit user', page: `user-management/users/edit`, queryParams: { id: this.user.id } }\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * Create form\r\n\t */\r\n\tcreateForm() {\r\n\t\tthis.userForm = this.userFB.group({\r\n\t\t\tusername: [this.user.username, Validators.required],\r\n\t\t\tfullname: [this.user.fullname, Validators.required],\r\n\t\t\temail: [this.user.email, Validators.email],\r\n\t\t\tphone: [this.user.phone],\r\n\t\t\tcompanyName: [this.user.companyName],\r\n\t\t\toccupation: [this.user.occupation]\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Redirect to list\r\n\t *\r\n\t */\r\n\tgoBackWithId() {\r\n\t\tconst url = `${this.layoutConfigService.getCurrentMainRoute()}/user-management/users`;\r\n\t\tthis.router.navigateByUrl(url, { relativeTo: this.activatedRoute });\r\n\t}\r\n\r\n\t/**\r\n\t * Refresh user\r\n\t *\r\n\t * @param isNew: boolean\r\n\t * @param id: number\r\n\t */\r\n\trefreshUser(isNew: boolean = false, id = 0) {\r\n\t\tlet url = this.router.url;\r\n\t\tif (!isNew) {\r\n\t\t\tthis.router.navigate([url], { relativeTo: this.activatedRoute });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\turl = `${this.layoutConfigService.getCurrentMainRoute()}/user-management/users/edit/${id}`;\r\n\t\tthis.router.navigateByUrl(url, { relativeTo: this.activatedRoute });\r\n\t}\r\n\r\n\t/**\r\n\t * Reset\r\n\t */\r\n\treset() {\r\n\t\tthis.user = Object.assign({}, this.oldUser);\r\n\t\tthis.createForm();\r\n\t\tthis.hasFormErrors = false;\r\n\t\tthis.userForm.markAsPristine();\r\n        this.userForm.markAsUntouched();\r\n        this.userForm.updateValueAndValidity();\r\n\t}\r\n\r\n\t/**\r\n\t * Save data\r\n\t *\r\n\t * @param withBack: boolean\r\n\t */\r\n\tonSumbit(withBack: boolean = false) {\r\n\t\tthis.hasFormErrors = false;\r\n\t\tconst controls = this.userForm.controls;\r\n\t\t/** check form */\r\n\t\tif (this.userForm.invalid) {\r\n\t\t\tObject.keys(controls).forEach(controlName =>\r\n\t\t\t\tcontrols[controlName].markAsTouched()\r\n\t\t\t);\r\n\r\n\t\t\tthis.hasFormErrors = true;\r\n\t\t\tthis.selectedTab = 0;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst editedUser = this.prepareUser();\r\n\r\n\t\tif (editedUser.id > 0) {\r\n\t\t\tthis.updateUser(editedUser, withBack);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.addUser(editedUser, withBack);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns prepared data for save\r\n\t */\r\n\tprepareUser(): User {\r\n\t\tconst controls = this.userForm.controls;\r\n\t\tconst _user = new User();\r\n\t\t_user.clear();\r\n\t\t_user.roles = this.rolesSubject.value;\r\n\t\t_user.address = this.addressSubject.value;\r\n\t\t_user.socialNetworks = this.soicialNetworksSubject.value;\r\n\t\t_user.accessToken = this.user.accessToken;\r\n\t\t_user.refreshToken = this.user.refreshToken;\r\n\t\t_user.pic = this.user.pic;\r\n\t\t_user.id = this.user.id;\r\n\t\t_user.username = controls['username'].value;\r\n\t\t_user.email = controls['email'].value;\r\n\t\t_user.fullname = controls['fullname'].value;\r\n\t\t_user.occupation = controls['occupation'].value;\r\n\t\t_user.phone = controls['phone'].value;\r\n\t\t_user.companyName = controls['companyName'].value;\r\n\t\t_user.password = this.user.password;\r\n\t\treturn _user;\r\n\t}\r\n\r\n\t/**\r\n\t * Add User\r\n\t *\r\n\t * @param _user: User\r\n\t * @param withBack: boolean\r\n\t */\r\n\taddUser(_user: User, withBack: boolean = false) {\r\n\t\tthis.store.dispatch(new UserOnServerCreated({ user: _user }));\r\n\t\tconst addSubscription = this.store.pipe(select(selectLastCreatedUserId)).subscribe(newId => {\r\n\t\t\tconst message = `New user successfully has been added.`;\r\n\t\t\tthis.layoutUtilsService.showActionNotification(message, MessageType.Create, 5000, true, true);\r\n\t\t\tif (newId) {\r\n\t\t\t\tif (withBack) {\r\n\t\t\t\t\tthis.goBackWithId();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.refreshUser(true, newId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.subscriptions.push(addSubscription);\r\n\t}\r\n\r\n\t/**\r\n\t * Update user\r\n\t *\r\n\t * @param _user: User\r\n\t * @param withBack: boolean\r\n\t */\r\n\tupdateUser(_user: User, withBack: boolean = false) {\r\n\t\t// Update User\r\n\t\t// tslint:disable-next-line:prefer-const\r\n\r\n\t\tconst updatedUser: Update<User> = {\r\n\t\t\tid: _user.id,\r\n\t\t\tchanges: _user\r\n\t\t};\r\n\t\tthis.store.dispatch(new UserUpdated( { partialUser: updatedUser, user: _user }));\r\n\t\tconst message = `User successfully has been saved.`;\r\n\t\tthis.layoutUtilsService.showActionNotification(message, MessageType.Update, 5000, true, true);\r\n\t\tif (withBack) {\r\n\t\t\tthis.goBackWithId();\r\n\t\t} else {\r\n\t\t\tthis.refreshUser(false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns component title\r\n\t */\r\n\tgetComponentTitle() {\r\n\t\tlet result = 'Create user';\r\n\t\tif (!this.user || !this.user.id) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tresult = `Edit user - ${this.user.fullname}`;\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Close Alert\r\n\t *\r\n\t * @param $event: Event\r\n\t */\r\n\tonAlertClose($event) {\r\n\t\tthis.hasFormErrors = false;\r\n\t}\r\n}\r\n","module.exports = \"<kt-portlet>\\r\\n\\t<!-- PORTLET LOADING | Binded to TABLE Datasource -->\\r\\n\\t<!-- See prop => '~/core/_crud/models/data-sources/_base.datasource.ts' (loading$) -->\\r\\n\\t<kt-portlet-header [title]=\\\"'Users list'\\\" [class]=\\\"'kt-portlet__head--lg'\\\" [viewLoading$]=\\\"dataSource.loading$\\\">\\r\\n\\t\\t<ng-container ktPortletTools>\\r\\n\\t\\t\\t<button [routerLink]=\\\"['../users/add']\\\" mat-raised-button color=\\\"primary\\\" matTooltip=\\\"Create new User\\\">New user</button>\\r\\n\\t\\t\\t<!-- Buttons (Material Angular) | See off.documenations 'https://material.angular.io/components/button/overview' -->\\r\\n\\t\\t\\t<!-- mat-raised-button | Rectangular contained button w/ elevation  -->\\r\\n\\t\\t</ng-container>\\r\\n\\t</kt-portlet-header>\\r\\n\\t<!-- end::Header -->\\r\\n\\r\\n\\t<!-- start::Body (attribute: ktPortletBody) -->\\r\\n\\t<kt-portlet-body>\\r\\n\\t\\t<!-- start::FILTERS & GROUP ACTIONS -->\\r\\n\\t\\t<div class=\\\"kt-form\\\">\\r\\n\\t\\t\\t<!-- start::FILTERS -->\\r\\n\\t\\t\\t<div class=\\\"kt-form__filtration\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row align-items-center\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-2 kt-margin-bottom-10-mobile\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field class=\\\"mat-form-field-fluid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Search user\\\" #searchInput placeholder=\\\"Search\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<strong>Search</strong> in all fields\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-hint>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- end::FILTERS -->\\r\\n\\r\\n\\t\\t\\t<!-- start::GROUP ACTIONS -->\\r\\n\\t\\t\\t<!-- Group actions list: 'Delete selected' | 'Fetch selected' | 'Update status for selected' -->\\r\\n\\t\\t\\t<!-- Group actions are shared for all LISTS -->\\r\\n\\t\\t\\t<div class=\\\"row align-items-center collapse kt-form__group-actions kt-margin-top-20 kt-margin-bottom-20\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'show' : selection.selected.length > 0}\\\"><!-- We show 'Group Actions' div if smth are selected -->\\r\\n\\t\\t\\t\\t<div class=\\\"col-xl-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"kt-form__group kt-form__group--inline\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"kt-form__label kt-form__label-no-wrap\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"kt--font-bold kt-font-danger-\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span translate=\\\"ECOMMERCE.COMMON.SELECTED_RECORDS_COUNT\\\"></span> {{ selection.selected.length }}\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- selectedCountsTitle => function from codeBehind (users-list.component.ts file) -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- selectedCountsTitle => just returns title of selected items count -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- for example: Selected records count: 4 -->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"kt-form__control kt-form__group--inline\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"fetchUsers()\\\" mat-raised-button matTooltip=\\\"Fetch selected users\\\"  class=\\\"mat-button-mt-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>clear_all</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tFetch Selected\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- end::GROUP ACTIONS -->\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- end::FILTERS & GROUP ACTIONS -->\\r\\n\\r\\n\\t\\t<!-- MATERIAL TABLE | Binded to datasources -->\\r\\n\\t\\t<!-- See off.documentations 'https://material.angular.io/components/table/overview' -->\\r\\n\\t\\t<div class=\\\"mat-table__wrapper\\\">\\r\\n\\t\\t\\t<mat-table class=\\\"lmat-elevation-z8\\\"\\r\\n\\t\\t\\t\\t#table\\r\\n\\t\\t\\t\\t[dataSource]=\\\"dataSource\\\"\\r\\n\\t\\t\\t\\tmatSort\\r\\n\\t\\t\\t\\t#sort1=\\\"matSort\\\"\\r\\n\\t\\t\\t\\tmatSortActive=\\\"id\\\"\\r\\n\\t\\t\\t\\tmatSortDirection=\\\"asc\\\"\\r\\n\\t\\t\\t\\tmatSortDisableClear>\\r\\n\\t\\t\\t\\t<!-- Checkbox Column -->\\r\\n\\r\\n\\t\\t\\t\\t<!-- Table with selection -->\\r\\n\\t\\t\\t\\t<!-- https://run.stackblitz.com/api/angular/v1?file=app%2Ftable-selection-example.ts -->\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"select\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef class=\\\"mat-column-checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\r\\n\\t\\t\\t\\t\\t\\t</mat-checkbox>\\r\\n\\t\\t\\t\\t\\t</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let row\\\" class=\\\"mat-column-checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\" [checked]=\\\"selection.isSelected(row)\\\">\\r\\n\\t\\t\\t\\t\\t\\t</mat-checkbox>\\r\\n\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"id\\\">\\r\\n\\t\\t\\t\\t\\t<!-- ATTRIBUTE mat-sort-header  for sorting | https://material.angular.io/components/sort/overview -->\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let user\\\">{{user.id}}</mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"username\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Username</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let user\\\">{{user.username}}</mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"email\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"email-cell\\\">Email</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let user\\\" class=\\\"email-cell\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a href=\\\"user-management/users#\\\" class=\\\"kt-link\\\">{{user.email}}</a>\\r\\n\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"fullname\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Full name</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let user\\\">{{user.fullname}}</mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"_roles\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef>Roles</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let user\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span>{{ getUserRolesStr(user) }}</span>\\r\\n\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"actions\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef>Actions</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let user\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button (click)=\\\"editUser(user.id)\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Edit user\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>create</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t</button>&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t<button mat-icon-button color=\\\"warn\\\" matTooltip=\\\"Delete user\\\" type=\\\"button\\\" (click)=\\\"deleteUser(user)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>delete</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n\\r\\n\\t\\t\\t\\t<mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n\\t\\t\\t</mat-table>\\r\\n\\t\\t\\t<div class=\\\"mat-table__message\\\" *ngIf=\\\"!dataSource.hasItems\\\">No records found</div><!-- Message for empty data  -->\\r\\n\\t\\t\\t<div class=\\\"mat-table__message\\\" *ngIf=\\\"dataSource.isPreloadTextViewed$ | async\\\">Please wait....</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- start: BOTTOM -->\\r\\n\\t\\t<div class=\\\"mat-table__bottom\\\">\\r\\n\\t\\t\\t<!-- MATERIAL SPINNER | Url: 'https://material.angular.io/components/progress-spinner/overview' -->\\r\\n\\t\\t\\t<mat-spinner [diameter]=\\\"20\\\" *ngIf=\\\"dataSource.loading$ | async\\\"></mat-spinner>\\r\\n\\t\\t\\t<!-- MATERIAL PAGINATOR | Binded to dasources -->\\r\\n\\t\\t\\t<!-- See off.documentations 'https://material.angular.io/components/paginator/overview' -->\\r\\n\\t\\t\\t<mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[3, 5, 10]\\\" [length]=\\\"dataSource.paginatorTotal$ | async\\\" [showFirstLastButtons]=\\\"true\\\"></mat-paginator>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- end: BOTTOM -->\\r\\n\\t</kt-portlet-body>\\r\\n\\t<!-- end::Body -->\\r\\n</kt-portlet>\\r\\n\"","import { AfterViewInit, AfterViewChecked } from '@angular/core';\r\n// Angular\r\nimport { Component, OnInit, ElementRef, ViewChild, ChangeDetectionStrategy, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n// Material\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatPaginator, MatSort, MatSnackBar } from '@angular/material';\r\n// RXJS\r\nimport { debounceTime, distinctUntilChanged, tap, skip, take, delay } from 'rxjs/operators';\r\nimport { fromEvent, merge, Observable, of, Subscription } from 'rxjs';\r\n// LODASH\r\nimport { each, find } from 'lodash';\r\n// NGRX\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AppState } from '../../../../../core/reducers';\r\n\r\n// Services\r\nimport { LayoutUtilsService, MessageType, QueryParamsModel } from '../../../../../core/_base/crud';\r\n// Models\r\nimport {\r\n\tUser,\r\n\tRole,\r\n\tUsersDataSource,\r\n\tUserDeleted,\r\n\tUsersPageRequested,\r\n\tselectUserById,\r\n\tselectAllRoles\r\n} from '../../../../../core/auth';\r\nimport { SubheaderService } from '../../../../../core/_base/layout';\r\n\r\n// Table with EDIT item in MODAL\r\n// ARTICLE for table with sort/filter/paginator\r\n// https://blog.angular-university.io/angular-material-data-table/\r\n// https://v5.material.angular.io/components/table/overview\r\n// https://v5.material.angular.io/components/sort/overview\r\n// https://v5.material.angular.io/components/table/overview#sorting\r\n// https://www.youtube.com/watch?v=NSt9CI3BXv4\r\n@Component({\r\n\tselector: 'kt-users-list',\r\n\ttemplateUrl: './users-list.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UsersListComponent implements OnInit, OnDestroy {\r\n\t// Table fields\r\n\tdataSource: UsersDataSource;\r\n\tdisplayedColumns = ['select', 'id', 'username', 'email', 'fullname', '_roles', 'actions'];\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild('sort1') sort: MatSort;\r\n\t// Filter fields\r\n\t@ViewChild('searchInput') searchInput: ElementRef;\r\n\tlastQuery: QueryParamsModel;\r\n\t// Selection\r\n\tselection = new SelectionModel<User>(true, []);\r\n\tusersResult: User[] = [];\r\n\tallRoles: Role[] = [];\r\n\r\n\t// Subscriptions\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\t/**\r\n\t *\r\n\t * @param activatedRoute: ActivatedRoute\r\n\t * @param store: Store<AppState>\r\n\t * @param router: Router\r\n\t * @param layoutUtilsService: LayoutUtilsService\r\n\t * @param subheaderService: SubheaderService\r\n\t */\r\n\tconstructor(\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate router: Router,\r\n\t\tprivate layoutUtilsService: LayoutUtilsService,\r\n\t\tprivate subheaderService: SubheaderService,\r\n\t\tprivate cdr: ChangeDetectorRef) {}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\t// load roles list\r\n\t\tconst rolesSubscription = this.store.pipe(select(selectAllRoles)).subscribe(res => this.allRoles = res);\r\n\t\tthis.subscriptions.push(rolesSubscription);\r\n\r\n\t\t// If the user changes the sort order, reset back to the first page.\r\n\t\tconst sortSubscription = this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n\t\tthis.subscriptions.push(sortSubscription);\r\n\r\n\t\t/* Data load will be triggered in two cases:\r\n\t\t- when a pagination event occurs => this.paginator.page\r\n\t\t- when a sort event occurs => this.sort.sortChange\r\n\t\t**/\r\n\t\tconst paginatorSubscriptions = merge(this.sort.sortChange, this.paginator.page).pipe(\r\n\t\t\ttap(() => {\r\n\t\t\t\tthis.loadUsersList();\r\n\t\t\t})\r\n\t\t)\r\n\t\t.subscribe();\r\n\t\tthis.subscriptions.push(paginatorSubscriptions);\r\n\r\n\r\n\t\t// Filtration, bind to searchInput\r\n\t\tconst searchSubscription = fromEvent(this.searchInput.nativeElement, 'keyup').pipe(\r\n\t\t\t// tslint:disable-next-line:max-line-length\r\n\t\t\tdebounceTime(150), // The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator, we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n\t\t\tdistinctUntilChanged(), // This operator will eliminate duplicate values\r\n\t\t\ttap(() => {\r\n\t\t\t\tthis.paginator.pageIndex = 0;\r\n\t\t\t\tthis.loadUsersList();\r\n\t\t\t})\r\n\t\t)\r\n\t\t.subscribe();\r\n\t\tthis.subscriptions.push(searchSubscription);\r\n\r\n\t\t// Set title to page breadCrumbs\r\n\t\tthis.subheaderService.setTitle('User management');\r\n\r\n\t\t// Init DataSource\r\n\t\tthis.dataSource = new UsersDataSource(this.store);\r\n\t\tconst entitiesSubscription = this.dataSource.entitySubject.pipe(\r\n\t\t\tskip(1),\r\n\t\t\tdistinctUntilChanged()\r\n\t\t).subscribe(res => {\r\n\t\t\tthis.usersResult = res;\r\n\t\t});\r\n\t\tthis.subscriptions.push(entitiesSubscription);\r\n\r\n\t\t// First Load\r\n\t\tof(undefined).pipe(take(1), delay(1000)).subscribe(() => { // Remove this line, just loading imitation\r\n\t\t\tthis.loadUsersList();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * On Destroy\r\n\t */\r\n\tngOnDestroy() {\r\n\t\tthis.subscriptions.forEach(el => el.unsubscribe());\r\n\t}\r\n\r\n\t/**\r\n\t * Load users list\r\n\t */\r\n\tloadUsersList() {\r\n\t\tthis.selection.clear();\r\n\t\tconst queryParams = new QueryParamsModel(\r\n\t\t\tthis.filterConfiguration(),\r\n\t\t\tthis.sort.direction,\r\n\t\t\tthis.sort.active,\r\n\t\t\tthis.paginator.pageIndex,\r\n\t\t\tthis.paginator.pageSize\r\n\t\t);\r\n\t\tthis.store.dispatch(new UsersPageRequested({ page: queryParams }));\r\n\t\tthis.selection.clear();\r\n\t}\r\n\r\n\t/** FILTRATION */\r\n\tfilterConfiguration(): any {\r\n\t\tconst filter: any = {};\r\n\t\tconst searchText: string = this.searchInput.nativeElement.value;\r\n\r\n\t\tfilter.lastName = searchText;\r\n\r\n\t\tfilter.username = searchText;\r\n\t\tfilter.email = searchText;\r\n\t\tfilter.fillname = searchText;\r\n\t\treturn filter;\r\n\t}\r\n\r\n\t/** ACTIONS */\r\n\t/**\r\n\t * Delete user\r\n\t *\r\n\t * @param _item: User\r\n\t */\r\n\tdeleteUser(_item: User) {\r\n\t\tconst _title: string = 'User Delete';\r\n\t\tconst _description: string = 'Are you sure to permanently delete this user?';\r\n\t\tconst _waitDesciption: string = 'User is deleting...';\r\n\t\tconst _deleteMessage = `User has been deleted`;\r\n\r\n\t\tconst dialogRef = this.layoutUtilsService.deleteElement(_title, _description, _waitDesciption);\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.store.dispatch(new UserDeleted({ id: _item.id }));\r\n\t\t\tthis.layoutUtilsService.showActionNotification(_deleteMessage, MessageType.Delete);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch selected rows\r\n\t */\r\n\tfetchUsers() {\r\n\t\tconst messages = [];\r\n\t\tthis.selection.selected.forEach(elem => {\r\n\t\t\tmessages.push({\r\n\t\t\t\ttext: `${elem.fullname}, ${elem.email}`,\r\n\t\t\t\tid: elem.id.toString(),\r\n\t\t\t\tstatus: elem.username\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.layoutUtilsService.fetchElements(messages);\r\n\t}\r\n\r\n\t/**\r\n\t * Check all rows are selected\r\n\t */\r\n\tisAllSelected(): boolean {\r\n\t\tconst numSelected = this.selection.selected.length;\r\n\t\tconst numRows = this.usersResult.length;\r\n\t\treturn numSelected === numRows;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle selection\r\n\t */\r\n\tmasterToggle() {\r\n\t\tif (this.selection.selected.length === this.usersResult.length) {\r\n\t\t\tthis.selection.clear();\r\n\t\t} else {\r\n\t\t\tthis.usersResult.forEach(row => this.selection.select(row));\r\n\t\t}\r\n\t}\r\n\r\n\t/* UI */\r\n\t/**\r\n\t * Returns user roles string\r\n\t *\r\n\t * @param user: User\r\n\t */\r\n\tgetUserRolesStr(user: User): string {\r\n\t\tconst titles: string[] = [];\r\n\t\teach(user.roles, (roleId: number) => {\r\n\t\t\tconst _role = find(this.allRoles, (role: Role) => role.id === roleId);\r\n\t\t\tif (_role) {\r\n\t\t\t\ttitles.push(_role.title);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn titles.join(', ');\r\n\t}\r\n\r\n\t/**\r\n\t * Redirect to edit page\r\n\t *\r\n\t * @param id\r\n\t */\r\n\teditUser(id) {\r\n\t\tthis.router.navigate(['../users/edit', id], { relativeTo: this.activatedRoute });\r\n\t}\r\n}\r\n"],"sourceRoot":""}